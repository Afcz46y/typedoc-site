{
	"$schema": "https://json-schema.org/draft-07/schema",
	"title": "JSON Schema for typedoc.json",
	"type": "object",
	"properties": {
		"options": {
			"description": "Specify a json option file that should be loaded. If not specified TypeDoc will look for 'typedoc.json' in the current directory",
			"type": "string"
		},
		"tsconfig": {
			"description": "Specify a typescript config file that should be loaded. If not specified TypeDoc will look for 'tsconfig.json' in the current directory.",
			"type": "string"
		},
		"entryPoints": {
			"description": "The entry points of your library, which files should be documented as available to consumers.",
			"type": "array",
			"items": {
				"type": "string"
			},
			"default": []
		},
		"exclude": {
			"description": "Define paths to be excluded when expanding a directory that was specified as an entry point.",
			"type": "array",
			"items": {
				"type": "string"
			},
			"default": []
		},
		"externalPattern": {
			"description": "Define patterns for files that should be considered being external.",
			"type": "array",
			"items": {
				"type": "string"
			},
			"default": [
				"**/node_modules/**"
			]
		},
		"excludeExternals": {
			"description": "Prevent externally resolved symbols from being documented.",
			"type": "boolean",
			"default": false
		},
		"excludeNotDocumented": {
			"description": "Prevent symbols that are not explicitly documented from appearing in the results.",
			"type": "boolean",
			"default": false
		},
		"excludePrivate": {
			"description": "Ignores private variables and methods",
			"type": "boolean",
			"default": false
		},
		"excludeProtected": {
			"description": "Ignores protected variables and methods",
			"type": "boolean",
			"default": false
		},
		"disableSources": {
			"description": "Disables setting the source of a reflection when documenting it.",
			"type": "boolean",
			"default": false
		},
		"includes": {
			"description": "Specifies the location to look for included documents (use [[include:FILENAME]] in comments).",
			"type": "string",
			"default": ""
		},
		"media": {
			"description": "Specifies the location with media files that should be copied to the output directory.",
			"type": "string",
			"default": ""
		},
		"out": {
			"description": "Specifies the location the documentation should be written to.",
			"type": "string",
			"default": ""
		},
		"json": {
			"description": "Specifies the location and file name a json file describing the project is written to.",
			"type": "string",
			"default": ""
		},
		"theme": {
			"description": "Specify the path to the theme that should be used or 'default' or 'minimal' to use built-in themes.",
			"type": "string",
			"default": "default"
		},
		"name": {
			"description": "Set the name of the project that will be used in the header of the template.",
			"type": "string",
			"default": ""
		},
		"includeVersion": {
			"description": "Add the package version to the project name.",
			"type": "boolean",
			"default": false
		},
		"excludeTags": {
			"description": "Remove the listed tags from doc comments.",
			"type": "array",
			"items": {
				"type": "string"
			},
			"default": []
		},
		"readme": {
			"description": "Path to the readme file that should be displayed on the index page. Pass `none` to disable the index page and start the documentation on the globals page.",
			"type": "string",
			"default": ""
		},
		"defaultCategory": {
			"description": "Specifies the default category for reflections without a category.",
			"type": "string",
			"default": "Other"
		},
		"categoryOrder": {
			"description": "Specifies the order in which categories appear. * indicates the relative order for categories not in the list.",
			"type": "array",
			"items": {
				"type": "string"
			},
			"default": []
		},
		"categorizeByGroup": {
			"description": "Specifies whether categorization will be done at the group level.",
			"type": "boolean",
			"default": true
		},
		"gitRevision": {
			"description": "Use specified revision instead of the last revision for linking to GitHub source files.",
			"type": "string",
			"default": ""
		},
		"gitRemote": {
			"description": "Use the specified remote for linking to GitHub source files.",
			"type": "string",
			"default": "origin"
		},
		"gaID": {
			"description": "Set the Google Analytics tracking ID and activate tracking code.",
			"type": "string",
			"default": ""
		},
		"gaSite": {
			"description": "Set the site name for Google Analytics. Defaults to `auto`.",
			"type": "string",
			"default": "auto"
		},
		"hideGenerator": {
			"description": "Do not print the TypeDoc link at the end of the page.",
			"type": "boolean",
			"default": false
		},
		"toc": {
			"description": "Define the contents of the top level table of contents as a comma-separated list of global symbols.",
			"type": "array",
			"items": {
				"type": "string"
			},
			"default": []
		},
		"disableOutputCheck": {
			"description": "Should TypeDoc disable the testing and cleaning of the output directory?",
			"type": "boolean",
			"default": false
		},
		"showConfig": {
			"description": "Print the resolved configuration and exit",
			"type": "boolean",
			"default": false
		},
		"plugin": {
			"description": "Specify the npm plugins that should be loaded. Omit to load all installed plugins, set to 'none' to load no plugins.",
			"type": "array",
			"items": {
				"type": "string"
			},
			"default": []
		},
		"logger": {
			"description": "Specify the logger that should be used, 'none' or 'console'",
			"enum": [
				"console",
				"none"
			],
			"default": "console"
		},
		"logLevel": {
			"description": "Specify what level of logging should be used.",
			"enum": [
				"Verbose",
				"Info",
				"Warn",
				"Error"
			],
			"default": 1
		},
		"listInvalidSymbolLinks": {
			"description": "Emits a list of broken symbol [[navigation]] links after documentation generation",
			"type": "boolean",
			"default": false
		},
		"markedOptions": {
			"description": "Specify the options passed to Marked, the Markdown parser used by TypeDoc"
		}
	}
}