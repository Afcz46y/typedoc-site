{
	"id": 0,
	"name": "TypeDoc Documentation",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"children": [
		{
			"id": 935,
			"name": "JSONOutput",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"comment": {
				"shortText": "Contains interfaces which describe the JSON output. Each interface is related to a specific type of serializer.",
				"text": "## Plugins\nPlugins which modify the serialization process can use declaration merging\nto add custom properties to the exported interfaces.\nFor example, if your custom serializer adds a property to all [[Reflection]] objects:\n```ts\ndeclare module 'typedoc/dist/lib/serialization/schema' {\n    export interface AbstractReflection {\n        myCustomProp: boolean\n    }\n}\n```\n\nIf a plugin defines a new Model type, [[ModelToObject]] will not pick up the serializer type and\nthe resulting type will not be included in the return type of {@link Serializer.toObject}.\nTo fix this, use declaration merging to augment the [[Serializer]] class.\n```ts\ndeclare module 'typedoc/dist/lib/serialization/serializer' {\n    export interface Serializer {\n        toObject(value: CustomModel, obj?: Partial<CustomModel>): CustomOutput\n    }\n}\n```\n\nFor documentation on the JSON output properties, view the corresponding model.\n"
			},
			"children": [
				{
					"id": 1082,
					"name": "ArrayType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1084,
							"name": "elementType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of the array elements."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/array.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1083,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/array.ts",
									"line": 21,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "array"
							},
							"defaultValue": "\"array\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1084,
								1083
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 242,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.ArrayType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "elementType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1181,
					"name": "Comment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1184,
							"name": "returns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The text of the ```@returns``` tag if present."
							},
							"sources": [
								{
									"fileName": "src/lib/models/comments/comment.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1182,
							"name": "shortText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The abstract of the comment. TypeDoc interprets the first paragraph of a comment\nas the abstract."
							},
							"sources": [
								{
									"fileName": "src/lib/models/comments/comment.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1185,
							"name": "tags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "All associated tags."
							},
							"sources": [
								{
									"fileName": "src/lib/models/comments/comment.ts",
									"line": 30,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1186,
											"name": "CommentTag"
										}
									}
								]
							},
							"defaultValue": "..."
						},
						{
							"id": 1183,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The full body text of the comment. Excludes the [[shortText]]."
							},
							"sources": [
								{
									"fileName": "src/lib/models/comments/comment.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1184,
								1182,
								1185,
								1183
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 350,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "M.Comment"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "shortText"
												},
												{
													"type": "literal",
													"value": "text"
												},
												{
													"type": "literal",
													"value": "returns"
												},
												{
													"type": "literal",
													"value": "tags"
												}
											]
										}
									],
									"name": "S"
								}
							],
							"name": "Partial"
						}
					]
				},
				{
					"id": 1186,
					"name": "CommentTag",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1188,
							"name": "param",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 355,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1187,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 354,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1189,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The actual body text of this tag."
							},
							"sources": [
								{
									"fileName": "src/lib/models/comments/tag.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1188,
								1187,
								1189
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 353,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.CommentTag"
								},
								{
									"type": "literal",
									"value": "text"
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1085,
					"name": "ConditionalType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1087,
							"name": "checkType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1088,
							"name": "extendsType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1090,
							"name": "falseType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1089,
							"name": "trueType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1086,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/conditional.ts",
									"line": 15,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"conditional\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1087,
								1088,
								1090,
								1089,
								1086
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 246,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.ConditionalType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "checkType"
										},
										{
											"type": "literal",
											"value": "extendsType"
										},
										{
											"type": "literal",
											"value": "trueType"
										},
										{
											"type": "literal",
											"value": "falseType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1057,
					"name": "ContainerReflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1068,
							"name": "categories",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their category."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 26,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 943,
											"name": "ReflectionCategory"
										}
									}
								]
							}
						},
						{
							"id": 1069,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The children of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1003,
											"name": "DeclarationReflection"
										}
									}
								]
							}
						},
						{
							"id": 1066,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1079,
								"name": "Reflection.comment"
							}
						},
						{
							"id": 1067,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1080,
								"name": "Reflection.decorates"
							}
						},
						{
							"id": 1061,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1074,
								"name": "Reflection.decorators"
							}
						},
						{
							"id": 1060,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1073,
								"name": "Reflection.flags"
							}
						},
						{
							"id": 1070,
							"name": "groups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their kind."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 938,
											"name": "ReflectionGroup"
										}
									}
								]
							}
						},
						{
							"id": 1064,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1077,
								"name": "Reflection.id"
							}
						},
						{
							"id": 1063,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1076,
								"name": "Reflection.kind"
							}
						},
						{
							"id": 1065,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1078,
								"name": "Reflection.kindString"
							}
						},
						{
							"id": 1062,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1075,
								"name": "Reflection.name"
							}
						},
						{
							"id": 1059,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1072,
								"name": "Reflection.originalName"
							}
						},
						{
							"id": 1058,
							"name": "sources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 206,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1190,
											"name": "SourceReference"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1068,
								1069,
								1066,
								1067,
								1061,
								1060,
								1070,
								1064,
								1063,
								1065,
								1062,
								1059,
								1058
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 203,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1071,
							"name": "Reflection"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1408,
									"name": "M.ContainerReflection"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "children"
										},
										{
											"type": "literal",
											"value": "groups"
										},
										{
											"type": "literal",
											"value": "categories"
										}
									]
								}
							],
							"name": "S"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1003,
							"name": "DeclarationReflection"
						},
						{
							"type": "reference",
							"id": 1043,
							"name": "ProjectReflection"
						}
					]
				},
				{
					"id": 1003,
					"name": "DeclarationReflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1017,
							"name": "categories",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their category."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 26,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 943,
											"name": "ReflectionCategory"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1068,
								"name": "ContainerReflection.categories"
							}
						},
						{
							"id": 1018,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The children of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1003,
											"name": "DeclarationReflection"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1069,
								"name": "ContainerReflection.children"
							}
						},
						{
							"id": 1015,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1066,
								"name": "ContainerReflection.comment"
							}
						},
						{
							"id": 1016,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1067,
								"name": "ContainerReflection.decorates"
							}
						},
						{
							"id": 1010,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "ContainerReflection.decorators"
							}
						},
						{
							"id": 1023,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default value of this reflection.",
								"text": "Applies to function parameters.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 83,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1028,
							"name": "extendedBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that extend this reflection (e.g. the subclasses)."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 120,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							}
						},
						{
							"id": 1027,
							"name": "extendedTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types this reflection extends (e.g. the parent classes)."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 115,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							}
						},
						{
							"id": 1009,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1060,
								"name": "ContainerReflection.flags"
							}
						},
						{
							"id": 1005,
							"name": "getSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 190,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 975,
														"name": "SignatureReflection"
													}
												]
											}
										]
									}
								]
							}
						},
						{
							"id": 1019,
							"name": "groups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their kind."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 938,
											"name": "ReflectionGroup"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1070,
								"name": "ContainerReflection.groups"
							}
						},
						{
							"id": 1013,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "ContainerReflection.id"
							}
						},
						{
							"id": 1026,
							"name": "implementationOf",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection this reflection is the implementation of.",
								"text": "Applies to class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 110,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1030,
							"name": "implementedBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that implement this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 130,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							}
						},
						{
							"id": 1029,
							"name": "implementedTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types this reflection implements."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 125,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							}
						},
						{
							"id": 1022,
							"name": "indexSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The index signature of this declaration."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 66,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 975,
										"name": "SignatureReflection"
									}
								]
							}
						},
						{
							"id": 1025,
							"name": "inheritedFrom",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection this reflection has been inherited from.",
								"text": "Applies to interface and class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 103,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1012,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "ContainerReflection.kind"
							}
						},
						{
							"id": 1014,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1065,
								"name": "ContainerReflection.kindString"
							}
						},
						{
							"id": 1011,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "ContainerReflection.name"
							}
						},
						{
							"id": 1008,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "ContainerReflection.originalName"
							}
						},
						{
							"id": 1024,
							"name": "overwrites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection that has been overwritten by this reflection.",
								"text": "Applies to interface and class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 90,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1006,
							"name": "setSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 193,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 975,
														"name": "SignatureReflection"
													}
												]
											}
										]
									}
								]
							}
						},
						{
							"id": 1021,
							"name": "signatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of call signatures attached to this declaration.",
								"text": "TypeDoc creates one declaration per function that may contain ore or more\nsignature reflections.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 975,
											"name": "SignatureReflection"
										}
									}
								]
							}
						},
						{
							"id": 1007,
							"name": "sources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 206,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1190,
											"name": "SourceReference"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "ContainerReflection.sources"
							}
						},
						{
							"id": 1020,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The type of the reflection.",
								"text": "If the reflection represents a variable or a property, this is the value type.<br />\nIf the reflection represents a signature, this is the return type.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 51,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1004,
							"name": "typeParameter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 187,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1031,
											"name": "TypeParameterReflection"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1017,
								1018,
								1015,
								1016,
								1010,
								1023,
								1028,
								1027,
								1009,
								1005,
								1019,
								1013,
								1026,
								1030,
								1029,
								1022,
								1025,
								1012,
								1014,
								1011,
								1008,
								1024,
								1006,
								1021,
								1007,
								1020,
								1004
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 170,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1057,
							"name": "ContainerReflection"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1467,
									"name": "M.DeclarationReflection"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "signatures"
										},
										{
											"type": "literal",
											"value": "indexSignature"
										},
										{
											"type": "literal",
											"value": "defaultValue"
										},
										{
											"type": "literal",
											"value": "overwrites"
										},
										{
											"type": "literal",
											"value": "inheritedFrom"
										},
										{
											"type": "literal",
											"value": "implementationOf"
										},
										{
											"type": "literal",
											"value": "extendedTypes"
										},
										{
											"type": "literal",
											"value": "extendedBy"
										},
										{
											"type": "literal",
											"value": "implementedTypes"
										},
										{
											"type": "literal",
											"value": "implementedBy"
										}
									]
								}
							],
							"name": "S"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 946,
							"name": "ReferenceReflection"
						}
					]
				},
				{
					"id": 1194,
					"name": "Decorator",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1196,
							"name": "arguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A named map of arguments the decorator is applied with."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 315,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1195,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The name of the decorator being applied."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 304,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1197,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The type declaring the decorator.\nUsually a ReferenceType instance pointing to the decorator function."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 310,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1196,
								1195,
								1197
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 361,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1353,
									"name": "M.Decorator"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "arguments"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1091,
					"name": "IndexedAccessType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1093,
							"name": "indexType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1094,
							"name": "objectType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1092,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/indexed-access.ts",
									"line": 10,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "indexedAccess"
							},
							"defaultValue": "\"indexedAccess\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1093,
								1094,
								1092
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 253,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.IndexedAccessType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "indexType"
										},
										{
											"type": "literal",
											"value": "objectType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1095,
					"name": "InferredType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1096,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1097,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/inferred.ts",
									"line": 14,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"inferred\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1096,
								1097
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 257,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.InferredType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "name"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1098,
					"name": "IntersectionType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1099,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/intersection.ts",
									"line": 19,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"intersection\""
						},
						{
							"id": 1100,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The types this union consists of."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/intersection.ts",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1081,
									"name": "SomeType"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1099,
								1100
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 261,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.IntersectionType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "types"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1101,
					"name": "IntrinsicType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1102,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The name of the intrinsic type like `string` or `boolean`."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/intrinsic.ts",
									"line": 14,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1103,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/intrinsic.ts",
									"line": 19,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "intrinsic"
							},
							"defaultValue": "\"intrinsic\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1102,
								1103
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 265,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.IntrinsicType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "name"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1126,
					"name": "LiteralType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1127,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/literal.ts",
									"line": 17,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "literal"
							},
							"defaultValue": "\"literal\""
						},
						{
							"id": 1128,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/models/types/literal.ts",
									"line": 12,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1129,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1131,
													"name": "negative",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/serialization/schema.ts",
															"line": 118,
															"character": 31
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1130,
													"name": "value",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/serialization/schema.ts",
															"line": 118,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1131,
														1130
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1127,
								1128
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 291,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.LiteralType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "value"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1144,
					"name": "MappedType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1151,
							"name": "nameType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1150,
							"name": "optionalModifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "-"
									},
									{
										"type": "literal",
										"value": "+"
									}
								]
							}
						},
						{
							"id": 1146,
							"name": "parameter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1147,
							"name": "parameterType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1149,
							"name": "readonlyModifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": "-"
									},
									{
										"type": "literal",
										"value": "+"
									}
								]
							}
						},
						{
							"id": 1148,
							"name": "templateType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1145,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/mapped.ts",
									"line": 11,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "mapped"
							},
							"defaultValue": "\"mapped\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1151,
								1150,
								1146,
								1147,
								1149,
								1148,
								1145
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 310,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.MappedType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "parameter"
										},
										{
											"type": "literal",
											"value": "parameterType"
										},
										{
											"type": "literal",
											"value": "templateType"
										},
										{
											"type": "literal",
											"value": "readonlyModifier"
										},
										{
											"type": "literal",
											"value": "optionalModifier"
										},
										{
											"type": "literal",
											"value": "nameType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1135,
					"name": "NamedTupleMemberType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1138,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 302,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1137,
							"name": "isOptional",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 301,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1136,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 300,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1139,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/tuple.ts",
									"line": 67,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "named-tuple-member"
							},
							"defaultValue": "\"named-tuple-member\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1138,
								1137,
								1136,
								1139
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 297,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.NamedTupleMember"
								},
								{
									"type": "literal",
									"value": "type"
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1104,
					"name": "OptionalType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1106,
							"name": "elementType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of the rest array elements."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/optional.ts",
									"line": 16,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1105,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/optional.ts",
									"line": 21,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "optional"
							},
							"defaultValue": "\"optional\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1106,
								1105
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 269,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.OptionalType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "elementType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 991,
					"name": "ParameterReflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 999,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1079,
								"name": "Reflection.comment"
							}
						},
						{
							"id": 1000,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1080,
								"name": "Reflection.decorates"
							}
						},
						{
							"id": 994,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1074,
								"name": "Reflection.decorators"
							}
						},
						{
							"id": 1002,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/parameter.ts",
									"line": 16,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 993,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1073,
								"name": "Reflection.flags"
							}
						},
						{
							"id": 997,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1077,
								"name": "Reflection.id"
							}
						},
						{
							"id": 996,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1076,
								"name": "Reflection.kind"
							}
						},
						{
							"id": 998,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1078,
								"name": "Reflection.kindString"
							}
						},
						{
							"id": 995,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1075,
								"name": "Reflection.name"
							}
						},
						{
							"id": 992,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1072,
								"name": "Reflection.originalName"
							}
						},
						{
							"id": 1001,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/parameter.ts",
									"line": 18,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								999,
								1000,
								994,
								1002,
								993,
								997,
								996,
								998,
								995,
								992,
								1001
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 166,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1071,
							"name": "Reflection"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1552,
									"name": "M.ParameterReflection"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "defaultValue"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1107,
					"name": "PredicateType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1110,
							"name": "asserts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "True if the type is of the form `asserts val is string`, false if\nthe type is of the form `val is string`"
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/predicate.ts",
									"line": 28,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1108,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The identifier name which is tested by the predicate."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/predicate.ts",
									"line": 22,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1111,
							"name": "targetType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The type that the identifier is tested to be.\nMay be undefined if the type is of the form `asserts val`.\nWill be defined if the type is of the form `asserts val is string` or `val is string`."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/predicate.ts",
									"line": 17,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1109,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/predicate.ts",
									"line": 33,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "predicate"
							},
							"defaultValue": "\"predicate\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1110,
								1108,
								1111,
								1109
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 273,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.PredicateType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "asserts"
										},
										{
											"type": "literal",
											"value": "targetType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1043,
					"name": "ProjectReflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1054,
							"name": "categories",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their category."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 26,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 943,
											"name": "ReflectionCategory"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1068,
								"name": "ContainerReflection.categories"
							}
						},
						{
							"id": 1055,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The children of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1003,
											"name": "DeclarationReflection"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1069,
								"name": "ContainerReflection.children"
							}
						},
						{
							"id": 1052,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1066,
								"name": "ContainerReflection.comment"
							}
						},
						{
							"id": 1053,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1067,
								"name": "ContainerReflection.decorates"
							}
						},
						{
							"id": 1047,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1061,
								"name": "ContainerReflection.decorators"
							}
						},
						{
							"id": 1046,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1060,
								"name": "ContainerReflection.flags"
							}
						},
						{
							"id": 1056,
							"name": "groups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their kind."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 938,
											"name": "ReflectionGroup"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1070,
								"name": "ContainerReflection.groups"
							}
						},
						{
							"id": 1050,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1064,
								"name": "ContainerReflection.id"
							}
						},
						{
							"id": 1049,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1063,
								"name": "ContainerReflection.kind"
							}
						},
						{
							"id": 1051,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1065,
								"name": "ContainerReflection.kindString"
							}
						},
						{
							"id": 1048,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1062,
								"name": "ContainerReflection.name"
							}
						},
						{
							"id": 1045,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1059,
								"name": "ContainerReflection.originalName"
							}
						},
						{
							"id": 1044,
							"name": "sources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 206,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1190,
											"name": "SourceReference"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1058,
								"name": "ContainerReflection.sources"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1054,
								1055,
								1052,
								1053,
								1047,
								1046,
								1056,
								1050,
								1049,
								1051,
								1048,
								1045,
								1044
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 201,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1057,
							"name": "ContainerReflection"
						}
					]
				},
				{
					"id": 1112,
					"name": "QueryType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1114,
							"name": "queryType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/query.ts",
									"line": 12,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 1095,
								"name": "InferredType"
							}
						},
						{
							"id": 1113,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/query.ts",
									"line": 14,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "query"
							},
							"defaultValue": "\"query\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1114,
								1113
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 277,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.QueryType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "queryType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 946,
					"name": "ReferenceReflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 961,
							"name": "categories",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their category."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 26,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 943,
											"name": "ReflectionCategory"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1017,
								"name": "DeclarationReflection.categories"
							}
						},
						{
							"id": 962,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The children of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1003,
											"name": "DeclarationReflection"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1018,
								"name": "DeclarationReflection.children"
							}
						},
						{
							"id": 959,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1015,
								"name": "DeclarationReflection.comment"
							}
						},
						{
							"id": 960,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1016,
								"name": "DeclarationReflection.decorates"
							}
						},
						{
							"id": 954,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1010,
								"name": "DeclarationReflection.decorators"
							}
						},
						{
							"id": 967,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default value of this reflection.",
								"text": "Applies to function parameters.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 83,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1023,
								"name": "DeclarationReflection.defaultValue"
							}
						},
						{
							"id": 972,
							"name": "extendedBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that extend this reflection (e.g. the subclasses)."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 120,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1028,
								"name": "DeclarationReflection.extendedBy"
							}
						},
						{
							"id": 971,
							"name": "extendedTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types this reflection extends (e.g. the parent classes)."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 115,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1027,
								"name": "DeclarationReflection.extendedTypes"
							}
						},
						{
							"id": 953,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1009,
								"name": "DeclarationReflection.flags"
							}
						},
						{
							"id": 949,
							"name": "getSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 190,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 975,
														"name": "SignatureReflection"
													}
												]
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1005,
								"name": "DeclarationReflection.getSignature"
							}
						},
						{
							"id": 963,
							"name": "groups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "All children grouped by their kind."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/container.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 938,
											"name": "ReflectionGroup"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1019,
								"name": "DeclarationReflection.groups"
							}
						},
						{
							"id": 957,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1013,
								"name": "DeclarationReflection.id"
							}
						},
						{
							"id": 970,
							"name": "implementationOf",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection this reflection is the implementation of.",
								"text": "Applies to class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 110,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1026,
								"name": "DeclarationReflection.implementationOf"
							}
						},
						{
							"id": 974,
							"name": "implementedBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that implement this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 130,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1030,
								"name": "DeclarationReflection.implementedBy"
							}
						},
						{
							"id": 973,
							"name": "implementedTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types this reflection implements."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 125,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1029,
								"name": "DeclarationReflection.implementedTypes"
							}
						},
						{
							"id": 966,
							"name": "indexSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The index signature of this declaration."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 66,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 975,
										"name": "SignatureReflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1022,
								"name": "DeclarationReflection.indexSignature"
							}
						},
						{
							"id": 969,
							"name": "inheritedFrom",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection this reflection has been inherited from.",
								"text": "Applies to interface and class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 103,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1025,
								"name": "DeclarationReflection.inheritedFrom"
							}
						},
						{
							"id": 956,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1012,
								"name": "DeclarationReflection.kind"
							}
						},
						{
							"id": 958,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1014,
								"name": "DeclarationReflection.kindString"
							}
						},
						{
							"id": 955,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1011,
								"name": "DeclarationReflection.name"
							}
						},
						{
							"id": 952,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1008,
								"name": "DeclarationReflection.originalName"
							}
						},
						{
							"id": 968,
							"name": "overwrites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection that has been overwritten by this reflection.",
								"text": "Applies to interface and class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 90,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1024,
								"name": "DeclarationReflection.overwrites"
							}
						},
						{
							"id": 950,
							"name": "setSignature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 193,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 975,
														"name": "SignatureReflection"
													}
												]
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1006,
								"name": "DeclarationReflection.setSignature"
							}
						},
						{
							"id": 965,
							"name": "signatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of call signatures attached to this declaration.",
								"text": "TypeDoc creates one declaration per function that may contain ore or more\nsignature reflections.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 975,
											"name": "SignatureReflection"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1021,
								"name": "DeclarationReflection.signatures"
							}
						},
						{
							"id": 951,
							"name": "sources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 206,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1190,
											"name": "SourceReference"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1007,
								"name": "DeclarationReflection.sources"
							}
						},
						{
							"id": 947,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "-1 if the reference refers to a symbol that does not exist in the documentation.\nOtherwise, the reflection ID."
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 149,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 964,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The type of the reflection.",
								"text": "If the reflection represents a variable or a property, this is the value type.<br />\nIf the reflection represents a signature, this is the return type.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/declaration.ts",
									"line": 51,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1020,
								"name": "DeclarationReflection.type"
							}
						},
						{
							"id": 948,
							"name": "typeParameter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 187,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1031,
											"name": "TypeParameterReflection"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1004,
								"name": "DeclarationReflection.typeParameter"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								961,
								962,
								959,
								960,
								954,
								967,
								972,
								971,
								953,
								949,
								963,
								957,
								970,
								974,
								973,
								966,
								969,
								956,
								958,
								955,
								952,
								968,
								950,
								965,
								951,
								947,
								964,
								948
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 142,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1003,
							"name": "DeclarationReflection"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1698,
									"name": "M.ReferenceReflection"
								},
								{
									"type": "intrinsic",
									"name": "never"
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1115,
					"name": "ReferenceType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1116,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 282,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1117,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The name of the referenced type.",
								"text": "If the symbol cannot be found cause it's not part of the documentation this\ncan be used to represent the type.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/reference.ts",
									"line": 25,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1118,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/reference.ts",
									"line": 17,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "reference"
							},
							"defaultValue": "\"reference\""
						},
						{
							"id": 1119,
							"name": "typeArguments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The type arguments of this reference."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/reference.ts",
									"line": 30,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1116,
								1117,
								1118,
								1119
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 279,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.ReferenceType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "typeArguments"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1071,
					"name": "Reflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1079,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							}
						},
						{
							"id": 1080,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							}
						},
						{
							"id": 1074,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							}
						},
						{
							"id": 1073,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							}
						},
						{
							"id": 1077,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1076,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							}
						},
						{
							"id": 1078,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1075,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1072,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1079,
								1080,
								1074,
								1073,
								1077,
								1076,
								1078,
								1075,
								1072
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 209,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1198,
									"name": "M.Reflection"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "id"
										},
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "kind"
										},
										{
											"type": "literal",
											"value": "kindString"
										},
										{
											"type": "literal",
											"value": "comment"
										},
										{
											"type": "literal",
											"value": "decorates"
										}
									]
								}
							],
							"name": "S"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 975,
							"name": "SignatureReflection"
						},
						{
							"type": "reference",
							"id": 991,
							"name": "ParameterReflection"
						},
						{
							"type": "reference",
							"id": 1031,
							"name": "TypeParameterReflection"
						},
						{
							"type": "reference",
							"id": 1057,
							"name": "ContainerReflection"
						}
					]
				},
				{
					"id": 943,
					"name": "ReflectionCategory",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 944,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 139,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						},
						{
							"id": 945,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The title, a string representation of this category."
							},
							"sources": [
								{
									"fileName": "src/lib/models/ReflectionCategory.ts",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								944,
								945
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 138,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.ReflectionCategory"
								},
								{
									"type": "literal",
									"value": "title"
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1168,
					"name": "ReflectionFlags",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1176,
							"name": "hasExportAssignment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1177,
							"name": "isAbstract",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1178,
							"name": "isConst",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1173,
							"name": "isExternal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1179,
							"name": "isLet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1174,
							"name": "isOptional",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1169,
							"name": "isPrivate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1170,
							"name": "isProtected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1171,
							"name": "isPublic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1180,
							"name": "isReadonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1175,
							"name": "isRest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1172,
							"name": "isStatic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1176,
								1177,
								1178,
								1173,
								1179,
								1174,
								1169,
								1170,
								1171,
								1180,
								1175,
								1172
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 347,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 1366,
											"name": "M.ReflectionFlags"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 1366,
													"name": "M.ReflectionFlags"
												}
											],
											"name": "BoolKeys"
										}
									],
									"name": "S"
								}
							],
							"name": "Partial"
						}
					]
				},
				{
					"id": 938,
					"name": "ReflectionGroup",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 942,
							"name": "categories",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Categories contained within this group."
							},
							"sources": [
								{
									"fileName": "src/lib/models/ReflectionGroup.ts",
									"line": 64,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 943,
											"name": "ReflectionCategory"
										}
									}
								]
							}
						},
						{
							"id": 939,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 135,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						},
						{
							"id": 941,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The original typescript kind of the children of this group."
							},
							"sources": [
								{
									"fileName": "src/lib/models/ReflectionGroup.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							}
						},
						{
							"id": 940,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The title, a string representation of the typescript kind, of this group."
							},
							"sources": [
								{
									"fileName": "src/lib/models/ReflectionGroup.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								942,
								939,
								941,
								940
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 133,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.ReflectionGroup"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "title"
										},
										{
											"type": "literal",
											"value": "kind"
										},
										{
											"type": "literal",
											"value": "categories"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1120,
					"name": "ReflectionType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1121,
							"name": "declaration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 286,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1003,
										"name": "DeclarationReflection"
									}
								]
							}
						},
						{
							"id": 1122,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/reflection.ts",
									"line": 20,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "reflection"
							},
							"defaultValue": "\"reflection\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1121,
								1122
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 285,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.ReflectionType"
								},
								{
									"type": "literal",
									"value": "type"
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1123,
					"name": "RestType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1125,
							"name": "elementType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of the rest array elements."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/rest.ts",
									"line": 14,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1124,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/rest.ts",
									"line": 19,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "rest"
							},
							"defaultValue": "\"rest\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1125,
								1124
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 289,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.RestType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "elementType"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 975,
					"name": "SignatureReflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 984,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1079,
								"name": "Reflection.comment"
							}
						},
						{
							"id": 985,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1080,
								"name": "Reflection.decorates"
							}
						},
						{
							"id": 979,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1074,
								"name": "Reflection.decorators"
							}
						},
						{
							"id": 978,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1073,
								"name": "Reflection.flags"
							}
						},
						{
							"id": 982,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1077,
								"name": "Reflection.id"
							}
						},
						{
							"id": 989,
							"name": "implementationOf",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection this reflection is the implementation of.",
								"text": "Applies to class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/signature.ts",
									"line": 44,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 988,
							"name": "inheritedFrom",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection this reflection has been inherited from.",
								"text": "Applies to interface and class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/signature.ts",
									"line": 37,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 981,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1076,
								"name": "Reflection.kind"
							}
						},
						{
							"id": 983,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1078,
								"name": "Reflection.kindString"
							}
						},
						{
							"id": 980,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1075,
								"name": "Reflection.name"
							}
						},
						{
							"id": 977,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1072,
								"name": "Reflection.originalName"
							}
						},
						{
							"id": 987,
							"name": "overwrites",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A type that points to the reflection that has been overwritten by this reflection.",
								"text": "Applies to interface and class members.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/signature.ts",
									"line": 30,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 990,
							"name": "parameters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/signature.ts",
									"line": 19,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 991,
											"name": "ParameterReflection"
										}
									}
								]
							}
						},
						{
							"id": 986,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/signature.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 976,
							"name": "typeParameter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 163,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1031,
											"name": "TypeParameterReflection"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								984,
								985,
								979,
								978,
								982,
								989,
								988,
								981,
								983,
								980,
								977,
								987,
								990,
								986,
								976
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 152,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1071,
							"name": "Reflection"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1792,
									"name": "M.SignatureReflection"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "parameters"
										},
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "overwrites"
										},
										{
											"type": "literal",
											"value": "inheritedFrom"
										},
										{
											"type": "literal",
											"value": "implementationOf"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1190,
					"name": "SourceReference",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1193,
							"name": "character",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/models/sources/file.ts",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1191,
							"name": "fileName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The filename of the source file."
							},
							"sources": [
								{
									"fileName": "src/lib/models/sources/file.ts",
									"line": 21,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1192,
							"name": "line",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The number of the line that emitted the declaration."
							},
							"sources": [
								{
									"fileName": "src/lib/models/sources/file.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1193,
								1191,
								1192
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 358,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.SourceReference"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "fileName"
										},
										{
											"type": "literal",
											"value": "line"
										},
										{
											"type": "literal",
											"value": "character"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1140,
					"name": "TemplateLiteralType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1143,
							"name": "head",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/models/types/template-literal.ts",
									"line": 12,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1141,
							"name": "tail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 308,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"id": 1167,
											"name": "Type"
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 1142,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/template-literal.ts",
									"line": 10,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "template-literal"
							},
							"defaultValue": "\"template-literal\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1143,
								1141,
								1142
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 305,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.TemplateLiteralType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "head"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1132,
					"name": "TupleType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1133,
							"name": "elements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 294,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							}
						},
						{
							"id": 1134,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/tuple.ts",
									"line": 19,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "tuple"
							},
							"defaultValue": "\"tuple\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1133,
								1134
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 293,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.TupleType"
								},
								{
									"type": "literal",
									"value": "type"
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1167,
					"name": "Type",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Technically not correct, the `type` property will be set by the abstract serializer.\nBut to allow tagged literals, the `type` property is instead defined by each child type."
					},
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 339,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1082,
							"name": "ArrayType"
						},
						{
							"type": "reference",
							"id": 1085,
							"name": "ConditionalType"
						},
						{
							"type": "reference",
							"id": 1091,
							"name": "IndexedAccessType"
						},
						{
							"type": "reference",
							"id": 1095,
							"name": "InferredType"
						},
						{
							"type": "reference",
							"id": 1098,
							"name": "IntersectionType"
						},
						{
							"type": "reference",
							"id": 1101,
							"name": "IntrinsicType"
						},
						{
							"type": "reference",
							"id": 1104,
							"name": "OptionalType"
						},
						{
							"type": "reference",
							"id": 1107,
							"name": "PredicateType"
						},
						{
							"type": "reference",
							"id": 1112,
							"name": "QueryType"
						},
						{
							"type": "reference",
							"id": 1115,
							"name": "ReferenceType"
						},
						{
							"type": "reference",
							"id": 1120,
							"name": "ReflectionType"
						},
						{
							"type": "reference",
							"id": 1123,
							"name": "RestType"
						},
						{
							"type": "reference",
							"id": 1126,
							"name": "LiteralType"
						},
						{
							"type": "reference",
							"id": 1132,
							"name": "TupleType"
						},
						{
							"type": "reference",
							"id": 1135,
							"name": "NamedTupleMemberType"
						},
						{
							"type": "reference",
							"id": 1140,
							"name": "TemplateLiteralType"
						},
						{
							"type": "reference",
							"id": 1144,
							"name": "MappedType"
						},
						{
							"type": "reference",
							"id": 1152,
							"name": "TypeOperatorType"
						},
						{
							"type": "reference",
							"id": 1156,
							"name": "TypeParameterType"
						},
						{
							"type": "reference",
							"id": 1161,
							"name": "UnionType"
						},
						{
							"type": "reference",
							"id": 1164,
							"name": "UnknownType"
						}
					]
				},
				{
					"id": 1152,
					"name": "TypeOperatorType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1154,
							"name": "operator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "keyof"
									},
									{
										"type": "literal",
										"value": "unique"
									},
									{
										"type": "literal",
										"value": "readonly"
									}
								]
							}
						},
						{
							"id": 1155,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 1081,
								"name": "SomeType"
							}
						},
						{
							"id": 1153,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/type-operator.ts",
									"line": 15,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "typeOperator"
							},
							"defaultValue": "\"typeOperator\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1154,
								1155,
								1153
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 323,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.TypeOperatorType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "operator"
										},
										{
											"type": "literal",
											"value": "target"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1031,
					"name": "TypeParameterReflection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1039,
							"name": "comment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The parsed documentation comment attached to this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 366,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1181,
										"name": "Comment"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1079,
								"name": "Reflection.comment"
							}
						},
						{
							"id": 1040,
							"name": "decorates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of all types that are decorated by this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 381,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1081,
											"name": "SomeType"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1080,
								"name": "Reflection.decorates"
							}
						},
						{
							"id": 1034,
							"name": "decorators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 217,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1194,
											"name": "Decorator"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1074,
								"name": "Reflection.decorators"
							}
						},
						{
							"id": 1042,
							"name": "default",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/type-parameter.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1033,
							"name": "flags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1168,
								"name": "ReflectionFlags"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1073,
								"name": "Reflection.flags"
							}
						},
						{
							"id": 1037,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Unique id of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 333,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1077,
								"name": "Reflection.id"
							}
						},
						{
							"id": 1036,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The kind of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 348,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 1253,
								"name": "ReflectionKind"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1076,
								"name": "Reflection.kind"
							}
						},
						{
							"id": 1038,
							"name": "kindString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 354,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1078,
								"name": "Reflection.kindString"
							}
						},
						{
							"id": 1035,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The symbol name of this reflection."
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/abstract.ts",
									"line": 338,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1075,
								"name": "Reflection.name"
							}
						},
						{
							"id": 1032,
							"name": "originalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Will not be present if name === originalName"
							},
							"sources": [
								{
									"fileName": "src/lib/serialization/schema.ts",
									"line": 215,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1072,
								"name": "Reflection.originalName"
							}
						},
						{
							"id": 1041,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/reflections/type-parameter.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1039,
								1040,
								1034,
								1042,
								1033,
								1037,
								1036,
								1038,
								1035,
								1032,
								1041
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 196,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1071,
							"name": "Reflection"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1853,
									"name": "M.TypeParameterReflection"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "default"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1156,
					"name": "TypeParameterType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1160,
							"name": "constraint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/type-parameter.ts",
									"line": 16,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1159,
							"name": "default",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Default type for the type parameter.",
								"text": "```\nclass SomeClass<T = {}>\n```\n"
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/type-parameter.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1082,
										"name": "ArrayType"
									},
									{
										"type": "reference",
										"id": 1085,
										"name": "ConditionalType"
									},
									{
										"type": "reference",
										"id": 1091,
										"name": "IndexedAccessType"
									},
									{
										"type": "reference",
										"id": 1095,
										"name": "InferredType"
									},
									{
										"type": "reference",
										"id": 1098,
										"name": "IntersectionType"
									},
									{
										"type": "reference",
										"id": 1101,
										"name": "IntrinsicType"
									},
									{
										"type": "reference",
										"id": 1126,
										"name": "LiteralType"
									},
									{
										"type": "reference",
										"id": 1104,
										"name": "OptionalType"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "PredicateType"
									},
									{
										"type": "reference",
										"id": 1112,
										"name": "QueryType"
									},
									{
										"type": "reference",
										"id": 1115,
										"name": "ReferenceType"
									},
									{
										"type": "reference",
										"id": 1120,
										"name": "ReflectionType"
									},
									{
										"type": "reference",
										"id": 1123,
										"name": "RestType"
									},
									{
										"type": "reference",
										"id": 1132,
										"name": "TupleType"
									},
									{
										"type": "reference",
										"id": 1152,
										"name": "TypeOperatorType"
									},
									{
										"type": "reference",
										"id": 1156,
										"name": "TypeParameterType"
									},
									{
										"type": "reference",
										"id": 1161,
										"name": "UnionType"
									},
									{
										"type": "reference",
										"id": 1164,
										"name": "UnknownType"
									}
								]
							}
						},
						{
							"id": 1157,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "src/lib/models/types/type-parameter.ts",
									"line": 14,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1158,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/type-parameter.ts",
									"line": 30,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"typeParameter\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1160,
								1159,
								1157,
								1158
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 327,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.TypeParameterType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "constraint"
										},
										{
											"type": "literal",
											"value": "default"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1161,
					"name": "UnionType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1162,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/union.ts",
									"line": 21,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"union\""
						},
						{
							"id": 1163,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The types this union consists of."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/union.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1081,
									"name": "SomeType"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1162,
								1163
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 331,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.UnionType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "types"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 1164,
					"name": "UnknownType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1165,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A string representation of the type as returned from TypeScript compiler."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/unknown.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1166,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The type name identifier."
							},
							"sources": [
								{
									"fileName": "src/lib/models/types/unknown.ts",
									"line": 15,
									"character": 17
								}
							],
							"type": {
								"type": "literal",
								"value": "unknown"
							},
							"defaultValue": "\"unknown\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1165,
								1166
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 333,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1167,
							"name": "Type"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "M.UnknownType"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "name"
										}
									]
								}
							],
							"name": "S"
						}
					]
				},
				{
					"id": 936,
					"name": "ModelToObject",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Describes the mapping from Model types to the corresponding JSON output type."
					},
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 37,
							"character": 25
						}
					],
					"typeParameter": [
						{
							"id": 937,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"name": "T"
						},
						"extendsType": {
							"type": "array",
							"elementType": {
								"type": "inferred",
								"name": "U"
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "U"
									}
								],
								"name": "_ModelToObject"
							}
						},
						"falseType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "T"
								}
							],
							"name": "_ModelToObject"
						}
					}
				},
				{
					"id": 1081,
					"name": "SomeType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/serialization/schema.ts",
							"line": 222,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1082,
								"name": "ArrayType"
							},
							{
								"type": "reference",
								"id": 1085,
								"name": "ConditionalType"
							},
							{
								"type": "reference",
								"id": 1091,
								"name": "IndexedAccessType"
							},
							{
								"type": "reference",
								"id": 1095,
								"name": "InferredType"
							},
							{
								"type": "reference",
								"id": 1098,
								"name": "IntersectionType"
							},
							{
								"type": "reference",
								"id": 1101,
								"name": "IntrinsicType"
							},
							{
								"type": "reference",
								"id": 1126,
								"name": "LiteralType"
							},
							{
								"type": "reference",
								"id": 1104,
								"name": "OptionalType"
							},
							{
								"type": "reference",
								"id": 1107,
								"name": "PredicateType"
							},
							{
								"type": "reference",
								"id": 1112,
								"name": "QueryType"
							},
							{
								"type": "reference",
								"id": 1115,
								"name": "ReferenceType"
							},
							{
								"type": "reference",
								"id": 1120,
								"name": "ReflectionType"
							},
							{
								"type": "reference",
								"id": 1123,
								"name": "RestType"
							},
							{
								"type": "reference",
								"id": 1132,
								"name": "TupleType"
							},
							{
								"type": "reference",
								"id": 1152,
								"name": "TypeOperatorType"
							},
							{
								"type": "reference",
								"id": 1156,
								"name": "TypeParameterType"
							},
							{
								"type": "reference",
								"id": 1161,
								"name": "UnionType"
							},
							{
								"type": "reference",
								"id": 1164,
								"name": "UnknownType"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1082,
						1181,
						1186,
						1085,
						1057,
						1003,
						1194,
						1091,
						1095,
						1098,
						1101,
						1126,
						1144,
						1135,
						1104,
						991,
						1107,
						1043,
						1112,
						946,
						1115,
						1071,
						943,
						1168,
						938,
						1120,
						1123,
						975,
						1190,
						1140,
						1132,
						1167,
						1152,
						1031,
						1156,
						1161,
						1164
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						936,
						1081
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/serialization/schema.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1279,
			"name": "ReflectionKind",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1280,
					"name": "All",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 67,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1284,
					"name": "ClassMember",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 75,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1281,
					"name": "ClassOrInterface",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 69,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1283,
					"name": "FunctionOrMethod",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 73,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1286,
					"name": "SomeModule",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 87,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1285,
					"name": "SomeSignature",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 81,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1287,
					"name": "SomeType",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 88,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1288,
					"name": "SomeValue",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 93,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 1282,
					"name": "VariableOrProperty",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 71,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1280,
						1284,
						1281,
						1283,
						1286,
						1285,
						1287,
						1288,
						1282
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 66,
					"character": 31
				}
			]
		},
		{
			"id": 781,
			"name": "ParameterHint",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 783,
					"name": "Directory",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 100,
							"character": 13
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 782,
					"name": "File",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 99,
							"character": 8
						}
					],
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						783,
						782
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 98,
					"character": 25
				}
			]
		},
		{
			"id": 784,
			"name": "ParameterType",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 790,
					"name": "Array",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 109,
							"character": 9
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 787,
					"name": "Boolean",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 106,
							"character": 11
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 788,
					"name": "Map",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 107,
							"character": 7
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 789,
					"name": "Mixed",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 108,
							"character": 9
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 786,
					"name": "Number",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 105,
							"character": 10
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 785,
					"name": "String",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 104,
							"character": 10
						}
					],
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						790,
						787,
						788,
						789,
						786,
						785
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 103,
					"character": 25
				}
			]
		},
		{
			"id": 1289,
			"name": "ReflectionFlag",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 1300,
					"name": "Abstract",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 110,
							"character": 12
						}
					],
					"defaultValue": "512"
				},
				{
					"id": 1301,
					"name": "Const",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 111,
							"character": 9
						}
					],
					"defaultValue": "1024"
				},
				{
					"id": 1298,
					"name": "DefaultValue",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 108,
							"character": 16
						}
					],
					"defaultValue": "128"
				},
				{
					"id": 1295,
					"name": "ExportAssignment",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 105,
							"character": 20
						}
					],
					"defaultValue": "16"
				},
				{
					"id": 1296,
					"name": "External",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 106,
							"character": 12
						}
					],
					"defaultValue": "32"
				},
				{
					"id": 1302,
					"name": "Let",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 112,
							"character": 7
						}
					],
					"defaultValue": "2048"
				},
				{
					"id": 1290,
					"name": "None",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 100,
							"character": 8
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 1297,
					"name": "Optional",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 107,
							"character": 12
						}
					],
					"defaultValue": "64"
				},
				{
					"id": 1291,
					"name": "Private",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 101,
							"character": 11
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 1292,
					"name": "Protected",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 102,
							"character": 13
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 1293,
					"name": "Public",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 103,
							"character": 10
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 1303,
					"name": "Readonly",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 113,
							"character": 12
						}
					],
					"defaultValue": "4096"
				},
				{
					"id": 1299,
					"name": "Rest",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 109,
							"character": 8
						}
					],
					"defaultValue": "256"
				},
				{
					"id": 1294,
					"name": "Static",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 104,
							"character": 10
						}
					],
					"defaultValue": "8"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						1300,
						1301,
						1298,
						1295,
						1296,
						1302,
						1290,
						1297,
						1291,
						1292,
						1293,
						1303,
						1299,
						1294
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 99,
					"character": 26
				}
			]
		},
		{
			"id": 1253,
			"name": "ReflectionKind",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "Defines the available reflection kinds."
			},
			"children": [
				{
					"id": 1272,
					"name": "Accessor",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 57,
							"character": 12
						}
					],
					"defaultValue": "262144"
				},
				{
					"id": 1266,
					"name": "CallSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 51,
							"character": 17
						}
					],
					"defaultValue": "4096"
				},
				{
					"id": 1261,
					"name": "Class",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 46,
							"character": 9
						}
					],
					"defaultValue": "128"
				},
				{
					"id": 1263,
					"name": "Constructor",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 48,
							"character": 15
						}
					],
					"defaultValue": "512"
				},
				{
					"id": 1268,
					"name": "ConstructorSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 53,
							"character": 24
						}
					],
					"defaultValue": "16384"
				},
				{
					"id": 1257,
					"name": "Enum",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 41,
							"character": 8
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 1258,
					"name": "EnumMember",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 43,
							"character": 14
						}
					],
					"defaultValue": "16"
				},
				{
					"id": 1277,
					"name": "Event",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 62,
							"character": 9
						}
					],
					"defaultValue": "8388608"
				},
				{
					"id": 1260,
					"name": "Function",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 45,
							"character": 12
						}
					],
					"defaultValue": "64"
				},
				{
					"id": 1273,
					"name": "GetSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 58,
							"character": 16
						}
					],
					"defaultValue": "524288"
				},
				{
					"id": 1267,
					"name": "IndexSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 52,
							"character": 18
						}
					],
					"defaultValue": "8192"
				},
				{
					"id": 1262,
					"name": "Interface",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 47,
							"character": 13
						}
					],
					"defaultValue": "256"
				},
				{
					"id": 1265,
					"name": "Method",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 50,
							"character": 10
						}
					],
					"defaultValue": "2048"
				},
				{
					"id": 1255,
					"name": "Module",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 39,
							"character": 10
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 1256,
					"name": "Namespace",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 40,
							"character": 13
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 1275,
					"name": "ObjectLiteral",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 60,
							"character": 17
						}
					],
					"defaultValue": "2097152"
				},
				{
					"id": 1269,
					"name": "Parameter",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 54,
							"character": 13
						}
					],
					"defaultValue": "32768"
				},
				{
					"id": 1254,
					"name": "Project",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 38,
							"character": 11
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 1264,
					"name": "Property",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 49,
							"character": 12
						}
					],
					"defaultValue": "1024"
				},
				{
					"id": 1278,
					"name": "Reference",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 63,
							"character": 13
						}
					],
					"defaultValue": "16777216"
				},
				{
					"id": 1274,
					"name": "SetSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 59,
							"character": 16
						}
					],
					"defaultValue": "1048576"
				},
				{
					"id": 1276,
					"name": "TypeAlias",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 61,
							"character": 13
						}
					],
					"defaultValue": "4194304"
				},
				{
					"id": 1270,
					"name": "TypeLiteral",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 55,
							"character": 15
						}
					],
					"defaultValue": "65536"
				},
				{
					"id": 1271,
					"name": "TypeParameter",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 56,
							"character": 17
						}
					],
					"defaultValue": "131072"
				},
				{
					"id": 1259,
					"name": "Variable",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 44,
							"character": 12
						}
					],
					"defaultValue": "32"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						1272,
						1266,
						1261,
						1263,
						1268,
						1257,
						1258,
						1277,
						1260,
						1273,
						1267,
						1262,
						1265,
						1255,
						1256,
						1275,
						1269,
						1254,
						1264,
						1278,
						1274,
						1276,
						1270,
						1271,
						1259
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 37,
					"character": 26
				}
			]
		},
		{
			"id": 1357,
			"name": "TraverseProperty",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 1358,
					"name": "Children",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 279,
							"character": 12
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 1364,
					"name": "GetSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 285,
							"character": 16
						}
					],
					"defaultValue": "6"
				},
				{
					"id": 1363,
					"name": "IndexSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 284,
							"character": 18
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 1359,
					"name": "Parameters",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 280,
							"character": 14
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 1365,
					"name": "SetSignature",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 286,
							"character": 16
						}
					],
					"defaultValue": "7"
				},
				{
					"id": 1362,
					"name": "Signatures",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 283,
							"character": 14
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 1360,
					"name": "TypeLiteral",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 281,
							"character": 15
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 1361,
					"name": "TypeParameter",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 282,
							"character": 17
						}
					],
					"defaultValue": "3"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						1358,
						1364,
						1363,
						1359,
						1365,
						1362,
						1360,
						1361
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 278,
					"character": 28
				}
			]
		},
		{
			"id": 1,
			"name": "Application",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "The default TypeDoc main application class.",
				"text": "This class holds the two main components of TypeDoc, the [[Converter]] and\nthe [[Renderer]]. When running TypeDoc, first the [[Converter]] is invoked which\ngenerates a [[ProjectReflection]] from the passed in source files. The\n[[ProjectReflection]] is a hierarchical model representation of the TypeScript\nproject. Afterwards the model is passed to the [[Renderer]] which uses an instance\nof [[BaseTheme]] to generate the final documentation.\n\nBoth the [[Converter]] and the [[Renderer]] are subclasses of the [[AbstractComponent]]\nand emit a series of events while processing the project. Subscribe to these Events\nto control the application flow or alter the output.\n"
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"options": "{ name: \"application\", internal: true }"
					}
				}
			],
			"children": [
				{
					"id": 3,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 4,
							"name": "new Application",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new TypeDoc application instance."
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 58,
					"name": "componentName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "The name of this component as set by the @Component decorator."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 128,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5,
					"name": "converter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The converter used to create the declaration reflections."
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 60,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 221,
						"name": "Converter"
					}
				},
				{
					"id": 13,
					"name": "entryPoints",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"entryPoints\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 88,
							"character": 15
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12,
					"name": "exclude",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"exclude\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 85,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The logger that should be used to output messages."
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 75,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "Logger"
					}
				},
				{
					"id": 11,
					"name": "loggerType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"logger\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 82,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Function"
							}
						]
					}
				},
				{
					"id": 9,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 77,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 690,
						"name": "Options"
					}
				},
				{
					"id": 14,
					"name": "optionsFile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"options\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 91,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10,
					"name": "plugins",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 79,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "PluginHost"
					}
				},
				{
					"id": 15,
					"name": "project",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"tsconfig\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 94,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6,
					"name": "renderer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The renderer used to generate the documentation output."
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 65,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 370,
						"name": "Renderer"
					}
				},
				{
					"id": 7,
					"name": "serializer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The serializer used to generate JSON output."
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 70,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Serializer"
					}
				},
				{
					"id": 2,
					"name": "VERSION",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"comment": {
						"shortText": "The version number of TypeDoc."
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 99,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 69,
					"name": "_listenId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A unique id that identifies this instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 401,
							"character": 25
						}
					],
					"getSignature": [
						{
							"id": 70,
							"name": "_listenId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A unique id that identifies this instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 19,
					"name": "application",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the application / root component instance."
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 159,
							"character": 19
						}
					],
					"getSignature": [
						{
							"id": 20,
							"name": "application",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the application / root component instance."
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "owner",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the owner of this component."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 183,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 68,
							"name": "owner",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the owner of this component."
							},
							"type": {
								"type": "reference",
								"name": "O"
							}
						}
					]
				},
				{
					"id": 48,
					"name": "addComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 237,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "addComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 50,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1,
												"name": "Application"
											},
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "AbstractComponent"
									}
								}
							],
							"parameters": [
								{
									"id": 51,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 52,
									"name": "componentClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "T"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Application"
													}
												],
												"name": "ComponentClass"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					]
				},
				{
					"id": 16,
					"name": "bootstrap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 123,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 17,
							"name": "bootstrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initialize TypeDoc with the given options object."
							},
							"parameters": [
								{
									"id": 18,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The desired options to set.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 791,
												"name": "TypeDocOptions"
											}
										],
										"name": "Partial"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "bubble",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 151,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "bubble",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 63,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 64,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 25,
					"name": "convert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 180,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "convert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Run the converter for the given set of files and return the generated reflections.",
								"returns": "An instance of ProjectReflection on success, undefined otherwise.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								]
							}
						}
					]
				},
				{
					"id": 35,
					"name": "expandInputFiles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 298,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "expandInputFiles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Expand a list of input files.",
								"text": "Searches for directories in the input files list and replaces them with a\nlisting of all TypeScript files within them. One may use the ```--exclude``` option\nto filter out files with a pattern.\n",
								"returns": "The list of input files with expanded directories.\n"
							},
							"parameters": [
								{
									"id": 37,
									"name": "inputFiles",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The list of files that should be expanded."
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 27,
					"name": "generateDocs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 250,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "generateDocs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Render HTML for the given project"
							},
							"parameters": [
								{
									"id": 29,
									"name": "project",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								},
								{
									"id": 30,
									"name": "out",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 31,
					"name": "generateJson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 271,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "generateJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Run the converter for the given set of files and write the reflections to a json file.",
								"returns": "TRUE if the json file could be written successfully, otherwise FALSE.\n"
							},
							"parameters": [
								{
									"id": 33,
									"name": "project",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								},
								{
									"id": 34,
									"name": "out",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path and file name of the target file."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 40,
					"name": "getComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 225,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 41,
							"name": "getComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a plugin instance.",
								"returns": "The instance of the plugin or undefined if no plugin with the given class is attached.\n"
							},
							"parameters": [
								{
									"id": 42,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1,
												"name": "Application"
											}
										],
										"name": "AbstractComponent"
									}
								]
							}
						}
					]
				},
				{
					"id": 43,
					"name": "getComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 229,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 44,
							"name": "getComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 1,
											"name": "Application"
										}
									],
									"name": "AbstractComponent"
								}
							}
						}
					]
				},
				{
					"id": 65,
					"name": "getOptionDeclarations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 167,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 66,
							"name": "getOptionDeclarations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return all option declarations emitted by this component."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 876,
									"name": "DeclarationOption"
								}
							}
						}
					]
				},
				{
					"id": 21,
					"name": "getTypeScriptPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 166,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "getTypeScriptPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the path to the TypeScript compiler."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 23,
					"name": "getTypeScriptVersion",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 170,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 24,
							"name": "getTypeScriptVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "hasComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 233,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "hasComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 47,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 147,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 60,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initialize this component."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 103,
					"name": "listenTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 523,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 104,
							"name": "listenTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `on`. Tell *this* object to listen to\nan event in another object... keeping track of what it's listening to\nfor easier unbinding later."
							},
							"parameters": [
								{
									"id": 105,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 106,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 107,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 108,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 109,
					"name": "listenToOnce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 557,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 110,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `once`."
							},
							"parameters": [
								{
									"id": 111,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 112,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						},
						{
							"id": 113,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 114,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 115,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 116,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 117,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 94,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 498,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one or many callbacks. If `context` is null, removes all\ncallbacks with that function. If `callback` is null, removes all\ncallbacks for the event. If `name` is null, removes all bound\ncallbacks for all events."
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						},
						{
							"id": 96,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 97,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 98,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						},
						{
							"id": 99,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 100,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 101,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 102,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 71,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 410,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 72,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to a `callback` function. Passing `\"all\"` will bind\nthe callback to all events fired."
							},
							"parameters": [
								{
									"id": 73,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 74,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						},
						{
							"id": 75,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 76,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 77,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 78,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 79,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						},
						{
							"id": 80,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 81,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 82,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 83,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 84,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 468,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 86,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to only be triggered a single time. After the first time\nthe callback is invoked, its listener will be removed. If multiple events\nare passed in using the space-separated syntax, the handler will fire\nonce for each event, not once for a combination of all events."
							},
							"parameters": [
								{
									"id": 87,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 88,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						},
						{
							"id": 89,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 90,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 91,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 92,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 93,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 56,
					"name": "removeAllComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 280,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "removeAllComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 53,
					"name": "removeComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 268,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 54,
							"name": "removeComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 55,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1,
												"name": "Application"
											}
										],
										"name": "AbstractComponent"
									}
								]
							}
						}
					]
				},
				{
					"id": 118,
					"name": "stopListening",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 585,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 119,
							"name": "stopListening",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tell this object to stop listening to either specific events ... or\nto every object it's currently listening to."
							},
							"parameters": [
								{
									"id": 120,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 121,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 122,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 38,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/application.ts",
							"line": 356,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Print the version number."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "trigger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 621,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "trigger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument)."
							},
							"parameters": [
								{
									"id": 125,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 126,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						3
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						58,
						5,
						13,
						12,
						8,
						11,
						9,
						14,
						10,
						15,
						6,
						7,
						2
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						69,
						19,
						67
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						48,
						16,
						61,
						25,
						35,
						27,
						31,
						40,
						43,
						65,
						21,
						23,
						45,
						59,
						103,
						109,
						94,
						71,
						85,
						56,
						53,
						118,
						38,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/application.ts",
					"line": 53,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1,
							"name": "Application"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1,
									"name": "Application"
								}
							],
							"name": "AbstractComponent"
						}
					],
					"name": "ChildableComponent"
				}
			]
		},
		{
			"id": 864,
			"name": "ArgumentsReader",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Obtains option values from command-line arguments"
			},
			"children": [
				{
					"id": 865,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 866,
							"name": "new ArgumentsReader",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 867,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 868,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 864,
								"name": "ArgumentsReader"
							}
						}
					]
				},
				{
					"id": 871,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/arguments.ts",
							"line": 11,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 869,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/arguments.ts",
							"line": 9,
							"character": 17
						}
					],
					"type": {
						"type": "literal",
						"value": "arguments"
					},
					"defaultValue": "\"arguments\"",
					"implementationOf": {
						"type": "reference",
						"id": 776,
						"name": "OptionsReader.name"
					}
				},
				{
					"id": 870,
					"name": "priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/arguments.ts",
							"line": 10,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"implementationOf": {
						"type": "reference",
						"id": 775,
						"name": "OptionsReader.priority"
					}
				},
				{
					"id": 872,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/arguments.ts",
							"line": 18,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 873,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 874,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 690,
										"name": "Options"
									}
								},
								{
									"id": 875,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 778,
								"name": "OptionsReader.read"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 777,
						"name": "OptionsReader.read"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						865
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						871,
						869,
						870
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						872
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/readers/arguments.ts",
					"line": 8,
					"character": 28
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 774,
					"name": "OptionsReader"
				}
			]
		},
		{
			"id": 1408,
			"name": "ContainerReflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1409,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1410,
							"name": "new ContainerReflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new BaseReflection instance."
							},
							"parameters": [
								{
									"id": 1411,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1412,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								},
								{
									"id": 1413,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1408,
								"name": "ContainerReflection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1200,
								"name": "Reflection.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1199,
						"name": "Reflection.constructor"
					}
				},
				{
					"id": 1435,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1216,
						"name": "Reflection.anchor"
					}
				},
				{
					"id": 1416,
					"name": "categories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their category."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 26,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionCategory"
								}
							}
						]
					}
				},
				{
					"id": 1414,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The children of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							}
						]
					}
				},
				{
					"id": 1430,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1211,
						"name": "Reflection.comment"
					}
				},
				{
					"id": 1437,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1218,
						"name": "Reflection.cssClasses"
					}
				},
				{
					"id": 1433,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1214,
						"name": "Reflection.decorates"
					}
				},
				{
					"id": 1432,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1213,
						"name": "Reflection.decorators"
					}
				},
				{
					"id": 1428,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1209,
						"name": "Reflection.flags"
					}
				},
				{
					"id": 1415,
					"name": "groups",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their kind."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 21,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionGroup"
								}
							}
						]
					}
				},
				{
					"id": 1436,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1217,
						"name": "Reflection.hasOwnDocument"
					}
				},
				{
					"id": 1423,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1204,
						"name": "Reflection.id"
					}
				},
				{
					"id": 1426,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1207,
						"name": "Reflection.kind"
					}
				},
				{
					"id": 1427,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1208,
						"name": "Reflection.kindString"
					}
				},
				{
					"id": 1424,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1205,
						"name": "Reflection.name"
					}
				},
				{
					"id": 1425,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1206,
						"name": "Reflection.originalName"
					}
				},
				{
					"id": 1429,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The reflection this reflection is a child of."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 361,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1210,
						"name": "Reflection.parent"
					}
				},
				{
					"id": 1431,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1212,
						"name": "Reflection.sources"
					}
				},
				{
					"id": 1434,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1215,
						"name": "Reflection.url"
					}
				},
				{
					"id": 1459,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1460,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1461,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "Reflection.findReflectionByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1242,
						"name": "Reflection.findReflectionByName"
					}
				},
				{
					"id": 1448,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1449,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "Reflection.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "Reflection.getAlias"
					}
				},
				{
					"id": 1454,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1455,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1456,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "Reflection.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1237,
						"name": "Reflection.getChildByName"
					}
				},
				{
					"id": 1417,
					"name": "getChildrenByKind",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 34,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1418,
							"name": "getChildrenByKind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a list of all children of a certain kind.",
								"returns": "An array containing all children with the desired kind.\n"
							},
							"parameters": [
								{
									"id": 1419,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The desired kind of children."
									},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							}
						}
					]
				},
				{
					"id": 1441,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1442,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1443,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "Reflection.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1224,
						"name": "Reflection.getFullName"
					}
				},
				{
					"id": 1450,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1451,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "Reflection.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1233,
						"name": "Reflection.hasComment"
					}
				},
				{
					"id": 1452,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 511,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1453,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1236,
								"name": "Reflection.hasGetterOrSetter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1235,
						"name": "Reflection.hasGetterOrSetter"
					}
				},
				{
					"id": 1457,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1458,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1241,
								"name": "Reflection.isProject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1240,
						"name": "Reflection.isProject"
					}
				},
				{
					"id": 1438,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1439,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1440,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1222,
								"name": "Reflection.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1221,
						"name": "Reflection.kindOf"
					}
				},
				{
					"id": 1444,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1445,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1446,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1447,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "Reflection.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1227,
						"name": "Reflection.setFlag"
					}
				},
				{
					"id": 1462,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 582,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1463,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "Reflection.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1248,
						"name": "Reflection.toString"
					}
				},
				{
					"id": 1464,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1465,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1466,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "Reflection.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1250,
						"name": "Reflection.toStringHierarchy"
					}
				},
				{
					"id": 1420,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 46,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1421,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1422,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function that should be applied for each child reflection.\n"
									},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 1246,
								"name": "Reflection.traverse"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1245,
						"name": "Reflection.traverse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1409
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1435,
						1416,
						1414,
						1430,
						1437,
						1433,
						1432,
						1428,
						1415,
						1436,
						1423,
						1426,
						1427,
						1424,
						1425,
						1429,
						1431,
						1434
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1459,
						1448,
						1454,
						1417,
						1441,
						1450,
						1452,
						1457,
						1438,
						1444,
						1462,
						1464,
						1420
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/container.ts",
					"line": 12,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1198,
					"name": "Reflection"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1467,
					"name": "DeclarationReflection"
				},
				{
					"type": "reference",
					"id": 1607,
					"name": "ProjectReflection"
				}
			]
		},
		{
			"id": 221,
			"name": "Converter",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Compiles source files using TypeScript and converts compiler symbols to reflections."
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"options": "{\n    name: \"converter\",\n    internal: true,\n    childClass: ConverterComponent,\n}"
					}
				}
			],
			"children": [
				{
					"id": 231,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 232,
							"name": "new Converter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create new Component instance."
							},
							"parameters": [
								{
									"id": 233,
									"name": "owner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1,
												"name": "Application"
											},
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"name": "DUMMY_APPLICATION_OWNER"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 222,
					"name": "EVENT_BEGIN",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter begins converting a project.\nThe listener should implement [[IConverterCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 64,
							"character": 31
						}
					],
					"type": {
						"type": "literal",
						"value": "begin"
					},
					"defaultValue": "..."
				},
				{
					"id": 224,
					"name": "EVENT_CREATE_DECLARATION",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter has created a declaration reflection.\nThe listener should implement [[IConverterNodeCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 82,
							"character": 44
						}
					],
					"type": {
						"type": "literal",
						"value": "createDeclaration"
					},
					"defaultValue": "..."
				},
				{
					"id": 226,
					"name": "EVENT_CREATE_PARAMETER",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter has created a parameter reflection.\nThe listener should implement [[IConverterNodeCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 97,
							"character": 42
						}
					],
					"type": {
						"type": "literal",
						"value": "createParameter"
					},
					"defaultValue": "..."
				},
				{
					"id": 225,
					"name": "EVENT_CREATE_SIGNATURE",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter has created a signature reflection.\nThe listener should implement [[IConverterNodeCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 90,
							"character": 42
						}
					],
					"type": {
						"type": "literal",
						"value": "createSignature"
					},
					"defaultValue": "..."
				},
				{
					"id": 227,
					"name": "EVENT_CREATE_TYPE_PARAMETER",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter has created a type parameter reflection.\nThe listener should implement [[IConverterNodeCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 104,
							"character": 47
						}
					],
					"type": {
						"type": "literal",
						"value": "createTypeParameter"
					},
					"defaultValue": "..."
				},
				{
					"id": 223,
					"name": "EVENT_END",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter has finished converting a project.\nThe listener should implement [[IConverterCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 71,
							"character": 29
						}
					],
					"type": {
						"type": "literal",
						"value": "end"
					},
					"defaultValue": "..."
				},
				{
					"id": 229,
					"name": "EVENT_RESOLVE",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter resolves a reflection.\nThe listener should implement [[IConverterResolveCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 123,
							"character": 33
						}
					],
					"type": {
						"type": "literal",
						"value": "resolveReflection"
					},
					"defaultValue": "..."
				},
				{
					"id": 228,
					"name": "EVENT_RESOLVE_BEGIN",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter begins resolving a project.\nThe listener should implement [[IConverterCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 116,
							"character": 39
						}
					],
					"type": {
						"type": "literal",
						"value": "resolveBegin"
					},
					"defaultValue": "..."
				},
				{
					"id": 230,
					"name": "EVENT_RESOLVE_END",
					"kind": 8388608,
					"kindString": "Event",
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Triggered when the converter has finished resolving a project.\nThe listener should implement [[IConverterCallback]]."
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 130,
							"character": 37
						}
					],
					"type": {
						"type": "literal",
						"value": "resolveEnd"
					},
					"defaultValue": "..."
				},
				{
					"id": 299,
					"name": "componentName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "The name of this component as set by the @Component decorator."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 128,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 237,
					"name": "excludeExternals",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"excludeExternals\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 44,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 238,
					"name": "excludeNotDocumented",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"excludeNotDocumented\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 47,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 239,
					"name": "excludePrivate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"excludePrivate\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 50,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 240,
					"name": "excludeProtected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"excludeProtected\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 53,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 235,
					"name": "externalPattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"externalPattern\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 40,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 236,
					"name": "externalPatternCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 41,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IMinimatch"
								}
							}
						]
					}
				},
				{
					"id": 234,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The human readable name of the project. Used within the templates to set the title of the document."
					},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"name\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 37,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 312,
					"name": "_listenId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A unique id that identifies this instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 401,
							"character": 25
						}
					],
					"getSignature": [
						{
							"id": 313,
							"name": "_listenId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A unique id that identifies this instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 308,
					"name": "application",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the application / root component instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 174,
							"character": 19
						}
					],
					"getSignature": [
						{
							"id": 309,
							"name": "application",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the application / root component instance."
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 310,
					"name": "owner",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the owner of this component."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 183,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 311,
							"name": "owner",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the owner of this component."
							},
							"type": {
								"type": "reference",
								"name": "O"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "addComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 237,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "addComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 291,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "ConverterComponent"
									}
								}
							],
							"parameters": [
								{
									"id": 292,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 293,
									"name": "componentClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "T"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Application"
													}
												],
												"name": "ComponentClass"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					]
				},
				{
					"id": 302,
					"name": "bubble",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 151,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 303,
							"name": "bubble",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 304,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 305,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 257,
					"name": "compile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 258,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "compile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compile the files within the given context and convert the compiler symbols to reflections.",
								"returns": "An array containing all errors generated by the TypeScript compiler.\n"
							},
							"parameters": [
								{
									"id": 259,
									"name": "entryPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								},
								{
									"id": 260,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The context object describing the current state the converter is in."
									},
									"type": {
										"type": "reference",
										"name": "Context"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 241,
					"name": "convert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 138,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 242,
							"name": "convert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Compile the given source files and create a project reflection for them."
							},
							"parameters": [
								{
									"id": 243,
									"name": "entryPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the entry points of this program."
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								},
								{
									"id": 244,
									"name": "programs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Program"
											},
											{
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "Program"
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								]
							}
						}
					]
				},
				{
					"id": 261,
					"name": "convertExports",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 299,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 262,
							"name": "convertExports",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 263,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Context"
									}
								},
								{
									"id": 264,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SourceFile"
									}
								},
								{
									"id": 265,
									"name": "entryPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								},
								{
									"id": 266,
									"name": "entryName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Context"
							}
						}
					]
				},
				{
					"id": 267,
					"name": "convertReExports",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 331,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 268,
							"name": "convertReExports",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 269,
									"name": "moduleContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Context"
									}
								},
								{
									"id": 270,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SourceFile"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "convertSymbol",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 161,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "convertSymbol",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 247,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Context"
									}
								},
								{
									"id": 248,
									"name": "symbol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Symbol"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 249,
					"name": "convertType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 173,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "convertType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Convert the given TypeScript type into its TypeDoc type reflection.",
								"returns": "The TypeDoc type reflection representing the given node and type.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 251,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The context object describing the current state the converter is in."
									},
									"type": {
										"type": "reference",
										"name": "Context"
									}
								},
								{
									"id": 252,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "TypeNode"
											},
											{
												"type": "reference",
												"name": "Type"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Type"
							}
						}
					]
				},
				{
					"id": 281,
					"name": "getComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 225,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "getComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a plugin instance.",
								"returns": "The instance of the plugin or undefined if no plugin with the given class is attached.\n"
							},
							"parameters": [
								{
									"id": 283,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ConverterComponent"
									}
								]
							}
						}
					]
				},
				{
					"id": 284,
					"name": "getComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 229,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "getComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ConverterComponent"
								}
							}
						}
					]
				},
				{
					"id": 253,
					"name": "getNodesForSymbol",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 181,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "getNodesForSymbol",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 255,
									"name": "symbol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Symbol"
									}
								},
								{
									"id": 256,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Declaration"
								}
							}
						}
					]
				},
				{
					"id": 306,
					"name": "getOptionDeclarations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 167,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 307,
							"name": "getOptionDeclarations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return all option declarations emitted by this component."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 876,
									"name": "DeclarationOption"
								}
							}
						}
					]
				},
				{
					"id": 286,
					"name": "hasComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 233,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 287,
							"name": "hasComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 288,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 300,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 147,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initialize this component."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "isExternal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 376,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "isExternal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 280,
									"name": "symbol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Symbol"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 346,
					"name": "listenTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 523,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "listenTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `on`. Tell *this* object to listen to\nan event in another object... keeping track of what it's listening to\nfor easier unbinding later."
							},
							"parameters": [
								{
									"id": 348,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 349,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 350,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 351,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 352,
					"name": "listenToOnce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 557,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 353,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `once`."
							},
							"parameters": [
								{
									"id": 354,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 355,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						},
						{
							"id": 356,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 357,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 358,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 359,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 360,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 337,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 498,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 338,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one or many callbacks. If `context` is null, removes all\ncallbacks with that function. If `callback` is null, removes all\ncallbacks for the event. If `name` is null, removes all bound\ncallbacks for all events."
							},
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						},
						{
							"id": 339,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 340,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 341,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						},
						{
							"id": 342,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 343,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 344,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 345,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 314,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 410,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 315,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to a `callback` function. Passing `\"all\"` will bind\nthe callback to all events fired."
							},
							"parameters": [
								{
									"id": 316,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 317,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						},
						{
							"id": 318,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 319,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 320,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 321,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 322,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						},
						{
							"id": 323,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 324,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 325,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 326,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 327,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 328,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 468,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 329,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to only be triggered a single time. After the first time\nthe callback is invoked, its listener will be removed. If multiple events\nare passed in using the space-separated syntax, the handler will fire\nonce for each event, not once for a combination of all events."
							},
							"parameters": [
								{
									"id": 330,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 331,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						},
						{
							"id": 332,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 333,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 334,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 335,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 336,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "removeAllComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 280,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "removeAllComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 294,
					"name": "removeComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 268,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 295,
							"name": "removeComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 296,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "ConverterComponent"
									}
								]
							}
						}
					]
				},
				{
					"id": 271,
					"name": "resolve",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 346,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 272,
							"name": "resolve",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resolve the project within the given context.",
								"returns": "The final project reflection.\n"
							},
							"parameters": [
								{
									"id": 273,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The context object describing the current state the converter is in."
									},
									"type": {
										"type": "reference",
										"name": "Context"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 274,
					"name": "shouldIgnore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/converter/converter.ts",
							"line": 358,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "shouldIgnore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 276,
									"name": "symbol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Symbol"
									}
								},
								{
									"id": 277,
									"name": "checker",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TypeChecker"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 361,
					"name": "stopListening",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 585,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 362,
							"name": "stopListening",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tell this object to stop listening to either specific events ... or\nto every object it's currently listening to."
							},
							"parameters": [
								{
									"id": 363,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 364,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 365,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				},
				{
					"id": 366,
					"name": "trigger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 621,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 367,
							"name": "trigger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument)."
							},
							"parameters": [
								{
									"id": 368,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 369,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Converter"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						231
					]
				},
				{
					"title": "Events",
					"kind": 8388608,
					"children": [
						222,
						224,
						226,
						225,
						227,
						223,
						229,
						228,
						230
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						299,
						237,
						238,
						239,
						240,
						235,
						236,
						234
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						312,
						308,
						310
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						289,
						302,
						257,
						241,
						261,
						267,
						245,
						249,
						281,
						284,
						253,
						306,
						286,
						300,
						278,
						346,
						352,
						337,
						314,
						328,
						297,
						294,
						271,
						274,
						361,
						366
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/converter/converter.ts",
					"line": 29,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1,
							"name": "Application"
						},
						{
							"type": "reference",
							"name": "ConverterComponent"
						}
					],
					"name": "ChildableComponent"
				}
			]
		},
		{
			"id": 1467,
			"name": "DeclarationReflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A reflection that represents a single declaration emitted by the TypeScript compiler.",
				"text": "All parts of a project are represented by DeclarationReflection instances. The actual\nkind of a reflection is stored in its ´kind´ member.\n"
			},
			"children": [
				{
					"id": 1468,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1469,
							"name": "new DeclarationReflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new BaseReflection instance."
							},
							"parameters": [
								{
									"id": 1470,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1471,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								},
								{
									"id": 1472,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1467,
								"name": "DeclarationReflection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1410,
								"name": "ContainerReflection.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1409,
						"name": "ContainerReflection.constructor"
					}
				},
				{
					"id": 1481,
					"name": "_overwrites",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Flag to determine if this reflection ought to be documented as overwriting another reflection\nor inheriting from it."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 96,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1520,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1435,
						"name": "ContainerReflection.anchor"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1318,
						"name": "TypeParameterContainer.anchor"
					}
				},
				{
					"id": 1504,
					"name": "categories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their category."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 26,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionCategory"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1416,
						"name": "ContainerReflection.categories"
					}
				},
				{
					"id": 1502,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The children of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1414,
						"name": "ContainerReflection.children"
					}
				},
				{
					"id": 1515,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1430,
						"name": "ContainerReflection.comment"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1313,
						"name": "TypeParameterContainer.comment"
					}
				},
				{
					"id": 1522,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1437,
						"name": "ContainerReflection.cssClasses"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1320,
						"name": "TypeParameterContainer.cssClasses"
					}
				},
				{
					"id": 1518,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1433,
						"name": "ContainerReflection.decorates"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1316,
						"name": "TypeParameterContainer.decorates"
					}
				},
				{
					"id": 1517,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1432,
						"name": "ContainerReflection.decorators"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1315,
						"name": "TypeParameterContainer.decorators"
					}
				},
				{
					"id": 1479,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of this reflection.",
						"text": "Applies to function parameters.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 83,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1485,
					"name": "extendedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that extend this reflection (e.g. the subclasses)."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 120,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					}
				},
				{
					"id": 1484,
					"name": "extendedTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types this reflection extends (e.g. the parent classes)."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 115,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					}
				},
				{
					"id": 1513,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1428,
						"name": "ContainerReflection.flags"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1311,
						"name": "TypeParameterContainer.flags"
					}
				},
				{
					"id": 1477,
					"name": "getSignature",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The get signature of this declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 71,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							}
						]
					}
				},
				{
					"id": 1503,
					"name": "groups",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their kind."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 21,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionGroup"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1415,
						"name": "ContainerReflection.groups"
					}
				},
				{
					"id": 1521,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1436,
						"name": "ContainerReflection.hasOwnDocument"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1319,
						"name": "TypeParameterContainer.hasOwnDocument"
					}
				},
				{
					"id": 1508,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1423,
						"name": "ContainerReflection.id"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1306,
						"name": "TypeParameterContainer.id"
					}
				},
				{
					"id": 1483,
					"name": "implementationOf",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection this reflection is the implementation of.",
						"text": "Applies to class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 110,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1487,
					"name": "implementedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that implement this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 130,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					}
				},
				{
					"id": 1486,
					"name": "implementedTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types this reflection implements."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 125,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					}
				},
				{
					"id": 1476,
					"name": "indexSignature",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The index signature of this declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 66,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							}
						]
					}
				},
				{
					"id": 1482,
					"name": "inheritedFrom",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection this reflection has been inherited from.",
						"text": "Applies to interface and class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 103,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1511,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1426,
						"name": "ContainerReflection.kind"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1309,
						"name": "TypeParameterContainer.kind"
					}
				},
				{
					"id": 1512,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1427,
						"name": "ContainerReflection.kindString"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1310,
						"name": "TypeParameterContainer.kindString"
					}
				},
				{
					"id": 1509,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1424,
						"name": "ContainerReflection.name"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1307,
						"name": "TypeParameterContainer.name"
					}
				},
				{
					"id": 1510,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1425,
						"name": "ContainerReflection.originalName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1308,
						"name": "TypeParameterContainer.originalName"
					}
				},
				{
					"id": 1480,
					"name": "overwrites",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection that has been overwritten by this reflection.",
						"text": "Applies to interface and class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 90,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1514,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The reflection this reflection is a child of."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 361,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1429,
						"name": "ContainerReflection.parent"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1312,
						"name": "TypeParameterContainer.parent"
					}
				},
				{
					"id": 1478,
					"name": "setSignature",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The set signature of this declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 76,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							}
						]
					}
				},
				{
					"id": 1475,
					"name": "signatures",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of call signatures attached to this declaration.",
						"text": "TypeDoc creates one declaration per function that may contain ore or more\nsignature reflections.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 61,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1792,
									"name": "SignatureReflection"
								}
							}
						]
					}
				},
				{
					"id": 1516,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1431,
						"name": "ContainerReflection.sources"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1314,
						"name": "TypeParameterContainer.sources"
					}
				},
				{
					"id": 1473,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The type of the reflection.",
						"text": "If the reflection represents a variable or a property, this is the value type.<br />\nIf the reflection represents a signature, this is the return type.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 51,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1488,
					"name": "typeHierarchy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Contains a simplified representation of the type hierarchy suitable for being\nrendered in templates."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 136,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1548,
								"name": "DeclarationHierarchy"
							}
						]
					}
				},
				{
					"id": 1474,
					"name": "typeParameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 53,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1853,
									"name": "TypeParameterReflection"
								}
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"id": 1305,
						"name": "TypeParameterContainer.typeParameters"
					}
				},
				{
					"id": 1519,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1434,
						"name": "ContainerReflection.url"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1317,
						"name": "TypeParameterContainer.url"
					}
				},
				{
					"id": 1542,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1543,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1544,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1460,
								"name": "ContainerReflection.findReflectionByName"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1343,
								"name": "TypeParameterContainer.findReflectionByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1459,
						"name": "ContainerReflection.findReflectionByName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1342,
						"name": "TypeParameterContainer.findReflectionByName"
					}
				},
				{
					"id": 1533,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1534,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1449,
								"name": "ContainerReflection.getAlias"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1332,
								"name": "TypeParameterContainer.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1448,
						"name": "ContainerReflection.getAlias"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1331,
						"name": "TypeParameterContainer.getAlias"
					}
				},
				{
					"id": 1491,
					"name": "getAllSignatures",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 142,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1492,
							"name": "getAllSignatures",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1792,
									"name": "SignatureReflection"
								}
							}
						}
					]
				},
				{
					"id": 1537,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1538,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1539,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1455,
								"name": "ContainerReflection.getChildByName"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1338,
								"name": "TypeParameterContainer.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1454,
						"name": "ContainerReflection.getChildByName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1337,
						"name": "TypeParameterContainer.getChildByName"
					}
				},
				{
					"id": 1505,
					"name": "getChildrenByKind",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 34,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1506,
							"name": "getChildrenByKind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a list of all children of a certain kind.",
								"returns": "An array containing all children with the desired kind.\n"
							},
							"parameters": [
								{
									"id": 1507,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The desired kind of children."
									},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1418,
								"name": "ContainerReflection.getChildrenByKind"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1417,
						"name": "ContainerReflection.getChildrenByKind"
					}
				},
				{
					"id": 1526,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1527,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1528,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1442,
								"name": "ContainerReflection.getFullName"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1325,
								"name": "TypeParameterContainer.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1441,
						"name": "ContainerReflection.getFullName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1324,
						"name": "TypeParameterContainer.getFullName"
					}
				},
				{
					"id": 1500,
					"name": "getOverwrites",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 252,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1501,
							"name": "getOverwrites",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1535,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1536,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1451,
								"name": "ContainerReflection.hasComment"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1334,
								"name": "TypeParameterContainer.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1450,
						"name": "ContainerReflection.hasComment"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1333,
						"name": "TypeParameterContainer.hasComment"
					}
				},
				{
					"id": 1489,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 138,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1490,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 1453,
								"name": "ContainerReflection.hasGetterOrSetter"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1336,
								"name": "TypeParameterContainer.hasGetterOrSetter"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1452,
						"name": "ContainerReflection.hasGetterOrSetter"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1335,
						"name": "TypeParameterContainer.hasGetterOrSetter"
					}
				},
				{
					"id": 1540,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1541,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1458,
								"name": "ContainerReflection.isProject"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1341,
								"name": "TypeParameterContainer.isProject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1457,
						"name": "ContainerReflection.isProject"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1340,
						"name": "TypeParameterContainer.isProject"
					}
				},
				{
					"id": 1523,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1524,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1525,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1439,
								"name": "ContainerReflection.kindOf"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1322,
								"name": "TypeParameterContainer.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1438,
						"name": "ContainerReflection.kindOf"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1321,
						"name": "TypeParameterContainer.kindOf"
					}
				},
				{
					"id": 1529,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1530,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1531,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1532,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1445,
								"name": "ContainerReflection.setFlag"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1328,
								"name": "TypeParameterContainer.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1444,
						"name": "ContainerReflection.setFlag"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1327,
						"name": "TypeParameterContainer.setFlag"
					}
				},
				{
					"id": 1498,
					"name": "setOverwrites",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 247,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1499,
							"name": "setOverwrites",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1496,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 228,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1497,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 1463,
								"name": "ContainerReflection.toString"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1349,
								"name": "TypeParameterContainer.toString"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1462,
						"name": "ContainerReflection.toString"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1348,
						"name": "TypeParameterContainer.toString"
					}
				},
				{
					"id": 1545,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1546,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1547,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1465,
								"name": "ContainerReflection.toStringHierarchy"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1351,
								"name": "TypeParameterContainer.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1464,
						"name": "ContainerReflection.toStringHierarchy"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1350,
						"name": "TypeParameterContainer.toStringHierarchy"
					}
				},
				{
					"id": 1493,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 169,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1494,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1495,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function that should be applied for each child reflection.\n"
									},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 1421,
								"name": "ContainerReflection.traverse"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1346,
								"name": "TypeParameterContainer.traverse"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1420,
						"name": "ContainerReflection.traverse"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1345,
						"name": "TypeParameterContainer.traverse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1468
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1481,
						1520,
						1504,
						1502,
						1515,
						1522,
						1518,
						1517,
						1479,
						1485,
						1484,
						1513,
						1477,
						1503,
						1521,
						1508,
						1483,
						1487,
						1486,
						1476,
						1482,
						1511,
						1512,
						1509,
						1510,
						1480,
						1514,
						1478,
						1475,
						1516,
						1473,
						1488,
						1474,
						1519
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1542,
						1533,
						1491,
						1537,
						1505,
						1526,
						1500,
						1535,
						1489,
						1540,
						1523,
						1529,
						1498,
						1496,
						1545,
						1493
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/declaration.ts",
					"line": 42,
					"character": 34
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1408,
					"name": "ContainerReflection"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1698,
					"name": "ReferenceReflection"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DefaultValueContainer"
				},
				{
					"type": "reference",
					"name": "TypeContainer"
				},
				{
					"type": "reference",
					"id": 1304,
					"name": "TypeParameterContainer"
				}
			]
		},
		{
			"id": 488,
			"name": "DefaultTheme",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Default theme implementation of TypeDoc. If a theme does not provide a custom\n[[BaseTheme]] implementation, this theme class will be used."
			},
			"children": [
				{
					"id": 516,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 517,
							"name": "new DefaultTheme",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new DefaultTheme instance."
							},
							"parameters": [
								{
									"id": 518,
									"name": "renderer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The renderer this theme is attached to."
									},
									"type": {
										"type": "reference",
										"id": 370,
										"name": "Renderer"
									}
								},
								{
									"id": 519,
									"name": "basePath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The base path of this theme.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 532,
					"name": "basePath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The base path of this theme."
					},
					"sources": [
						{
							"fileName": "src/lib/output/theme.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 534,
					"name": "componentName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "The name of this component as set by the @Component decorator."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 128,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 533,
					"name": "resources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/theme.ts",
							"line": 59,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "Resources"
					}
				},
				{
					"id": 489,
					"name": "MAPPINGS",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"comment": {
						"shortText": "Mappings of reflections kinds to templates used by this theme."
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 54,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "TemplateMapping"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 490,
					"name": "URL_PREFIX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 81,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "..."
				},
				{
					"id": 547,
					"name": "_listenId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A unique id that identifies this instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 401,
							"character": 25
						}
					],
					"getSignature": [
						{
							"id": 548,
							"name": "_listenId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A unique id that identifies this instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 543,
					"name": "application",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the application / root component instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 174,
							"character": 19
						}
					],
					"getSignature": [
						{
							"id": 544,
							"name": "application",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the application / root component instance."
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 545,
					"name": "owner",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the owner of this component."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 183,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 546,
							"name": "owner",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the owner of this component."
							},
							"type": {
								"type": "reference",
								"name": "O"
							}
						}
					]
				},
				{
					"id": 537,
					"name": "bubble",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 151,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 538,
							"name": "bubble",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 539,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 540,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 526,
					"name": "getNavigation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 159,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 527,
							"name": "getNavigation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a navigation structure for the given project.",
								"returns": "The root navigation item.\n"
							},
							"parameters": [
								{
									"id": 528,
									"name": "project",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The project whose navigation should be generated."
									},
									"type": {
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 633,
								"name": "NavigationItem"
							}
						}
					]
				},
				{
					"id": 541,
					"name": "getOptionDeclarations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 167,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 542,
							"name": "getOptionDeclarations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return all option declarations emitted by this component."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 876,
									"name": "DeclarationOption"
								}
							}
						}
					]
				},
				{
					"id": 523,
					"name": "getUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 130,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 524,
							"name": "getUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Map the models of the given project to the desired output files.",
								"returns": "A list of [[UrlMapping]] instances defining which models\n                should be rendered to which files.\n"
							},
							"parameters": [
								{
									"id": 525,
									"name": "project",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The project whose urls should be generated."
									},
									"type": {
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 658,
									"name": "UrlMapping"
								}
							}
						}
					]
				},
				{
					"id": 535,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 147,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 536,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initialize this component."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 520,
					"name": "isOutputDirectory",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 106,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 521,
							"name": "isOutputDirectory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether the given path contains a documentation generated by this theme.",
								"returns": "TRUE if the given path seems to be a previous output directory,\n             otherwise FALSE.\n"
							},
							"parameters": [
								{
									"id": 522,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path of the directory that should be tested."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 581,
					"name": "listenTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 523,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 582,
							"name": "listenTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `on`. Tell *this* object to listen to\nan event in another object... keeping track of what it's listening to\nfor easier unbinding later."
							},
							"parameters": [
								{
									"id": 583,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 584,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 585,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 586,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 587,
					"name": "listenToOnce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 557,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 588,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `once`."
							},
							"parameters": [
								{
									"id": 589,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 590,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						},
						{
							"id": 591,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 592,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 593,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 594,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 595,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 572,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 498,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 573,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one or many callbacks. If `context` is null, removes all\ncallbacks with that function. If `callback` is null, removes all\ncallbacks for the event. If `name` is null, removes all bound\ncallbacks for all events."
							},
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						},
						{
							"id": 574,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 575,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 576,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						},
						{
							"id": 577,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 578,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 579,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 580,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 549,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 410,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 550,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to a `callback` function. Passing `\"all\"` will bind\nthe callback to all events fired."
							},
							"parameters": [
								{
									"id": 551,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 552,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						},
						{
							"id": 553,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 554,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 555,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 556,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 557,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						},
						{
							"id": 558,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 559,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 560,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 561,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 562,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 529,
					"name": "onRendererBegin",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 175,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 530,
							"name": "onRendererBegin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Triggered before the renderer starts rendering a project."
							},
							"parameters": [
								{
									"id": 531,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An event object describing the current render operation.\n"
									},
									"type": {
										"type": "reference",
										"name": "RendererEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 563,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 468,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 564,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to only be triggered a single time. After the first time\nthe callback is invoked, its listener will be removed. If multiple events\nare passed in using the space-separated syntax, the handler will fire\nonce for each event, not once for a combination of all events."
							},
							"parameters": [
								{
									"id": 565,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 566,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						},
						{
							"id": 567,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 568,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 569,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 570,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 571,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 596,
					"name": "stopListening",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 585,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 597,
							"name": "stopListening",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tell this object to stop listening to either specific events ... or\nto every object it's currently listening to."
							},
							"parameters": [
								{
									"id": 598,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 599,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 600,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 601,
					"name": "trigger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 621,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 602,
							"name": "trigger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument)."
							},
							"parameters": [
								{
									"id": 603,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 604,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 488,
								"name": "DefaultTheme"
							}
						}
					]
				},
				{
					"id": 503,
					"name": "applyAnchorUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 285,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 504,
							"name": "applyAnchorUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate an anchor url for the given reflection and all of its children."
							},
							"parameters": [
								{
									"id": 505,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection an anchor url should be created for."
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								},
								{
									"id": 506,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The nearest reflection having an own document.\n"
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 510,
					"name": "applyGroupClasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 368,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 511,
							"name": "applyGroupClasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate the css classes for the given reflection group and apply them to the\n[[ReflectionGroup.cssClasses]] property."
							},
							"parameters": [
								{
									"id": 512,
									"name": "group",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection group whose cssClasses property should be generated.\n"
									},
									"type": {
										"type": "reference",
										"name": "ReflectionGroup"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 507,
					"name": "applyReflectionClasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 307,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 508,
							"name": "applyReflectionClasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate the css classes for the given reflection and apply them to the\n[[DeclarationReflection.cssClasses]] property."
							},
							"parameters": [
								{
									"id": 509,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection whose cssClasses property should be generated.\n"
									},
									"type": {
										"type": "reference",
										"id": 1467,
										"name": "DeclarationReflection"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 499,
					"name": "buildUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 245,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 500,
							"name": "buildUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Build the url for the the given reflection and all of its children.",
								"returns": "The altered urls array.\n"
							},
							"parameters": [
								{
									"id": 501,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection the url should be created for."
									},
									"type": {
										"type": "reference",
										"id": 1467,
										"name": "DeclarationReflection"
									}
								},
								{
									"id": 502,
									"name": "urls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The array the url should be appended to."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 658,
											"name": "UrlMapping"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 658,
									"name": "UrlMapping"
								}
							}
						}
					]
				},
				{
					"id": 496,
					"name": "getMapping",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 230,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 497,
							"name": "getMapping",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the template mapping for the given reflection.",
								"returns": "The found mapping or undefined if no mapping could be found.\n"
							},
							"parameters": [
								{
									"id": 498,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection whose mapping should be resolved."
									},
									"type": {
										"type": "reference",
										"id": 1467,
										"name": "DeclarationReflection"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "TemplateMapping"
									}
								]
							}
						}
					]
				},
				{
					"id": 491,
					"name": "getUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 203,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 492,
							"name": "getUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a url for the given reflection.",
								"returns": "The generated url.\n"
							},
							"parameters": [
								{
									"id": 493,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection the url should be generated for."
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								},
								{
									"id": 494,
									"name": "relative",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The parent reflection the url generation should stop on."
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								},
								{
									"id": 495,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The separator used to generate the url."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 513,
					"name": "toStyleClass",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 390,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 514,
							"name": "toStyleClass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transform a space separated string into a string suitable to be used as a\ncss class, e.g. \"constructor method\" > \"Constructor-method\"."
							},
							"parameters": [
								{
									"id": 515,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						516
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						532,
						534,
						533,
						489,
						490
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						547,
						543,
						545
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						537,
						526,
						541,
						523,
						535,
						520,
						581,
						587,
						572,
						549,
						529,
						563,
						596,
						601,
						503,
						510,
						507,
						499,
						496,
						491,
						513
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/output/themes/DefaultTheme.ts",
					"line": 50,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Theme"
				}
			]
		},
		{
			"id": 199,
			"name": "Event",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "An event object that can be processed with [[Events]]."
			},
			"children": [
				{
					"id": 200,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 201,
							"name": "new Event",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Event instance."
							},
							"parameters": [
								{
									"id": 202,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 199,
								"name": "Event"
							}
						}
					]
				},
				{
					"id": 205,
					"name": "_isDefaultPrevented",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Has [[Event.preventDefault]] been called?"
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 331,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 204,
					"name": "_isPropagationStopped",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "Has [[Event.stopPropagation]] been called?"
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 326,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 203,
					"name": "_name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"shortText": "The name of the event."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 321,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 214,
					"name": "isDefaultPrevented",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Has [[Event.preventDefault]] been called?"
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 371,
							"character": 26
						}
					],
					"getSignature": [
						{
							"id": 215,
							"name": "isDefaultPrevented",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Has [[Event.preventDefault]] been called?"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 212,
					"name": "isPropagationStopped",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Has [[Event.stopPropagation]] been called?"
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 364,
							"character": 28
						}
					],
					"getSignature": [
						{
							"id": 213,
							"name": "isPropagationStopped",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Has [[Event.stopPropagation]] been called?"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 210,
					"name": "name",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the event name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 357,
							"character": 12
						}
					],
					"getSignature": [
						{
							"id": 211,
							"name": "name",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the event name."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 208,
					"name": "preventDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 350,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 209,
							"name": "preventDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Prevent the default action associated with this event from being executed."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 206,
					"name": "stopPropagation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 343,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 207,
							"name": "stopPropagation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stop the propagation of this event. Remaining event handlers will not be executed."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						200
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						205,
						204,
						203
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						214,
						212,
						210
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						208,
						206
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/events.ts",
					"line": 317,
					"character": 18
				}
			]
		},
		{
			"id": 127,
			"name": "EventDispatcher",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A class that provides a custom event channel.",
				"text": "You may bind a callback to an event with `on` or remove with `off`;\n`trigger`-ing an event fires all callbacks in succession.\n"
			},
			"children": [
				{
					"id": 128,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 129,
							"name": "new EventDispatcher",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				},
				{
					"id": 130,
					"name": "_events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Map of all handlers registered with the \"on\" function."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 386,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "EventHandlers"
							}
						]
					}
				},
				{
					"id": 132,
					"name": "_listeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Map of all objects that are listening to this instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 396,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "EventListeners"
							}
						]
					}
				},
				{
					"id": 131,
					"name": "_listeningTo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Map of all objects this instance is listening to."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 391,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "EventListeners"
							}
						]
					}
				},
				{
					"id": 135,
					"name": "_savedListenId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 404,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 133,
					"name": "_listenId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A unique id that identifies this instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 401,
							"character": 25
						}
					],
					"getSignature": [
						{
							"id": 134,
							"name": "_listenId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A unique id that identifies this instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 150,
					"name": "internalOn",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 436,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 151,
							"name": "internalOn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Guard the `listening` argument from the public API."
							},
							"parameters": [
								{
									"id": 152,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 153,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "EventCallback"
											}
										]
									}
								},
								{
									"id": 154,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 155,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 156,
									"name": "listening",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventListener"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "listenTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 523,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "listenTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `on`. Tell *this* object to listen to\nan event in another object... keeping track of what it's listening to\nfor easier unbinding later."
							},
							"parameters": [
								{
									"id": 177,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 178,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 179,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 180,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				},
				{
					"id": 181,
					"name": "listenToOnce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 557,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `once`."
							},
							"parameters": [
								{
									"id": 183,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 184,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						},
						{
							"id": 185,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 186,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 187,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 188,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 189,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				},
				{
					"id": 166,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 498,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 167,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one or many callbacks. If `context` is null, removes all\ncallbacks with that function. If `callback` is null, removes all\ncallbacks for the event. If `name` is null, removes all bound\ncallbacks for all events."
							},
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						},
						{
							"id": 168,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 169,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 170,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						},
						{
							"id": 171,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 172,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 173,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 174,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				},
				{
					"id": 136,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 410,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 137,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to a `callback` function. Passing `\"all\"` will bind\nthe callback to all events fired."
							},
							"parameters": [
								{
									"id": 138,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 139,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						},
						{
							"id": 140,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 141,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 142,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 143,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 144,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						},
						{
							"id": 145,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 146,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 147,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 148,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 149,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				},
				{
					"id": 157,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 468,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to only be triggered a single time. After the first time\nthe callback is invoked, its listener will be removed. If multiple events\nare passed in using the space-separated syntax, the handler will fire\nonce for each event, not once for a combination of all events."
							},
							"parameters": [
								{
									"id": 159,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 160,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						},
						{
							"id": 161,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 162,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 163,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 164,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 165,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				},
				{
					"id": 190,
					"name": "stopListening",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 585,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 191,
							"name": "stopListening",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tell this object to stop listening to either specific events ... or\nto every object it's currently listening to."
							},
							"parameters": [
								{
									"id": 192,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 193,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 194,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				},
				{
					"id": 195,
					"name": "trigger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 621,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 196,
							"name": "trigger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument)."
							},
							"parameters": [
								{
									"id": 197,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 198,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 127,
								"name": "EventDispatcher"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						128
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						130,
						132,
						131,
						135
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						133
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						150,
						175,
						181,
						166,
						136,
						157,
						190,
						195
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/events.ts",
					"line": 382,
					"character": 28
				}
			]
		},
		{
			"id": 605,
			"name": "NavigationBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 606,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 607,
							"name": "new NavigationBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 608,
									"name": "project",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								},
								{
									"id": 609,
									"name": "entryPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1408,
										"name": "ContainerReflection"
									}
								},
								{
									"id": 610,
									"name": "multipleEntryPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 605,
								"name": "NavigationBuilder"
							}
						}
					]
				},
				{
					"id": 611,
					"name": "build",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 410,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 612,
							"name": "build",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Build the navigation structure.",
								"returns": "The root node of the generated navigation structure.\n"
							},
							"parameters": [
								{
									"id": 613,
									"name": "hasReadmeFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "True if the project has a readme"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 633,
								"name": "NavigationItem"
							}
						}
					]
				},
				{
					"id": 619,
					"name": "buildChildren",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 512,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 620,
							"name": "buildChildren",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create navigation nodes for all container children of the given reflection."
							},
							"parameters": [
								{
									"id": 621,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection whose children modules should be transformed into navigation nodes."
									},
									"type": {
										"type": "reference",
										"id": 1467,
										"name": "DeclarationReflection"
									}
								},
								{
									"id": 622,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The parent NavigationItem of the newly created nodes.\n"
									},
									"type": {
										"type": "reference",
										"id": 633,
										"name": "NavigationItem"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 614,
					"name": "buildGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 466,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 615,
							"name": "buildGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create navigation nodes for the given list of reflections. The resulting nodes will be grouped into\nan \"internal\" and an \"external\" section when applicable."
							},
							"parameters": [
								{
									"id": 616,
									"name": "reflections",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The list of reflections which should be transformed into navigation nodes."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1467,
											"name": "DeclarationReflection"
										}
									}
								},
								{
									"id": 617,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The parent NavigationItem of the newly created nodes."
									},
									"type": {
										"type": "reference",
										"id": 633,
										"name": "NavigationItem"
									}
								},
								{
									"id": 618,
									"name": "buildChildren",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Whether navigation nodes should also be built for the children of each reflection.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 623,
					"name": "containsExternals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 534,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 624,
							"name": "containsExternals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether the given list of modules contains an external module.",
								"returns": "TRUE if any of the modules is marked as being external.\n"
							},
							"parameters": [
								{
									"id": 625,
									"name": "modules",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The list of modules to test."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1467,
											"name": "DeclarationReflection"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 629,
					"name": "includeDedicatedUrls",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 567,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 630,
							"name": "includeDedicatedUrls",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Find the urls of all children of the given reflection and store them as dedicated urls\nof the given NavigationItem."
							},
							"parameters": [
								{
									"id": 631,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection whose children urls should be included."
									},
									"type": {
										"type": "reference",
										"id": 1467,
										"name": "DeclarationReflection"
									}
								},
								{
									"id": 632,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The navigation node whose dedicated urls should be set.\n"
									},
									"type": {
										"type": "reference",
										"id": 633,
										"name": "NavigationItem"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 626,
					"name": "sortReflections",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/themes/DefaultTheme.ts",
							"line": 548,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 627,
							"name": "sortReflections",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sort the given list of modules by name, groups external modules at the bottom."
							},
							"parameters": [
								{
									"id": 628,
									"name": "modules",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The list of modules that should be sorted.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1467,
											"name": "DeclarationReflection"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						606
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						611,
						619,
						614,
						623,
						629,
						626
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/output/themes/DefaultTheme.ts",
					"line": 397,
					"character": 30
				}
			]
		},
		{
			"id": 633,
			"name": "NavigationItem",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A hierarchical model holding the data of single node within the navigation.",
				"text": "This structure is used by the [[NavigationPlugin]] and [[TocPlugin]] to expose the current\nnavigation state to the template engine. Themes should generate the primary navigation structure\nthrough the [[BaseTheme.getNavigation]] method.\n"
			},
			"children": [
				{
					"id": 639,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 640,
							"name": "new NavigationItem",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new NavigationItem instance."
							},
							"parameters": [
								{
									"id": 641,
									"name": "title",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The visible title of the navigation node."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 642,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The url this navigation node points to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 643,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The parent navigation node."
									},
									"type": {
										"type": "reference",
										"id": 633,
										"name": "NavigationItem"
									}
								},
								{
									"id": 644,
									"name": "cssClasses",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "A string containing the css classes of this node."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 645,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The source [Reflection] for this [NavigationItem]\n"
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 633,
								"name": "NavigationItem"
							}
						}
					]
				},
				{
					"id": 650,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An array containing all child navigation nodes."
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 633,
									"name": "NavigationItem"
								}
							}
						]
					}
				},
				{
					"id": 651,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A string containing the css classes of this node."
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 39,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 648,
					"name": "dedicatedUrls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of urls that should be seen as sub-pages of this node."
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 24,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 654,
					"name": "isCurrent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Does this navigation node represent the current page?"
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 54,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 656,
					"name": "isInPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is this navigation node one of the parents of the current page?"
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 64,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 652,
					"name": "isLabel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is this item a simple label without a link?"
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 44,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 655,
					"name": "isModules",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is this the navigation node for the modules page?"
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 59,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 653,
					"name": "isVisible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is this item visible?"
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 49,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 649,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parent navigation node."
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 29,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 633,
								"name": "NavigationItem"
							}
						]
					}
				},
				{
					"id": 657,
					"name": "reflection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The source [Reflection] this item is built from"
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 69,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					}
				},
				{
					"id": 646,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The visible title of the navigation node."
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 647,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The url this navigation node points to."
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 19,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 634,
					"name": "create",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/models/NavigationItem.ts",
							"line": 112,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 635,
							"name": "create",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a navigation node for the given reflection."
							},
							"parameters": [
								{
									"id": 636,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The reflection whose navigation node should be created."
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								},
								{
									"id": 637,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The parent navigation node."
									},
									"type": {
										"type": "reference",
										"id": 633,
										"name": "NavigationItem"
									}
								},
								{
									"id": 638,
									"name": "useShortNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Force this function to always use short names.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 633,
								"name": "NavigationItem"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						639
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						650,
						651,
						648,
						654,
						656,
						652,
						655,
						653,
						649,
						657,
						646,
						647
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						634
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/output/models/NavigationItem.ts",
					"line": 10,
					"character": 27
				}
			]
		},
		{
			"id": 690,
			"name": "Options",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Maintains a collection of option declarations split into TypeDoc options\nand TypeScript options. Ensures options are of the correct type for calling\ncode.",
				"text": "### Option Discovery\n\nSince plugins commonly add custom options, and TypeDoc does not permit options which have\nnot been declared to be set, options must be read twice. The first time options are read,\na noop logger is passed so that any errors are ignored. Then, after loading plugins, options\nare read again, this time with the logger specified by the application.\n\nOptions are read in a specific order.\n1. argv (0) - Must be read first since it should change the files read when\n   passing --options or --tsconfig.\n2. typedoc-json (100) - Read next so that it can specify the tsconfig.json file to read.\n3. tsconfig-json (200) - Last config file reader, cannot specify the typedoc.json file to read.\n4. argv (300) - Read argv again since any options set there should override those set in config\n   files.\n"
			},
			"children": [
				{
					"id": 691,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 692,
							"name": "new Options",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 693,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 690,
								"name": "Options"
							}
						}
					]
				},
				{
					"id": 697,
					"name": "_compilerOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 81,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "CompilerOptions"
					},
					"defaultValue": "..."
				},
				{
					"id": 695,
					"name": "_declarations",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 79,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 881,
												"name": "StringDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 891,
												"name": "NumberDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 902,
												"name": "BooleanDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 916,
												"name": "MixedDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 925,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "MapDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 907,
												"name": "ArrayDeclarationOption"
											}
										],
										"name": "Readonly"
									}
								]
							}
						],
						"name": "Map"
					},
					"defaultValue": "..."
				},
				{
					"id": 698,
					"name": "_fileNames",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 82,
							"character": 22
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 700,
					"name": "_logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 84,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "Logger"
					}
				},
				{
					"id": 699,
					"name": "_projectReferences",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 83,
							"character": 30
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "ProjectReference"
							}
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 694,
					"name": "_readers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 78,
							"character": 20
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 774,
							"name": "OptionsReader"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 696,
					"name": "_values",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 80,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record"
					},
					"defaultValue": "..."
				},
				{
					"id": 717,
					"name": "addDeclaration",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 144,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 718,
							"name": "addDeclaration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds an option declaration to the container with extra type checking to ensure that\nthe runtime type is consistent with the declared type."
							},
							"typeParameter": [
								{
									"id": 719,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "logger"
											},
											{
												"type": "literal",
												"value": "options"
											},
											{
												"type": "literal",
												"value": "tsconfig"
											},
											{
												"type": "literal",
												"value": "entryPoints"
											},
											{
												"type": "literal",
												"value": "exclude"
											},
											{
												"type": "literal",
												"value": "externalPattern"
											},
											{
												"type": "literal",
												"value": "excludeExternals"
											},
											{
												"type": "literal",
												"value": "excludePrivate"
											},
											{
												"type": "literal",
												"value": "excludeProtected"
											},
											{
												"type": "literal",
												"value": "excludeNotDocumented"
											},
											{
												"type": "literal",
												"value": "disableSources"
											},
											{
												"type": "literal",
												"value": "includes"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "out"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "includeVersion"
											},
											{
												"type": "literal",
												"value": "excludeTags"
											},
											{
												"type": "literal",
												"value": "readme"
											},
											{
												"type": "literal",
												"value": "defaultCategory"
											},
											{
												"type": "literal",
												"value": "categoryOrder"
											},
											{
												"type": "literal",
												"value": "categorizeByGroup"
											},
											{
												"type": "literal",
												"value": "gitRevision"
											},
											{
												"type": "literal",
												"value": "gitRemote"
											},
											{
												"type": "literal",
												"value": "gaID"
											},
											{
												"type": "literal",
												"value": "gaSite"
											},
											{
												"type": "literal",
												"value": "hideGenerator"
											},
											{
												"type": "literal",
												"value": "toc"
											},
											{
												"type": "literal",
												"value": "disableOutputCheck"
											},
											{
												"type": "literal",
												"value": "help"
											},
											{
												"type": "literal",
												"value": "version"
											},
											{
												"type": "literal",
												"value": "showConfig"
											},
											{
												"type": "literal",
												"value": "plugin"
											},
											{
												"type": "literal",
												"value": "logLevel"
											},
											{
												"type": "literal",
												"value": "listInvalidSymbolLinks"
											},
											{
												"type": "literal",
												"value": "markedOptions"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 720,
									"name": "declaration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The option declaration that should be added.\n"
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 721,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 722,
															"name": "name",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/utils/options/options.ts",
																	"line": 145,
																	"character": 27
																}
															],
															"type": {
																"type": "reference",
																"name": "K"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																722
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"id": 830,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													}
												],
												"name": "KeyToDeclaration"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 723,
							"name": "addDeclaration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds an option declaration to the container."
							},
							"parameters": [
								{
									"id": 724,
									"name": "declaration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The option declaration that should be added.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "addDeclarations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 177,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 726,
							"name": "addDeclarations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the given declarations to the container",
								"tags": [
									{
										"tag": "privateremarks",
										"text": "\nThis function explicitly provides a way out of the strict typing enforced\nby {@link addDeclaration}. It should only be used with careful validation\nof the declaration map. Internally, it is only used for adding TS options\n"
									}
								]
							},
							"parameters": [
								{
									"id": 727,
									"name": "declarations",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 876,
												"name": "DeclarationOption"
											}
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 704,
					"name": "addDefaultDeclarations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 101,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 705,
							"name": "addDefaultDeclarations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds the option declarations declared by the TypeDoc and all supported TypeScript declarations."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 708,
					"name": "addReader",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 121,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 709,
							"name": "addReader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds an option reader that will be used to read configuration values\nfrom the command line, configuration files, or other locations."
							},
							"parameters": [
								{
									"id": 710,
									"name": "reader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"id": 774,
										"name": "OptionsReader"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 757,
					"name": "getCompilerOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 276,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 758,
							"name": "getCompilerOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the set compiler options."
							},
							"type": {
								"type": "reference",
								"name": "CompilerOptions"
							}
						}
					]
				},
				{
					"id": 731,
					"name": "getDeclaration",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 201,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 732,
							"name": "getDeclaration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a declaration by one of its names."
							},
							"parameters": [
								{
									"id": 733,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 881,
												"name": "StringDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 891,
												"name": "NumberDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 902,
												"name": "BooleanDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 916,
												"name": "MixedDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 925,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "MapDeclarationOption"
											}
										],
										"name": "Readonly"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 907,
												"name": "ArrayDeclarationOption"
											}
										],
										"name": "Readonly"
									}
								]
							}
						}
					]
				},
				{
					"id": 734,
					"name": "getDeclarations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 208,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 735,
							"name": "getDeclarations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all declared options."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 881,
													"name": "StringDeclarationOption"
												}
											],
											"name": "Readonly"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 891,
													"name": "NumberDeclarationOption"
												}
											],
											"name": "Readonly"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 902,
													"name": "BooleanDeclarationOption"
												}
											],
											"name": "Readonly"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 916,
													"name": "MixedDeclarationOption"
												}
											],
											"name": "Readonly"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 925,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "MapDeclarationOption"
												}
											],
											"name": "Readonly"
										},
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 907,
													"name": "ArrayDeclarationOption"
												}
											],
											"name": "Readonly"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 771,
					"name": "getDefaultOptionValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 319,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 772,
							"name": "getDefaultOptionValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 773,
									"name": "declaration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 881,
														"name": "StringDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 891,
														"name": "NumberDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 902,
														"name": "BooleanDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 916,
														"name": "MixedDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 925,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "MapDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 907,
														"name": "ArrayDeclarationOption"
													}
												],
												"name": "Readonly"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 759,
					"name": "getFileNames",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 283,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 760,
							"name": "getFileNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the file names discovered through reading a tsconfig file."
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						}
					]
				},
				{
					"id": 761,
					"name": "getProjectReferences",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 290,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 762,
							"name": "getProjectReferences",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the project references - used in solution style tsconfig setups."
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "ProjectReference"
									}
								}
							}
						}
					]
				},
				{
					"id": 741,
					"name": "getRawValues",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 229,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 742,
							"name": "getRawValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all of the TypeDoc option values defined in this option container."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 791,
										"name": "TypeDocOptions"
									}
								],
								"name": "Partial"
							}
						}
					]
				},
				{
					"id": 743,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 237,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 744,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a value for the given option key, throwing if the option has not been declared."
							},
							"typeParameter": [
								{
									"id": 745,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "logger"
											},
											{
												"type": "literal",
												"value": "options"
											},
											{
												"type": "literal",
												"value": "tsconfig"
											},
											{
												"type": "literal",
												"value": "entryPoints"
											},
											{
												"type": "literal",
												"value": "exclude"
											},
											{
												"type": "literal",
												"value": "externalPattern"
											},
											{
												"type": "literal",
												"value": "excludeExternals"
											},
											{
												"type": "literal",
												"value": "excludePrivate"
											},
											{
												"type": "literal",
												"value": "excludeProtected"
											},
											{
												"type": "literal",
												"value": "excludeNotDocumented"
											},
											{
												"type": "literal",
												"value": "disableSources"
											},
											{
												"type": "literal",
												"value": "includes"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "out"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "includeVersion"
											},
											{
												"type": "literal",
												"value": "excludeTags"
											},
											{
												"type": "literal",
												"value": "readme"
											},
											{
												"type": "literal",
												"value": "defaultCategory"
											},
											{
												"type": "literal",
												"value": "categoryOrder"
											},
											{
												"type": "literal",
												"value": "categorizeByGroup"
											},
											{
												"type": "literal",
												"value": "gitRevision"
											},
											{
												"type": "literal",
												"value": "gitRemote"
											},
											{
												"type": "literal",
												"value": "gaID"
											},
											{
												"type": "literal",
												"value": "gaSite"
											},
											{
												"type": "literal",
												"value": "hideGenerator"
											},
											{
												"type": "literal",
												"value": "toc"
											},
											{
												"type": "literal",
												"value": "disableOutputCheck"
											},
											{
												"type": "literal",
												"value": "help"
											},
											{
												"type": "literal",
												"value": "version"
											},
											{
												"type": "literal",
												"value": "showConfig"
											},
											{
												"type": "literal",
												"value": "plugin"
											},
											{
												"type": "literal",
												"value": "logLevel"
											},
											{
												"type": "literal",
												"value": "listInvalidSymbolLinks"
											},
											{
												"type": "literal",
												"value": "markedOptions"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 746,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"name": "TypeDocOptionValues"
								}
							}
						},
						{
							"id": 747,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 748,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 736,
					"name": "isDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 216,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 737,
							"name": "isDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if the given option's value is deeply strict equal to the default."
							},
							"parameters": [
								{
									"id": 738,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "logger"
											},
											{
												"type": "literal",
												"value": "options"
											},
											{
												"type": "literal",
												"value": "tsconfig"
											},
											{
												"type": "literal",
												"value": "entryPoints"
											},
											{
												"type": "literal",
												"value": "exclude"
											},
											{
												"type": "literal",
												"value": "externalPattern"
											},
											{
												"type": "literal",
												"value": "excludeExternals"
											},
											{
												"type": "literal",
												"value": "excludePrivate"
											},
											{
												"type": "literal",
												"value": "excludeProtected"
											},
											{
												"type": "literal",
												"value": "excludeNotDocumented"
											},
											{
												"type": "literal",
												"value": "disableSources"
											},
											{
												"type": "literal",
												"value": "includes"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "out"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "includeVersion"
											},
											{
												"type": "literal",
												"value": "excludeTags"
											},
											{
												"type": "literal",
												"value": "readme"
											},
											{
												"type": "literal",
												"value": "defaultCategory"
											},
											{
												"type": "literal",
												"value": "categoryOrder"
											},
											{
												"type": "literal",
												"value": "categorizeByGroup"
											},
											{
												"type": "literal",
												"value": "gitRevision"
											},
											{
												"type": "literal",
												"value": "gitRemote"
											},
											{
												"type": "literal",
												"value": "gaID"
											},
											{
												"type": "literal",
												"value": "gaSite"
											},
											{
												"type": "literal",
												"value": "hideGenerator"
											},
											{
												"type": "literal",
												"value": "toc"
											},
											{
												"type": "literal",
												"value": "disableOutputCheck"
											},
											{
												"type": "literal",
												"value": "help"
											},
											{
												"type": "literal",
												"value": "version"
											},
											{
												"type": "literal",
												"value": "showConfig"
											},
											{
												"type": "literal",
												"value": "plugin"
											},
											{
												"type": "literal",
												"value": "logLevel"
											},
											{
												"type": "literal",
												"value": "listInvalidSymbolLinks"
											},
											{
												"type": "literal",
												"value": "markedOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 739,
							"name": "isDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 740,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 714,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 133,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 715,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 716,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 728,
					"name": "removeDeclarationByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 189,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 729,
							"name": "removeDeclarationByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a declared option.\nWARNING: This is probably a bad idea. If you do this you will probably cause a crash\nwhen code assumes that an option that it declared still exists."
							},
							"parameters": [
								{
									"id": 730,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 711,
					"name": "removeReaderByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 129,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 712,
							"name": "removeReaderByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes all readers of a given name."
							},
							"parameters": [
								{
									"id": 713,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 706,
					"name": "reset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 108,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 707,
							"name": "reset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Resets the option bag to all default values."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 763,
					"name": "setCompilerOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 297,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 764,
							"name": "setCompilerOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the compiler options that will be used to get a TS program."
							},
							"parameters": [
								{
									"id": 765,
									"name": "fileNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								},
								{
									"id": 766,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CompilerOptions"
									}
								},
								{
									"id": 767,
									"name": "projectReferences",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ProjectReference"
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 701,
					"name": "setLogger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 94,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 702,
							"name": "setLogger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the logger used when an option declaration fails to be added."
							},
							"parameters": [
								{
									"id": 703,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 768,
					"name": "setOptionValueToDefault",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 311,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 769,
							"name": "setOptionValueToDefault",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the value of a given option to its default value."
							},
							"parameters": [
								{
									"id": 770,
									"name": "declaration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The option whose value should be reset.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 881,
														"name": "StringDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 891,
														"name": "NumberDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 902,
														"name": "BooleanDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 916,
														"name": "MixedDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 925,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "MapDeclarationOption"
													}
												],
												"name": "Readonly"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 907,
														"name": "ArrayDeclarationOption"
													}
												],
												"name": "Readonly"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 749,
					"name": "setValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 253,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 750,
							"name": "setValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the given declared option. Throws if setting the option fails."
							},
							"typeParameter": [
								{
									"id": 751,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "logger"
											},
											{
												"type": "literal",
												"value": "options"
											},
											{
												"type": "literal",
												"value": "tsconfig"
											},
											{
												"type": "literal",
												"value": "entryPoints"
											},
											{
												"type": "literal",
												"value": "exclude"
											},
											{
												"type": "literal",
												"value": "externalPattern"
											},
											{
												"type": "literal",
												"value": "excludeExternals"
											},
											{
												"type": "literal",
												"value": "excludePrivate"
											},
											{
												"type": "literal",
												"value": "excludeProtected"
											},
											{
												"type": "literal",
												"value": "excludeNotDocumented"
											},
											{
												"type": "literal",
												"value": "disableSources"
											},
											{
												"type": "literal",
												"value": "includes"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "out"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "includeVersion"
											},
											{
												"type": "literal",
												"value": "excludeTags"
											},
											{
												"type": "literal",
												"value": "readme"
											},
											{
												"type": "literal",
												"value": "defaultCategory"
											},
											{
												"type": "literal",
												"value": "categoryOrder"
											},
											{
												"type": "literal",
												"value": "categorizeByGroup"
											},
											{
												"type": "literal",
												"value": "gitRevision"
											},
											{
												"type": "literal",
												"value": "gitRemote"
											},
											{
												"type": "literal",
												"value": "gaID"
											},
											{
												"type": "literal",
												"value": "gaSite"
											},
											{
												"type": "literal",
												"value": "hideGenerator"
											},
											{
												"type": "literal",
												"value": "toc"
											},
											{
												"type": "literal",
												"value": "disableOutputCheck"
											},
											{
												"type": "literal",
												"value": "help"
											},
											{
												"type": "literal",
												"value": "version"
											},
											{
												"type": "literal",
												"value": "showConfig"
											},
											{
												"type": "literal",
												"value": "plugin"
											},
											{
												"type": "literal",
												"value": "logLevel"
											},
											{
												"type": "literal",
												"value": "listInvalidSymbolLinks"
											},
											{
												"type": "literal",
												"value": "markedOptions"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 752,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 753,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 791,
											"name": "TypeDocOptions"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						},
						{
							"id": 754,
							"name": "setValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 755,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								{
									"id": 756,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						691
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						697,
						695,
						698,
						700,
						699,
						694,
						696
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						717,
						725,
						704,
						708,
						757,
						731,
						734,
						771,
						759,
						761,
						741,
						743,
						736,
						714,
						728,
						711,
						706,
						763,
						701,
						768,
						749
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/options.ts",
					"line": 77,
					"character": 20
				}
			]
		},
		{
			"id": 1552,
			"name": "ParameterReflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1553,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1554,
							"name": "new ParameterReflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new BaseReflection instance."
							},
							"parameters": [
								{
									"id": 1555,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1556,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								},
								{
									"id": 1557,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1552,
								"name": "ParameterReflection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1200,
								"name": "Reflection.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1199,
						"name": "Reflection.constructor"
					}
				},
				{
					"id": 1577,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1216,
						"name": "Reflection.anchor"
					}
				},
				{
					"id": 1572,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1211,
						"name": "Reflection.comment"
					}
				},
				{
					"id": 1579,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1218,
						"name": "Reflection.cssClasses"
					}
				},
				{
					"id": 1575,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1214,
						"name": "Reflection.decorates"
					}
				},
				{
					"id": 1574,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1213,
						"name": "Reflection.decorators"
					}
				},
				{
					"id": 1559,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/parameter.ts",
							"line": 16,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1571,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1209,
						"name": "Reflection.flags"
					}
				},
				{
					"id": 1578,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1217,
						"name": "Reflection.hasOwnDocument"
					}
				},
				{
					"id": 1566,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1204,
						"name": "Reflection.id"
					}
				},
				{
					"id": 1569,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1207,
						"name": "Reflection.kind"
					}
				},
				{
					"id": 1570,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1208,
						"name": "Reflection.kindString"
					}
				},
				{
					"id": 1567,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1205,
						"name": "Reflection.name"
					}
				},
				{
					"id": 1568,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1206,
						"name": "Reflection.originalName"
					}
				},
				{
					"id": 1558,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/parameter.ts",
							"line": 14,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 1210,
						"name": "Reflection.parent"
					}
				},
				{
					"id": 1573,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1212,
						"name": "Reflection.sources"
					}
				},
				{
					"id": 1560,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/parameter.ts",
							"line": 18,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1576,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1215,
						"name": "Reflection.url"
					}
				},
				{
					"id": 1601,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1602,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1603,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "Reflection.findReflectionByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1242,
						"name": "Reflection.findReflectionByName"
					}
				},
				{
					"id": 1590,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1591,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "Reflection.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "Reflection.getAlias"
					}
				},
				{
					"id": 1596,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1597,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1598,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "Reflection.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1237,
						"name": "Reflection.getChildByName"
					}
				},
				{
					"id": 1583,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1584,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1585,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "Reflection.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1224,
						"name": "Reflection.getFullName"
					}
				},
				{
					"id": 1592,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1593,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "Reflection.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1233,
						"name": "Reflection.hasComment"
					}
				},
				{
					"id": 1594,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 511,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1595,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1236,
								"name": "Reflection.hasGetterOrSetter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1235,
						"name": "Reflection.hasGetterOrSetter"
					}
				},
				{
					"id": 1599,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1600,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1241,
								"name": "Reflection.isProject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1240,
						"name": "Reflection.isProject"
					}
				},
				{
					"id": 1580,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1581,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1582,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1222,
								"name": "Reflection.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1221,
						"name": "Reflection.kindOf"
					}
				},
				{
					"id": 1586,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1587,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1588,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1589,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "Reflection.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1227,
						"name": "Reflection.setFlag"
					}
				},
				{
					"id": 1564,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/parameter.ts",
							"line": 46,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1565,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 1249,
								"name": "Reflection.toString"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1248,
						"name": "Reflection.toString"
					}
				},
				{
					"id": 1604,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1605,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1606,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "Reflection.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1250,
						"name": "Reflection.toStringHierarchy"
					}
				},
				{
					"id": 1561,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/parameter.ts",
							"line": 28,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1562,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1563,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function that should be applied for each child reflection.\n"
									},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 1246,
								"name": "Reflection.traverse"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1245,
						"name": "Reflection.traverse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1553
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1577,
						1572,
						1579,
						1575,
						1574,
						1559,
						1571,
						1578,
						1566,
						1569,
						1570,
						1567,
						1568,
						1558,
						1573,
						1560,
						1576
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1601,
						1590,
						1596,
						1583,
						1592,
						1594,
						1599,
						1580,
						1586,
						1564,
						1604,
						1561
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/parameter.ts",
					"line": 11,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1198,
					"name": "Reflection"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "DefaultValueContainer"
				},
				{
					"type": "reference",
					"name": "TypeContainer"
				}
			]
		},
		{
			"id": 1607,
			"name": "ProjectReflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A reflection that represents the root of the project.",
				"text": "The project reflection acts as a global index, one may receive all reflections\nand source files of the processed project through this reflection.\n"
			},
			"children": [
				{
					"id": 1608,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1609,
							"name": "new ProjectReflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new ProjectReflection instance."
							},
							"parameters": [
								{
									"id": 1610,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the project.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1607,
								"name": "ProjectReflection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1410,
								"name": "ContainerReflection.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1409,
						"name": "ContainerReflection.constructor"
					}
				},
				{
					"id": 1671,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1435,
						"name": "ContainerReflection.anchor"
					}
				},
				{
					"id": 1653,
					"name": "categories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their category."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 26,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionCategory"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1416,
						"name": "ContainerReflection.categories"
					}
				},
				{
					"id": 1651,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The children of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1414,
						"name": "ContainerReflection.children"
					}
				},
				{
					"id": 1666,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1430,
						"name": "ContainerReflection.comment"
					}
				},
				{
					"id": 1673,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1437,
						"name": "ContainerReflection.cssClasses"
					}
				},
				{
					"id": 1669,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1433,
						"name": "ContainerReflection.decorates"
					}
				},
				{
					"id": 1668,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1432,
						"name": "ContainerReflection.decorators"
					}
				},
				{
					"id": 1618,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The root directory of the project."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 39,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "SourceDirectory"
					},
					"defaultValue": "..."
				},
				{
					"id": 1619,
					"name": "files",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of all source files within the project."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 44,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "SourceFile"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1664,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1428,
						"name": "ContainerReflection.flags"
					}
				},
				{
					"id": 1652,
					"name": "groups",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their kind."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 21,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionGroup"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1415,
						"name": "ContainerReflection.groups"
					}
				},
				{
					"id": 1672,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1436,
						"name": "ContainerReflection.hasOwnDocument"
					}
				},
				{
					"id": 1660,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1423,
						"name": "ContainerReflection.id"
					}
				},
				{
					"id": 1662,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1426,
						"name": "ContainerReflection.kind"
					}
				},
				{
					"id": 1663,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1427,
						"name": "ContainerReflection.kindString"
					}
				},
				{
					"id": 1620,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The name of the project.",
						"text": "The name can be passed as a command line argument or it is read from the package info.\nthis.name is assigned in the Reflection class.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 52,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 1424,
						"name": "ContainerReflection.name"
					}
				},
				{
					"id": 1661,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1425,
						"name": "ContainerReflection.originalName"
					}
				},
				{
					"id": 1622,
					"name": "packageInfo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The parsed data of the package.json file of the project when found."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 62,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1665,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The reflection this reflection is a child of."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 361,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1429,
						"name": "ContainerReflection.parent"
					}
				},
				{
					"id": 1621,
					"name": "readme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The contents of the readme.md file of the project when found."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 57,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1613,
					"name": "referenceGraph",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 27,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"name": "Map"
							}
						]
					}
				},
				{
					"id": 1612,
					"name": "reflectionIdToSymbolMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 24,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"name": "Symbol"
							}
						],
						"name": "Map"
					},
					"defaultValue": "..."
				},
				{
					"id": 1614,
					"name": "reflections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A list of all reflections within the project.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "use {@link getReflectionById}, this will eventually be removed.\n  To iterate over all reflections, prefer {@link getReflectionsByKind}.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 34,
							"character": 15
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1615,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 1616,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1617,
										"name": "id",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1198,
									"name": "Reflection"
								}
							}
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1667,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1431,
						"name": "ContainerReflection.sources"
					}
				},
				{
					"id": 1611,
					"name": "symbolToReflectionIdMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 22,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Symbol"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Map"
					},
					"defaultValue": "..."
				},
				{
					"id": 1670,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1434,
						"name": "ContainerReflection.url"
					}
				},
				{
					"id": 1628,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 98,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1629,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or undefined.\n"
							},
							"parameters": [
								{
									"id": 1630,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 1460,
								"name": "ContainerReflection.findReflectionByName"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1459,
						"name": "ContainerReflection.findReflectionByName"
					}
				},
				{
					"id": 1684,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1685,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1449,
								"name": "ContainerReflection.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1448,
						"name": "ContainerReflection.getAlias"
					}
				},
				{
					"id": 1690,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1691,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1692,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1455,
								"name": "ContainerReflection.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1454,
						"name": "ContainerReflection.getChildByName"
					}
				},
				{
					"id": 1654,
					"name": "getChildrenByKind",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 34,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1655,
							"name": "getChildrenByKind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a list of all children of a certain kind.",
								"returns": "An array containing all children with the desired kind.\n"
							},
							"parameters": [
								{
									"id": 1656,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The desired kind of children."
									},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1418,
								"name": "ContainerReflection.getChildrenByKind"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1417,
						"name": "ContainerReflection.getChildrenByKind"
					}
				},
				{
					"id": 1677,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1678,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1679,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1442,
								"name": "ContainerReflection.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1441,
						"name": "ContainerReflection.getFullName"
					}
				},
				{
					"id": 1649,
					"name": "getReferenceGraph",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 249,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1650,
							"name": "getReferenceGraph",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"name": "Map"
							}
						}
					]
				},
				{
					"id": 1640,
					"name": "getReflectionById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 229,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1641,
							"name": "getReflectionById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the reflection registered for the given reflection ID, or undefined if it is not present\nin the project."
							},
							"parameters": [
								{
									"id": 1642,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							}
						}
					]
				},
				{
					"id": 1643,
					"name": "getReflectionFromSymbol",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 237,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 1644,
							"name": "getReflectionFromSymbol",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the reflection associated with the given symbol, if it exists.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1645,
									"name": "symbol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Symbol"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							}
						}
					]
				},
				{
					"id": 1625,
					"name": "getReflectionsByKind",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 86,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1626,
							"name": "getReflectionsByKind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a list of all reflections in this project of a certain kind.",
								"returns": "An array containing all reflections with the desired kind.\n"
							},
							"parameters": [
								{
									"id": 1627,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The desired kind of reflection."
									},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1198,
									"name": "Reflection"
								}
							}
						}
					]
				},
				{
					"id": 1646,
					"name": "getSymbolFromReflection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 245,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 1647,
							"name": "getSymbolFromReflection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 1648,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "Symbol"
									}
								]
							}
						}
					]
				},
				{
					"id": 1686,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1687,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1451,
								"name": "ContainerReflection.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1450,
						"name": "ContainerReflection.hasComment"
					}
				},
				{
					"id": 1688,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 511,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1689,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1453,
								"name": "ContainerReflection.hasGetterOrSetter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1452,
						"name": "ContainerReflection.hasGetterOrSetter"
					}
				},
				{
					"id": 1623,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 76,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1624,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 1458,
								"name": "ContainerReflection.isProject"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1457,
						"name": "ContainerReflection.isProject"
					}
				},
				{
					"id": 1674,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1675,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1676,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1439,
								"name": "ContainerReflection.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1438,
						"name": "ContainerReflection.kindOf"
					}
				},
				{
					"id": 1633,
					"name": "registerReflection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 148,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 1634,
							"name": "registerReflection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Registers the given reflection so that it can be quickly looked up by helper methods.\nShould be called for *every* reflection added to the project."
							},
							"parameters": [
								{
									"id": 1635,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								},
								{
									"id": 1636,
									"name": "symbol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Symbol"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1631,
					"name": "removeDanglingReferences",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 130,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 1632,
							"name": "removeDanglingReferences",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "When excludeNotExported is set, if a symbol is exported only under a different name\nthere will be a reference which points to the symbol, but the symbol will not be converted\nand the rename will point to nothing. Warn the user if this happens."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1637,
					"name": "removeReflection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/project.ts",
							"line": 166,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1638,
							"name": "removeReflection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a reflection from the documentation. Can be used by plugins to filter reflections\nout of the generated documentation. Has no effect if the reflection is not present in the\nproject."
							},
							"parameters": [
								{
									"id": 1639,
									"name": "reflection",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1680,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1681,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1682,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1683,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1445,
								"name": "ContainerReflection.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1444,
						"name": "ContainerReflection.setFlag"
					}
				},
				{
					"id": 1693,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 582,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1694,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1463,
								"name": "ContainerReflection.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1462,
						"name": "ContainerReflection.toString"
					}
				},
				{
					"id": 1695,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1696,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1697,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1465,
								"name": "ContainerReflection.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1464,
						"name": "ContainerReflection.toStringHierarchy"
					}
				},
				{
					"id": 1657,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 46,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1658,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1659,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function that should be applied for each child reflection.\n"
									},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1421,
								"name": "ContainerReflection.traverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1420,
						"name": "ContainerReflection.traverse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1608
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1671,
						1653,
						1651,
						1666,
						1673,
						1669,
						1668,
						1618,
						1619,
						1664,
						1652,
						1672,
						1660,
						1662,
						1663,
						1620,
						1661,
						1622,
						1665,
						1621,
						1613,
						1612,
						1614,
						1667,
						1611,
						1670
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1628,
						1684,
						1690,
						1654,
						1677,
						1649,
						1640,
						1643,
						1625,
						1646,
						1686,
						1688,
						1623,
						1674,
						1633,
						1631,
						1637,
						1680,
						1693,
						1695,
						1657
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/project.ts",
					"line": 20,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1408,
					"name": "ContainerReflection"
				}
			]
		},
		{
			"id": 1698,
			"name": "ReferenceReflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Describes a reflection which does not exist at this location, but is referenced. Used for imported reflections.",
				"text": "```ts\n// a.ts\nexport const a = 1;\n// b.ts\nimport { a } from './a';\n// Here to avoid extra work we create a reference to the original reflection in module a instead\n// of copying the reflection.\nexport { a };\n```\n"
			},
			"children": [
				{
					"id": 1699,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1700,
							"name": "new ReferenceReflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a reference reflection. Should only be used within the factory function.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1701,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1702,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Symbol"
											},
											{
												"type": "reference",
												"id": 1198,
												"name": "Reflection"
											}
										]
									}
								},
								{
									"id": 1703,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1698,
								"name": "ReferenceReflection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1469,
								"name": "DeclarationReflection.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1468,
						"name": "DeclarationReflection.constructor"
					}
				},
				{
					"id": 1705,
					"name": "_project",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 21,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1607,
								"name": "ProjectReflection"
							}
						]
					}
				},
				{
					"id": 1704,
					"name": "_target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 20,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Symbol"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					}
				},
				{
					"id": 1764,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1520,
						"name": "DeclarationReflection.anchor"
					}
				},
				{
					"id": 1748,
					"name": "categories",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their category."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 26,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionCategory"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1504,
						"name": "DeclarationReflection.categories"
					}
				},
				{
					"id": 1746,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The children of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1502,
						"name": "DeclarationReflection.children"
					}
				},
				{
					"id": 1759,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1515,
						"name": "DeclarationReflection.comment"
					}
				},
				{
					"id": 1766,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1522,
						"name": "DeclarationReflection.cssClasses"
					}
				},
				{
					"id": 1762,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1518,
						"name": "DeclarationReflection.decorates"
					}
				},
				{
					"id": 1761,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1517,
						"name": "DeclarationReflection.decorators"
					}
				},
				{
					"id": 1724,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of this reflection.",
						"text": "Applies to function parameters.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 83,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1479,
						"name": "DeclarationReflection.defaultValue"
					}
				},
				{
					"id": 1729,
					"name": "extendedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that extend this reflection (e.g. the subclasses)."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 120,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1485,
						"name": "DeclarationReflection.extendedBy"
					}
				},
				{
					"id": 1728,
					"name": "extendedTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types this reflection extends (e.g. the parent classes)."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 115,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1484,
						"name": "DeclarationReflection.extendedTypes"
					}
				},
				{
					"id": 1757,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1513,
						"name": "DeclarationReflection.flags"
					}
				},
				{
					"id": 1722,
					"name": "getSignature",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The get signature of this declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 71,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1477,
						"name": "DeclarationReflection.getSignature"
					}
				},
				{
					"id": 1747,
					"name": "groups",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "All children grouped by their kind."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 21,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ReflectionGroup"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1503,
						"name": "DeclarationReflection.groups"
					}
				},
				{
					"id": 1765,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1521,
						"name": "DeclarationReflection.hasOwnDocument"
					}
				},
				{
					"id": 1752,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1508,
						"name": "DeclarationReflection.id"
					}
				},
				{
					"id": 1727,
					"name": "implementationOf",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection this reflection is the implementation of.",
						"text": "Applies to class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 110,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1483,
						"name": "DeclarationReflection.implementationOf"
					}
				},
				{
					"id": 1731,
					"name": "implementedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that implement this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 130,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1487,
						"name": "DeclarationReflection.implementedBy"
					}
				},
				{
					"id": 1730,
					"name": "implementedTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types this reflection implements."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 125,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1486,
						"name": "DeclarationReflection.implementedTypes"
					}
				},
				{
					"id": 1721,
					"name": "indexSignature",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The index signature of this declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 66,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1476,
						"name": "DeclarationReflection.indexSignature"
					}
				},
				{
					"id": 1726,
					"name": "inheritedFrom",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection this reflection has been inherited from.",
						"text": "Applies to interface and class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 103,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1482,
						"name": "DeclarationReflection.inheritedFrom"
					}
				},
				{
					"id": 1755,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1511,
						"name": "DeclarationReflection.kind"
					}
				},
				{
					"id": 1756,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1512,
						"name": "DeclarationReflection.kindString"
					}
				},
				{
					"id": 1753,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1509,
						"name": "DeclarationReflection.name"
					}
				},
				{
					"id": 1754,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1510,
						"name": "DeclarationReflection.originalName"
					}
				},
				{
					"id": 1725,
					"name": "overwrites",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection that has been overwritten by this reflection.",
						"text": "Applies to interface and class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 90,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1480,
						"name": "DeclarationReflection.overwrites"
					}
				},
				{
					"id": 1758,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The reflection this reflection is a child of."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 361,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1514,
						"name": "DeclarationReflection.parent"
					}
				},
				{
					"id": 1723,
					"name": "setSignature",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The set signature of this declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 76,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1478,
						"name": "DeclarationReflection.setSignature"
					}
				},
				{
					"id": 1720,
					"name": "signatures",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of call signatures attached to this declaration.",
						"text": "TypeDoc creates one declaration per function that may contain ore or more\nsignature reflections.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 61,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1792,
									"name": "SignatureReflection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1475,
						"name": "DeclarationReflection.signatures"
					}
				},
				{
					"id": 1760,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1516,
						"name": "DeclarationReflection.sources"
					}
				},
				{
					"id": 1718,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The type of the reflection.",
						"text": "If the reflection represents a variable or a property, this is the value type.<br />\nIf the reflection represents a signature, this is the return type.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 51,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1473,
						"name": "DeclarationReflection.type"
					}
				},
				{
					"id": 1732,
					"name": "typeHierarchy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Contains a simplified representation of the type hierarchy suitable for being\nrendered in templates."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 136,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1548,
								"name": "DeclarationHierarchy"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1488,
						"name": "DeclarationReflection.typeHierarchy"
					}
				},
				{
					"id": 1719,
					"name": "typeParameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 53,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1853,
									"name": "TypeParameterReflection"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1474,
						"name": "DeclarationReflection.typeParameters"
					}
				},
				{
					"id": 1763,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1519,
						"name": "DeclarationReflection.url"
					}
				},
				{
					"id": 1706,
					"name": "isReference",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Helper to check if this reflection is a reference for themes."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 43,
							"character": 19
						}
					],
					"getSignature": [
						{
							"id": 1707,
							"name": "isReference",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Helper to check if this reflection is a reference for themes."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1716,
					"name": "_ensureProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 99,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 1717,
							"name": "_ensureProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1786,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1787,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1788,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1543,
								"name": "DeclarationReflection.findReflectionByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1542,
						"name": "DeclarationReflection.findReflectionByName"
					}
				},
				{
					"id": 1777,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1778,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1534,
								"name": "DeclarationReflection.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1533,
						"name": "DeclarationReflection.getAlias"
					}
				},
				{
					"id": 1735,
					"name": "getAllSignatures",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 142,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1736,
							"name": "getAllSignatures",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1792,
									"name": "SignatureReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1492,
								"name": "DeclarationReflection.getAllSignatures"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1491,
						"name": "DeclarationReflection.getAllSignatures"
					}
				},
				{
					"id": 1781,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1782,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1783,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1538,
								"name": "DeclarationReflection.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1537,
						"name": "DeclarationReflection.getChildByName"
					}
				},
				{
					"id": 1749,
					"name": "getChildrenByKind",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/container.ts",
							"line": 34,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1750,
							"name": "getChildrenByKind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a list of all children of a certain kind.",
								"returns": "An array containing all children with the desired kind.\n"
							},
							"parameters": [
								{
									"id": 1751,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The desired kind of children."
									},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1467,
									"name": "DeclarationReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1506,
								"name": "DeclarationReflection.getChildrenByKind"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1505,
						"name": "DeclarationReflection.getChildrenByKind"
					}
				},
				{
					"id": 1770,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1771,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1772,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1527,
								"name": "DeclarationReflection.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1526,
						"name": "DeclarationReflection.getFullName"
					}
				},
				{
					"id": 1744,
					"name": "getOverwrites",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 252,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1745,
							"name": "getOverwrites",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1501,
								"name": "DeclarationReflection.getOverwrites"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1500,
						"name": "DeclarationReflection.getOverwrites"
					}
				},
				{
					"id": 1712,
					"name": "getTargetReflection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 77,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 1713,
							"name": "getTargetReflection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the reflection that is referenced. This may be another reference reflection.\nTo fully resolve any references, use [[getTargetReflectionDeep]]."
							},
							"type": {
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						}
					]
				},
				{
					"id": 1714,
					"name": "getTargetReflectionDeep",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 91,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 1715,
							"name": "getTargetReflectionDeep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the reflection that is referenced, this will fully resolve references.\nTo only resolve one reference, use [[getTargetReflection]]."
							},
							"type": {
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						}
					]
				},
				{
					"id": 1779,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1780,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1536,
								"name": "DeclarationReflection.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1535,
						"name": "DeclarationReflection.hasComment"
					}
				},
				{
					"id": 1733,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 138,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1734,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1490,
								"name": "DeclarationReflection.hasGetterOrSetter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1489,
						"name": "DeclarationReflection.hasGetterOrSetter"
					}
				},
				{
					"id": 1784,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1785,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1541,
								"name": "DeclarationReflection.isProject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1540,
						"name": "DeclarationReflection.isProject"
					}
				},
				{
					"id": 1767,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1768,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1769,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1524,
								"name": "DeclarationReflection.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1523,
						"name": "DeclarationReflection.kindOf"
					}
				},
				{
					"id": 1773,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1774,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1775,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1776,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1530,
								"name": "DeclarationReflection.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1529,
						"name": "DeclarationReflection.setFlag"
					}
				},
				{
					"id": 1742,
					"name": "setOverwrites",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 247,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1743,
							"name": "setOverwrites",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1499,
								"name": "DeclarationReflection.setOverwrites"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1498,
						"name": "DeclarationReflection.setOverwrites"
					}
				},
				{
					"id": 1740,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 228,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1741,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1497,
								"name": "DeclarationReflection.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1496,
						"name": "DeclarationReflection.toString"
					}
				},
				{
					"id": 1789,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1790,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1791,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1546,
								"name": "DeclarationReflection.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1545,
						"name": "DeclarationReflection.toStringHierarchy"
					}
				},
				{
					"id": 1737,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 169,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1738,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1739,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function that should be applied for each child reflection.\n"
									},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1494,
								"name": "DeclarationReflection.traverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1493,
						"name": "DeclarationReflection.traverse"
					}
				},
				{
					"id": 1708,
					"name": "tryGetTargetReflection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 51,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 1709,
							"name": "tryGetTargetReflection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tries to get the reflection that is referenced. This may be another reference reflection.\nTo fully resolve any references, use [[tryGetTargetReflectionDeep]]."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							}
						}
					]
				},
				{
					"id": 1710,
					"name": "tryGetTargetReflectionDeep",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/reference.ts",
							"line": 65,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1711,
							"name": "tryGetTargetReflectionDeep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tries to get the reflection that is referenced, this will fully resolve references.\nTo only resolve one reference, use [[tryGetTargetReflection]]."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1699
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1705,
						1704,
						1764,
						1748,
						1746,
						1759,
						1766,
						1762,
						1761,
						1724,
						1729,
						1728,
						1757,
						1722,
						1747,
						1765,
						1752,
						1727,
						1731,
						1730,
						1721,
						1726,
						1755,
						1756,
						1753,
						1754,
						1725,
						1758,
						1723,
						1720,
						1760,
						1718,
						1732,
						1719,
						1763
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1706
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1716,
						1786,
						1777,
						1735,
						1781,
						1749,
						1770,
						1744,
						1712,
						1714,
						1779,
						1733,
						1784,
						1767,
						1773,
						1742,
						1740,
						1789,
						1737,
						1708,
						1710
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/reference.ts",
					"line": 19,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1467,
					"name": "DeclarationReflection"
				}
			]
		},
		{
			"id": 1198,
			"name": "Reflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"shortText": "Base class for all reflection classes.",
				"text": "While generating a documentation, TypeDoc generates an instance of [[ProjectReflection]]\nas the root for all reflections within the project. All other reflections are represented\nby the [[DeclarationReflection]] class.\n\nThis base class exposes the basic properties one may use to traverse the reflection tree.\nYou can use the [[children]] and [[parent]] properties to walk the tree. The [[groups]] property\ncontains a list of all children grouped and sorted for being rendered.\n"
			},
			"children": [
				{
					"id": 1199,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1200,
							"name": "new Reflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new BaseReflection instance."
							},
							"parameters": [
								{
									"id": 1201,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1202,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								},
								{
									"id": 1203,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						}
					]
				},
				{
					"id": 1219,
					"name": "_alias",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Url safe alias for this reflection.",
						"tags": [
							{
								"tag": "see",
								"text": "[[BaseReflection.getAlias]]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 415,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1220,
					"name": "_aliases",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 417,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1216,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1211,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					}
				},
				{
					"id": 1218,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1214,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					}
				},
				{
					"id": 1213,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					}
				},
				{
					"id": 1209,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "..."
				},
				{
					"id": 1217,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 1204,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1207,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					}
				},
				{
					"id": 1208,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1205,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1206,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1210,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The reflection this reflection is a child of."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 361,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					}
				},
				{
					"id": 1212,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					}
				},
				{
					"id": 1215,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1242,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1243,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1244,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							}
						}
					]
				},
				{
					"id": 1231,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1232,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1237,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1238,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1239,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							}
						}
					]
				},
				{
					"id": 1224,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1225,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1226,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1233,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1234,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1235,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 511,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1236,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1240,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1241,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							}
						}
					]
				},
				{
					"id": 1221,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1222,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1223,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1227,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1228,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1229,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1230,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1248,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 582,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1249,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1250,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1251,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1252,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1245,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 575,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1246,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1247,
									"name": "_callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1199
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1219,
						1220,
						1216,
						1211,
						1218,
						1214,
						1213,
						1209,
						1217,
						1204,
						1207,
						1208,
						1205,
						1206,
						1210,
						1212,
						1215
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1242,
						1231,
						1237,
						1224,
						1233,
						1235,
						1240,
						1221,
						1227,
						1248,
						1250,
						1245
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 329,
					"character": 32
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1304,
					"name": "TypeParameterContainer"
				},
				{
					"type": "reference",
					"id": 1408,
					"name": "ContainerReflection"
				},
				{
					"type": "reference",
					"id": 1552,
					"name": "ParameterReflection"
				},
				{
					"type": "reference",
					"id": 1792,
					"name": "SignatureReflection"
				},
				{
					"type": "reference",
					"id": 1853,
					"name": "TypeParameterReflection"
				}
			]
		},
		{
			"id": 1366,
			"name": "ReflectionFlags",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "This must extend Array in order to work with Handlebar's each helper."
			},
			"children": [
				{
					"id": 1367,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1368,
							"name": "new ReflectionFlags",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1369,
									"name": "arrayLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1366,
								"name": "ReflectionFlags"
							}
						},
						{
							"id": 1370,
							"name": "new ReflectionFlags",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1371,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1366,
								"name": "ReflectionFlags"
							}
						}
					]
				},
				{
					"id": 1372,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 134,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 1289,
						"name": "ReflectionFlag"
					},
					"defaultValue": "..."
				},
				{
					"id": 1390,
					"name": "hasExportAssignment",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 191,
							"character": 27
						}
					],
					"getSignature": [
						{
							"id": 1391,
							"name": "hasExportAssignment",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1392,
					"name": "isAbstract",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 195,
							"character": 18
						}
					],
					"getSignature": [
						{
							"id": 1393,
							"name": "isAbstract",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1394,
					"name": "isConst",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 199,
							"character": 15
						}
					],
					"getSignature": [
						{
							"id": 1395,
							"name": "isConst",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1384,
					"name": "isExternal",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Is this a declaration from an external document?"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 171,
							"character": 18
						}
					],
					"getSignature": [
						{
							"id": 1385,
							"name": "isExternal",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Is this a declaration from an external document?"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1396,
					"name": "isLet",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 203,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 1397,
							"name": "isLet",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1386,
					"name": "isOptional",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether this reflection is an optional component or not.",
						"text": "Applies to function parameters and object members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 180,
							"character": 18
						}
					],
					"getSignature": [
						{
							"id": 1387,
							"name": "isOptional",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether this reflection is an optional component or not.",
								"text": "Applies to function parameters and object members.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1376,
					"name": "isPrivate",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Is this a private member?"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 143,
							"character": 17
						}
					],
					"getSignature": [
						{
							"id": 1377,
							"name": "isPrivate",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Is this a private member?"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1378,
					"name": "isProtected",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Is this a protected member?"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 150,
							"character": 19
						}
					],
					"getSignature": [
						{
							"id": 1379,
							"name": "isProtected",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Is this a protected member?"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1380,
					"name": "isPublic",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Is this a public member?"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 157,
							"character": 16
						}
					],
					"getSignature": [
						{
							"id": 1381,
							"name": "isPublic",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Is this a public member?"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1398,
					"name": "isReadonly",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 207,
							"character": 18
						}
					],
					"getSignature": [
						{
							"id": 1399,
							"name": "isReadonly",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1388,
					"name": "isRest",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Whether it's a rest parameter, like `foo(...params);`."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 187,
							"character": 14
						}
					],
					"getSignature": [
						{
							"id": 1389,
							"name": "isRest",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Whether it's a rest parameter, like `foo(...params);`."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1382,
					"name": "isStatic",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Is this a static member?"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 164,
							"character": 16
						}
					],
					"getSignature": [
						{
							"id": 1383,
							"name": "isStatic",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Is this a static member?"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1373,
					"name": "hasFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 136,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1374,
							"name": "hasFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1375,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1400,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 211,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1401,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1402,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1403,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1404,
					"name": "setSingleFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 247,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 1405,
							"name": "setSingleFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1406,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1407,
									"name": "set",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1367
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1372
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1390,
						1392,
						1394,
						1384,
						1396,
						1386,
						1376,
						1378,
						1380,
						1398,
						1388,
						1382
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1373,
						1400,
						1404
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 133,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Array"
				}
			]
		},
		{
			"id": 370,
			"name": "Renderer",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "The renderer processes a [[ProjectReflection]] using a [[BaseTheme]] instance and writes\nthe emitted html documents to a output directory. You can specify which theme should be used\nusing the ```--theme <name>``` command line argument.",
				"text": "Subclasses of [[BasePlugin]] that have registered themselves in the [[Renderer.PLUGIN_CLASSES]]\nwill be automatically initialized. Most of the core functionality is provided as separate plugins.\n\n[[Renderer]] is a subclass of [[EventDispatcher]] and triggers a series of events while\na project is being processed. You can listen to these events to control the flow or manipulate\nthe output.\n\n * [[Renderer.EVENT_BEGIN]]<br>\n   Triggered before the renderer starts rendering a project. The listener receives\n   an instance of [[RendererEvent]]. By calling [[RendererEvent.preventDefault]] the entire\n   render process can be canceled.\n\n   * [[Renderer.EVENT_BEGIN_PAGE]]<br>\n     Triggered before a document will be rendered. The listener receives an instance of\n     [[PageEvent]]. By calling [[PageEvent.preventDefault]] the generation of the\n     document can be canceled.\n\n   * [[Renderer.EVENT_END_PAGE]]<br>\n     Triggered after a document has been rendered, just before it is written to disc. The\n     listener receives an instance of [[PageEvent]]. When calling\n     [[PageEvent.preventDefault]] the the document will not be saved to disc.\n\n * [[Renderer.EVENT_END]]<br>\n   Triggered after the renderer has written all documents. The listener receives\n   an instance of [[RendererEvent]].\n"
			},
			"decorators": [
				{
					"name": "Component",
					"type": {
						"type": "reference",
						"name": "Component"
					},
					"arguments": {
						"options": "{ name: \"renderer\", internal: true, childClass: RendererComponent }"
					}
				}
			],
			"children": [
				{
					"id": 375,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 376,
							"name": "new Renderer",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create new Component instance."
							},
							"parameters": [
								{
									"id": 377,
									"name": "owner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1,
												"name": "Application"
											},
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"name": "DUMMY_APPLICATION_OWNER"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 417,
					"name": "componentName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"comment": {
						"shortText": "The name of this component as set by the @Component decorator."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 128,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 380,
					"name": "disableOutputCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"disableOutputCheck\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 72,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 381,
					"name": "gaID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"gaID\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 75,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 382,
					"name": "gaSite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"gaSite\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 78,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 383,
					"name": "hideGenerator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"hideGenerator\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 81,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 378,
					"name": "theme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The theme that is used to render the documentation."
					},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Theme"
							}
						]
					}
				},
				{
					"id": 379,
					"name": "themeName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"theme\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 69,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 384,
					"name": "toc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"decorators": [
						{
							"name": "BindOption",
							"type": {
								"type": "reference",
								"id": 667,
								"name": "BindOption"
							},
							"arguments": {
								"name": "\"toc\""
							}
						}
					],
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 84,
							"character": 7
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 430,
					"name": "_listenId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "A unique id that identifies this instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 401,
							"character": 25
						}
					],
					"getSignature": [
						{
							"id": 431,
							"name": "_listenId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "A unique id that identifies this instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 426,
					"name": "application",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the application / root component instance."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 174,
							"character": 19
						}
					],
					"getSignature": [
						{
							"id": 427,
							"name": "application",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the application / root component instance."
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Application"
							}
						}
					]
				},
				{
					"id": 428,
					"name": "owner",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Return the owner of this component."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 183,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 429,
							"name": "owner",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Return the owner of this component."
							},
							"type": {
								"type": "reference",
								"name": "O"
							}
						}
					]
				},
				{
					"id": 407,
					"name": "addComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 237,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 408,
							"name": "addComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 409,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "RendererComponent"
									}
								}
							],
							"parameters": [
								{
									"id": 410,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 411,
									"name": "componentClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "T"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Application"
													}
												],
												"name": "ComponentClass"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					]
				},
				{
					"id": 420,
					"name": "bubble",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 151,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 421,
							"name": "bubble",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 422,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 423,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 399,
					"name": "getComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 225,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 400,
							"name": "getComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieve a plugin instance.",
								"returns": "The instance of the plugin or undefined if no plugin with the given class is attached.\n"
							},
							"parameters": [
								{
									"id": 401,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "RendererComponent"
									}
								]
							}
						}
					]
				},
				{
					"id": 402,
					"name": "getComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 229,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 403,
							"name": "getComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "RendererComponent"
								}
							}
						}
					]
				},
				{
					"id": 397,
					"name": "getDefaultTheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 284,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 398,
							"name": "getDefaultTheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 424,
					"name": "getOptionDeclarations",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 167,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 425,
							"name": "getOptionDeclarations",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return all option declarations emitted by this component."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 876,
									"name": "DeclarationOption"
								}
							}
						}
					]
				},
				{
					"id": 404,
					"name": "hasComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 233,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 405,
							"name": "hasComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 406,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 418,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 147,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 419,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initialize this component."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 464,
					"name": "listenTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 523,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "listenTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `on`. Tell *this* object to listen to\nan event in another object... keeping track of what it's listening to\nfor easier unbinding later."
							},
							"parameters": [
								{
									"id": 466,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 467,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 468,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 469,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 470,
					"name": "listenToOnce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 557,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 471,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inversion-of-control versions of `once`."
							},
							"parameters": [
								{
									"id": 472,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 473,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						},
						{
							"id": 474,
							"name": "listenToOnce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 475,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 476,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 477,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 478,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 455,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 498,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 456,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remove one or many callbacks. If `context` is null, removes all\ncallbacks with that function. If `callback` is null, removes all\ncallbacks for the event. If `name` is null, removes all bound\ncallbacks for all events."
							},
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						},
						{
							"id": 457,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 458,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 459,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						},
						{
							"id": 460,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 461,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 462,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 463,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 432,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 410,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 433,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to a `callback` function. Passing `\"all\"` will bind\nthe callback to all events fired."
							},
							"parameters": [
								{
									"id": 434,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 435,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						},
						{
							"id": 436,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 437,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 438,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 439,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 440,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						},
						{
							"id": 441,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 442,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 443,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 444,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 445,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 446,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 468,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 447,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Bind an event to only be triggered a single time. After the first time\nthe callback is invoked, its listener will be removed. If multiple events\nare passed in using the space-separated syntax, the handler will fire\nonce for each event, not once for a combination of all events."
							},
							"parameters": [
								{
									"id": 448,
									"name": "eventMap",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventMap"
									}
								},
								{
									"id": 449,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						},
						{
							"id": 450,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 451,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 452,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								},
								{
									"id": 453,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 454,
									"name": "priority",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 394,
					"name": "prepareOutputDirectory",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 228,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 395,
							"name": "prepareOutputDirectory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Prepare the output directory. If the directory does not exist, it will be\ncreated. If the directory exists, it will be emptied.",
								"returns": "TRUE if the directory could be prepared, otherwise FALSE.\n"
							},
							"parameters": [
								{
									"id": 396,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path to the directory that should be prepared."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 392,
					"name": "prepareTheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 174,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 393,
							"name": "prepareTheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Ensure that a theme has been setup.",
								"text": "If a the user has set a theme we try to find and load it. If no theme has\nbeen specified we load the default theme.\n",
								"returns": "TRUE if a theme has been setup, otherwise FALSE.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 415,
					"name": "removeAllComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 280,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 416,
							"name": "removeAllComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 412,
					"name": "removeComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/component.ts",
							"line": 268,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 413,
							"name": "removeComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 414,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"name": "RendererComponent"
									}
								]
							}
						}
					]
				},
				{
					"id": 385,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 92,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 386,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Render the given project reflection to the specified output directory."
							},
							"parameters": [
								{
									"id": 387,
									"name": "project",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The project that should be rendered."
									},
									"type": {
										"type": "reference",
										"id": 1607,
										"name": "ProjectReflection"
									}
								},
								{
									"id": 388,
									"name": "outputDirectory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The path of the directory the documentation should be rendered to.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 389,
					"name": "renderDocument",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 134,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 390,
							"name": "renderDocument",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Render a single page.",
								"returns": "TRUE if the page has been saved to disc, otherwise FALSE.\n"
							},
							"parameters": [
								{
									"id": 391,
									"name": "page",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An event describing the current page."
									},
									"type": {
										"type": "reference",
										"name": "PageEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 479,
					"name": "stopListening",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 585,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 480,
							"name": "stopListening",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tell this object to stop listening to either specific events ... or\nto every object it's currently listening to."
							},
							"parameters": [
								{
									"id": 481,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 127,
										"name": "EventDispatcher"
									}
								},
								{
									"id": 482,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 483,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventCallback"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 484,
					"name": "trigger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/events.ts",
							"line": 621,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 485,
							"name": "trigger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument)."
							},
							"parameters": [
								{
									"id": 486,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 199,
												"name": "Event"
											},
											{
												"type": "reference",
												"name": "EventMap"
											}
										]
									}
								},
								{
									"id": 487,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 370,
								"name": "Renderer"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "getDefaultTheme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 302,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "getDefaultTheme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the path to the default theme.",
								"returns": "The path to the default theme.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 371,
					"name": "getThemeDirectory",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/output/renderer.ts",
							"line": 293,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "getThemeDirectory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the path containing the themes shipped with TypeDoc.",
								"returns": "The path to the theme directory.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						375
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						417,
						380,
						381,
						382,
						383,
						378,
						379,
						384
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						430,
						426,
						428
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						407,
						420,
						399,
						402,
						397,
						424,
						404,
						418,
						464,
						470,
						455,
						432,
						446,
						394,
						392,
						415,
						412,
						385,
						389,
						479,
						484,
						373,
						371
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/output/renderer.ts",
					"line": 59,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1,
							"name": "Application"
						},
						{
							"type": "reference",
							"name": "RendererComponent"
						}
					],
					"name": "ChildableComponent"
				}
			]
		},
		{
			"id": 1792,
			"name": "SignatureReflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1793,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1794,
							"name": "new SignatureReflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new BaseReflection instance."
							},
							"parameters": [
								{
									"id": 1795,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1796,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1253,
										"name": "ReflectionKind"
									}
								},
								{
									"id": 1797,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1792,
								"name": "SignatureReflection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1200,
								"name": "Reflection.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1199,
						"name": "Reflection.constructor"
					}
				},
				{
					"id": 1823,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1216,
						"name": "Reflection.anchor"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1318,
						"name": "TypeParameterContainer.anchor"
					}
				},
				{
					"id": 1818,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1211,
						"name": "Reflection.comment"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1313,
						"name": "TypeParameterContainer.comment"
					}
				},
				{
					"id": 1825,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1218,
						"name": "Reflection.cssClasses"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1320,
						"name": "TypeParameterContainer.cssClasses"
					}
				},
				{
					"id": 1821,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1214,
						"name": "Reflection.decorates"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1316,
						"name": "TypeParameterContainer.decorates"
					}
				},
				{
					"id": 1820,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1213,
						"name": "Reflection.decorators"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1315,
						"name": "TypeParameterContainer.decorators"
					}
				},
				{
					"id": 1817,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1209,
						"name": "Reflection.flags"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1311,
						"name": "TypeParameterContainer.flags"
					}
				},
				{
					"id": 1824,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1217,
						"name": "Reflection.hasOwnDocument"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1319,
						"name": "TypeParameterContainer.hasOwnDocument"
					}
				},
				{
					"id": 1812,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1204,
						"name": "Reflection.id"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1306,
						"name": "TypeParameterContainer.id"
					}
				},
				{
					"id": 1804,
					"name": "implementationOf",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection this reflection is the implementation of.",
						"text": "Applies to class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 44,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1803,
					"name": "inheritedFrom",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection this reflection has been inherited from.",
						"text": "Applies to interface and class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 37,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1815,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1207,
						"name": "Reflection.kind"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1309,
						"name": "TypeParameterContainer.kind"
					}
				},
				{
					"id": 1816,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1208,
						"name": "Reflection.kindString"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1310,
						"name": "TypeParameterContainer.kindString"
					}
				},
				{
					"id": 1813,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1205,
						"name": "Reflection.name"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1307,
						"name": "TypeParameterContainer.name"
					}
				},
				{
					"id": 1814,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1206,
						"name": "Reflection.originalName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1308,
						"name": "TypeParameterContainer.originalName"
					}
				},
				{
					"id": 1802,
					"name": "overwrites",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A type that points to the reflection that has been overwritten by this reflection.",
						"text": "Applies to interface and class members.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 30,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1799,
					"name": "parameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 19,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1552,
									"name": "ParameterReflection"
								}
							}
						]
					}
				},
				{
					"id": 1798,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 17,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1408,
								"name": "ContainerReflection"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 1210,
						"name": "Reflection.parent"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1312,
						"name": "TypeParameterContainer.parent"
					}
				},
				{
					"id": 1819,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1212,
						"name": "Reflection.sources"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1314,
						"name": "TypeParameterContainer.sources"
					}
				},
				{
					"id": 1801,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 23,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1800,
					"name": "typeParameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 21,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1853,
									"name": "TypeParameterReflection"
								}
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"id": 1305,
						"name": "TypeParameterContainer.typeParameters"
					}
				},
				{
					"id": 1822,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1215,
						"name": "Reflection.url"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1317,
						"name": "TypeParameterContainer.url"
					}
				},
				{
					"id": 1847,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1848,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1849,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "Reflection.findReflectionByName"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1343,
								"name": "TypeParameterContainer.findReflectionByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1242,
						"name": "Reflection.findReflectionByName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1342,
						"name": "TypeParameterContainer.findReflectionByName"
					}
				},
				{
					"id": 1836,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1837,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "Reflection.getAlias"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1332,
								"name": "TypeParameterContainer.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "Reflection.getAlias"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1331,
						"name": "TypeParameterContainer.getAlias"
					}
				},
				{
					"id": 1842,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1843,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1844,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "Reflection.getChildByName"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1338,
								"name": "TypeParameterContainer.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1237,
						"name": "Reflection.getChildByName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1337,
						"name": "TypeParameterContainer.getChildByName"
					}
				},
				{
					"id": 1829,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1830,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1831,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "Reflection.getFullName"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1325,
								"name": "TypeParameterContainer.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1224,
						"name": "Reflection.getFullName"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1324,
						"name": "TypeParameterContainer.getFullName"
					}
				},
				{
					"id": 1805,
					"name": "getParameterTypes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 49,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1806,
							"name": "getParameterTypes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an array of the parameter types."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						}
					]
				},
				{
					"id": 1838,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1839,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "Reflection.hasComment"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1334,
								"name": "TypeParameterContainer.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1233,
						"name": "Reflection.hasComment"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1333,
						"name": "TypeParameterContainer.hasComment"
					}
				},
				{
					"id": 1840,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 511,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1841,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1236,
								"name": "Reflection.hasGetterOrSetter"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1336,
								"name": "TypeParameterContainer.hasGetterOrSetter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1235,
						"name": "Reflection.hasGetterOrSetter"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1335,
						"name": "TypeParameterContainer.hasGetterOrSetter"
					}
				},
				{
					"id": 1845,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1846,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1241,
								"name": "Reflection.isProject"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1341,
								"name": "TypeParameterContainer.isProject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1240,
						"name": "Reflection.isProject"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1340,
						"name": "TypeParameterContainer.isProject"
					}
				},
				{
					"id": 1826,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1827,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1828,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1222,
								"name": "Reflection.kindOf"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1322,
								"name": "TypeParameterContainer.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1221,
						"name": "Reflection.kindOf"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1321,
						"name": "TypeParameterContainer.kindOf"
					}
				},
				{
					"id": 1832,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1833,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1834,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1835,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "Reflection.setFlag"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1328,
								"name": "TypeParameterContainer.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1227,
						"name": "Reflection.setFlag"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1327,
						"name": "TypeParameterContainer.setFlag"
					}
				},
				{
					"id": 1810,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 99,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1811,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 1249,
								"name": "Reflection.toString"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1349,
								"name": "TypeParameterContainer.toString"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1248,
						"name": "Reflection.toString"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1348,
						"name": "TypeParameterContainer.toString"
					}
				},
				{
					"id": 1850,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1851,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1852,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "Reflection.toStringHierarchy"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1351,
								"name": "TypeParameterContainer.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1250,
						"name": "Reflection.toStringHierarchy"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1350,
						"name": "TypeParameterContainer.toStringHierarchy"
					}
				},
				{
					"id": 1807,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/signature.ts",
							"line": 69,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1808,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1809,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The callback function that should be applied for each child reflection.\n"
									},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 1246,
								"name": "Reflection.traverse"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1346,
								"name": "TypeParameterContainer.traverse"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1245,
						"name": "Reflection.traverse"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1345,
						"name": "TypeParameterContainer.traverse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1793
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1823,
						1818,
						1825,
						1821,
						1820,
						1817,
						1824,
						1812,
						1804,
						1803,
						1815,
						1816,
						1813,
						1814,
						1802,
						1799,
						1798,
						1819,
						1801,
						1800,
						1822
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1847,
						1836,
						1842,
						1829,
						1805,
						1838,
						1840,
						1845,
						1826,
						1832,
						1810,
						1850,
						1807
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/signature.ts",
					"line": 14,
					"character": 32
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1198,
					"name": "Reflection"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TypeContainer"
				},
				{
					"type": "reference",
					"id": 1304,
					"name": "TypeParameterContainer"
				}
			]
		},
		{
			"id": 832,
			"name": "TSConfigReader",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 833,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 834,
							"name": "new TSConfigReader",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 832,
								"name": "TSConfigReader"
							}
						}
					]
				},
				{
					"id": 836,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/tsconfig.ts",
							"line": 20,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"tsconfig-json\"",
					"implementationOf": {
						"type": "reference",
						"id": 776,
						"name": "OptionsReader.name"
					}
				},
				{
					"id": 835,
					"name": "priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Note: Runs after the [[TypeDocReader]]."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/tsconfig.ts",
							"line": 18,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "200",
					"implementationOf": {
						"type": "reference",
						"id": 775,
						"name": "OptionsReader.priority"
					}
				},
				{
					"id": 837,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/tsconfig.ts",
							"line": 22,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 838,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 839,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 690,
										"name": "Options"
									}
								},
								{
									"id": 840,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 778,
								"name": "OptionsReader.read"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 777,
						"name": "OptionsReader.read"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						833
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						836,
						835
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						837
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/readers/tsconfig.ts",
					"line": 14,
					"character": 27
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 774,
					"name": "OptionsReader"
				}
			]
		},
		{
			"id": 841,
			"name": "TypeDocReader",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Obtains option values from typedoc.json\nor typedoc.js (discouraged since ~0.14, don't fully deprecate until API has stabilized)"
			},
			"children": [
				{
					"id": 842,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 843,
							"name": "new TypeDocReader",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 841,
								"name": "TypeDocReader"
							}
						}
					]
				},
				{
					"id": 845,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/typedoc.ts",
							"line": 19,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"typedoc-json\"",
					"implementationOf": {
						"type": "reference",
						"id": 776,
						"name": "OptionsReader.name"
					}
				},
				{
					"id": 844,
					"name": "priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Should run before the tsconfig reader so that it can specify a tsconfig file to read."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/typedoc.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100",
					"implementationOf": {
						"type": "reference",
						"id": 775,
						"name": "OptionsReader.priority"
					}
				},
				{
					"id": 861,
					"name": "findTypedocFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/typedoc.ts",
							"line": 106,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 862,
							"name": "findTypedocFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Search for the typedoc.js or typedoc.json file from the given path",
								"returns": "the typedoc.(js|json) file path or undefined\n"
							},
							"parameters": [
								{
									"id": 863,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Path to the typedoc.(js|json) file. If path is a directory\n  typedoc file will be attempted to be found at the root of this path"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 846,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/typedoc.ts",
							"line": 26,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 847,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read user configuration from a typedoc.json or typedoc.js configuration file."
							},
							"parameters": [
								{
									"id": 848,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"id": 690,
										"name": "Options"
									}
								},
								{
									"id": 849,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 778,
								"name": "OptionsReader.read"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 777,
						"name": "OptionsReader.read"
					}
				},
				{
					"id": 850,
					"name": "readFile",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/readers/typedoc.ts",
							"line": 49,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 851,
							"name": "readFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read the given options file + any extended files."
							},
							"parameters": [
								{
									"id": 852,
									"name": "file",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 853,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 690,
												"name": "Options"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 854,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 855,
															"name": "setValue",
															"kind": 2048,
															"kindString": "Method",
															"flags": {},
															"signatures": [
																{
																	"id": 856,
																	"name": "setValue",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 857,
																			"name": "key",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 858,
																			"name": "value",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													],
													"groups": [
														{
															"title": "Methods",
															"kind": 2048,
															"children": [
																855
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 859,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								},
								{
									"id": 860,
									"name": "seen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Set"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						842
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						845,
						844
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						861,
						846,
						850
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/readers/typedoc.ts",
					"line": 13,
					"character": 26
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 774,
					"name": "OptionsReader"
				}
			]
		},
		{
			"id": 1853,
			"name": "TypeParameterReflection",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1854,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1855,
							"name": "new TypeParameterReflection",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new TypeParameterReflection instance."
							},
							"parameters": [
								{
									"id": 1856,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1857,
									"name": "constraint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Type"
									}
								},
								{
									"id": 1858,
									"name": "defaultType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Type"
									}
								},
								{
									"id": 1859,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1853,
								"name": "TypeParameterReflection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1200,
								"name": "Reflection.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1199,
						"name": "Reflection.constructor"
					}
				},
				{
					"id": 1874,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1216,
						"name": "Reflection.anchor"
					}
				},
				{
					"id": 1869,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1211,
						"name": "Reflection.comment"
					}
				},
				{
					"id": 1876,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1218,
						"name": "Reflection.cssClasses"
					}
				},
				{
					"id": 1872,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1214,
						"name": "Reflection.decorates"
					}
				},
				{
					"id": 1871,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1213,
						"name": "Reflection.decorators"
					}
				},
				{
					"id": 1862,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/type-parameter.ts",
							"line": 12,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1868,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1209,
						"name": "Reflection.flags"
					}
				},
				{
					"id": 1875,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1217,
						"name": "Reflection.hasOwnDocument"
					}
				},
				{
					"id": 1863,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1204,
						"name": "Reflection.id"
					}
				},
				{
					"id": 1866,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1207,
						"name": "Reflection.kind"
					}
				},
				{
					"id": 1867,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1208,
						"name": "Reflection.kindString"
					}
				},
				{
					"id": 1864,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1205,
						"name": "Reflection.name"
					}
				},
				{
					"id": 1865,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1206,
						"name": "Reflection.originalName"
					}
				},
				{
					"id": 1860,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/type-parameter.ts",
							"line": 8,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1467,
								"name": "DeclarationReflection"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 1210,
						"name": "Reflection.parent"
					}
				},
				{
					"id": 1870,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1212,
						"name": "Reflection.sources"
					}
				},
				{
					"id": 1861,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/type-parameter.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				},
				{
					"id": 1873,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1215,
						"name": "Reflection.url"
					}
				},
				{
					"id": 1898,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1899,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1900,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "Reflection.findReflectionByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1242,
						"name": "Reflection.findReflectionByName"
					}
				},
				{
					"id": 1887,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1888,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "Reflection.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "Reflection.getAlias"
					}
				},
				{
					"id": 1893,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1894,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1895,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "Reflection.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1237,
						"name": "Reflection.getChildByName"
					}
				},
				{
					"id": 1880,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1881,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1882,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "Reflection.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1224,
						"name": "Reflection.getFullName"
					}
				},
				{
					"id": 1889,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1890,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "Reflection.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1233,
						"name": "Reflection.hasComment"
					}
				},
				{
					"id": 1891,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 511,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1892,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1236,
								"name": "Reflection.hasGetterOrSetter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1235,
						"name": "Reflection.hasGetterOrSetter"
					}
				},
				{
					"id": 1896,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1897,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1241,
								"name": "Reflection.isProject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1240,
						"name": "Reflection.isProject"
					}
				},
				{
					"id": 1877,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1878,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1879,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1222,
								"name": "Reflection.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1221,
						"name": "Reflection.kindOf"
					}
				},
				{
					"id": 1883,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1884,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1885,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1886,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "Reflection.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1227,
						"name": "Reflection.setFlag"
					}
				},
				{
					"id": 1904,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 582,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1905,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "Reflection.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1248,
						"name": "Reflection.toString"
					}
				},
				{
					"id": 1906,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1907,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1908,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "Reflection.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1250,
						"name": "Reflection.toStringHierarchy"
					}
				},
				{
					"id": 1901,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 575,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1902,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1903,
									"name": "_callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "Reflection.traverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1245,
						"name": "Reflection.traverse"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1854
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1874,
						1869,
						1876,
						1872,
						1871,
						1862,
						1868,
						1875,
						1863,
						1866,
						1867,
						1864,
						1865,
						1860,
						1870,
						1861,
						1873
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1898,
						1887,
						1893,
						1880,
						1889,
						1891,
						1896,
						1877,
						1883,
						1904,
						1906,
						1901
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/type-parameter.ts",
					"line": 5,
					"character": 36
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1198,
					"name": "Reflection"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "TypeContainer"
				}
			]
		},
		{
			"id": 658,
			"name": "UrlMapping",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {},
			"children": [
				{
					"id": 659,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 660,
							"name": "new UrlMapping",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 661,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 662,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 663,
									"name": "template",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 658,
								"name": "UrlMapping"
							}
						}
					]
				},
				{
					"id": 665,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/models/UrlMapping.ts",
							"line": 7,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 666,
					"name": "template",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/models/UrlMapping.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 664,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/output/models/UrlMapping.ts",
							"line": 5,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						659
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						665,
						666,
						664
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/output/models/UrlMapping.ts",
					"line": 4,
					"character": 23
				}
			]
		},
		{
			"id": 907,
			"name": "ArrayDeclarationOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 909,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If not specified defaults to an empty array."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 190,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 915,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The help text to be displayed to the user when --help is passed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 879,
						"name": "DeclarationOptionBase.help"
					}
				},
				{
					"id": 914,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The option name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 878,
						"name": "DeclarationOptionBase.name"
					}
				},
				{
					"id": 908,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 185,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 790,
						"name": "Array"
					},
					"overwrites": {
						"type": "reference",
						"id": 880,
						"name": "DeclarationOptionBase.type"
					}
				},
				{
					"id": 910,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional validation function that validates a potential value of this option.\nThe function must throw an Error if the validation fails and should do nothing otherwise."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 196,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 911,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 912,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 913,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						909,
						915,
						914,
						908,
						910
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 184,
					"character": 39
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 877,
					"name": "DeclarationOptionBase"
				}
			]
		},
		{
			"id": 902,
			"name": "BooleanDeclarationOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 904,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If not specified defaults to false."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 181,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 906,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The help text to be displayed to the user when --help is passed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 879,
						"name": "DeclarationOptionBase.help"
					}
				},
				{
					"id": 905,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The option name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 878,
						"name": "DeclarationOptionBase.name"
					}
				},
				{
					"id": 903,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 176,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 787,
						"name": "Boolean"
					},
					"overwrites": {
						"type": "reference",
						"id": 880,
						"name": "DeclarationOptionBase.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						904,
						906,
						905,
						903
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 175,
					"character": 41
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 877,
					"name": "DeclarationOptionBase"
				}
			]
		},
		{
			"id": 1548,
			"name": "DeclarationHierarchy",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Stores hierarchical type data.",
				"tags": [
					{
						"tag": "see",
						"text": "[[DeclarationReflection.typeHierarchy]]\n"
					}
				]
			},
			"children": [
				{
					"id": 1551,
					"name": "isTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is this the entry containing the target type?"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 1550,
					"name": "next",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The next hierarchy level."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 28,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1548,
								"name": "DeclarationHierarchy"
							}
						]
					}
				},
				{
					"id": 1549,
					"name": "types",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The types represented by this node in the hierarchy."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/declaration.ts",
							"line": 23,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Type"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1551,
						1550,
						1549
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/declaration.ts",
					"line": 19,
					"character": 37
				}
			]
		},
		{
			"id": 877,
			"name": "DeclarationOptionBase",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 879,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The help text to be displayed to the user when --help is passed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 878,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The option name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 880,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parameter type, used to convert user configuration values into the expected type.\nIf not set, the type will be a string."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 127,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 785,
								"name": "String"
							},
							{
								"type": "reference",
								"id": 786,
								"name": "Number"
							},
							{
								"type": "reference",
								"id": 787,
								"name": "Boolean"
							},
							{
								"type": "reference",
								"id": 788,
								"name": "Map"
							},
							{
								"type": "reference",
								"id": 789,
								"name": "Mixed"
							},
							{
								"type": "reference",
								"id": 790,
								"name": "Array"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						879,
						878,
						880
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 112,
					"character": 38
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 881,
					"name": "StringDeclarationOption"
				},
				{
					"type": "reference",
					"id": 891,
					"name": "NumberDeclarationOption"
				},
				{
					"type": "reference",
					"id": 902,
					"name": "BooleanDeclarationOption"
				},
				{
					"type": "reference",
					"id": 907,
					"name": "ArrayDeclarationOption"
				},
				{
					"type": "reference",
					"id": 916,
					"name": "MixedDeclarationOption"
				},
				{
					"type": "reference",
					"id": 925,
					"name": "MapDeclarationOption"
				}
			]
		},
		{
			"id": 1353,
			"name": "Decorator",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Defines the usage of a decorator."
			},
			"children": [
				{
					"id": 1356,
					"name": "arguments",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A named map of arguments the decorator is applied with."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 315,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1354,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The name of the decorator being applied."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 304,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1355,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The type declaring the decorator.\nUsually a ReferenceType instance pointing to the decorator function."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 310,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Type"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1356,
						1354,
						1355
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 300,
					"character": 26
				}
			]
		},
		{
			"id": 925,
			"name": "MapDeclarationOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 928,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unlike the rest of the option types, there is no sensible generic default for mapped option types.\nThe default value for a mapped type must be specified."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 228,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "T"
					}
				},
				{
					"id": 931,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The help text to be displayed to the user when --help is passed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 879,
						"name": "DeclarationOptionBase.help"
					}
				},
				{
					"id": 927,
					"name": "map",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Maps a given value to the option type. The map type may be a TypeScript enum.\nIn that case, when generating an error message for a mismatched key, the numeric\nkeys will not be listed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 222,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "Map"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "Record"
							}
						]
					}
				},
				{
					"id": 929,
					"name": "mapError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Optional override for the error reported when an invalid key is provided."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 233,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 930,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The option name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 878,
						"name": "DeclarationOptionBase.name"
					}
				},
				{
					"id": 926,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 215,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 788,
						"name": "Map"
					},
					"overwrites": {
						"type": "reference",
						"id": 880,
						"name": "DeclarationOptionBase.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						928,
						931,
						927,
						929,
						930,
						926
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 214,
					"character": 37
				}
			],
			"typeParameter": [
				{
					"id": 932,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 877,
					"name": "DeclarationOptionBase"
				}
			]
		},
		{
			"id": 916,
			"name": "MixedDeclarationOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 918,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If not specified defaults to undefined."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 205,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 924,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The help text to be displayed to the user when --help is passed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 879,
						"name": "DeclarationOptionBase.help"
					}
				},
				{
					"id": 923,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The option name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 878,
						"name": "DeclarationOptionBase.name"
					}
				},
				{
					"id": 917,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 200,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 789,
						"name": "Mixed"
					},
					"overwrites": {
						"type": "reference",
						"id": 880,
						"name": "DeclarationOptionBase.type"
					}
				},
				{
					"id": 919,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional validation function that validates a potential value of this option.\nThe function must throw an Error if the validation fails and should do nothing otherwise."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 211,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 920,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 921,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 922,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						918,
						924,
						923,
						917,
						919
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 199,
					"character": 39
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 877,
					"name": "DeclarationOptionBase"
				}
			]
		},
		{
			"id": 891,
			"name": "NumberDeclarationOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 895,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If not specified defaults to 0."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 166,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 901,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The help text to be displayed to the user when --help is passed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 879,
						"name": "DeclarationOptionBase.help"
					}
				},
				{
					"id": 894,
					"name": "maxValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Highest possible value."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 161,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 893,
					"name": "minValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Lowest possible value."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 156,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 900,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The option name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 878,
						"name": "DeclarationOptionBase.name"
					}
				},
				{
					"id": 892,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 151,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 786,
						"name": "Number"
					},
					"overwrites": {
						"type": "reference",
						"id": 880,
						"name": "DeclarationOptionBase.type"
					}
				},
				{
					"id": 896,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional validation function that validates a potential value of this option.\nThe function must throw an Error if the validation fails and should do nothing otherwise."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 172,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 897,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 898,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 899,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						895,
						901,
						894,
						893,
						900,
						892,
						896
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 150,
					"character": 40
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 877,
					"name": "DeclarationOptionBase"
				}
			]
		},
		{
			"id": 774,
			"name": "OptionsReader",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Describes an option reader that discovers user configuration and converts it to the\nTypeDoc format."
			},
			"children": [
				{
					"id": 776,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The name of this reader so that it may be removed by plugins without the plugin\naccessing the instance performing the read. Multiple readers may have the same\nname."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 41,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 775,
					"name": "priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Readers will be processed according to their priority.\nA higher priority indicates that the reader should be called *later* so that\nit can override options set by lower priority readers.",
						"text": "Note that to preserve expected behavior, the argv reader must have both the lowest\npriority so that it may set the location of config files used by other readers and\nthe highest priority so that it can override settings from lower priority readers.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/options.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 777,
					"name": "read",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 778,
							"name": "read",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Read options from the reader's source and place them in the options parameter.\nOptions without a declared name may be treated as if they were declared with type\n[[ParameterType.Mixed]]. Options which have been declared must be converted to the\ncorrect type. As an alternative to doing this conversion in the reader,\nthe reader may use [[Options.setValue]], which will correctly convert values."
							},
							"parameters": [
								{
									"id": 779,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the options container that provides declarations"
									},
									"type": {
										"type": "reference",
										"id": 690,
										"name": "Options"
									}
								},
								{
									"id": 780,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Logger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						776,
						775
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						777
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/options.ts",
					"line": 24,
					"character": 30
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 864,
					"name": "ArgumentsReader"
				},
				{
					"type": "reference",
					"id": 832,
					"name": "TSConfigReader"
				},
				{
					"type": "reference",
					"id": 841,
					"name": "TypeDocReader"
				}
			]
		},
		{
			"id": 881,
			"name": "StringDeclarationOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 883,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If not specified defaults to the empty string."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 136,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 890,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The help text to be displayed to the user when --help is passed."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 879,
						"name": "DeclarationOptionBase.help"
					}
				},
				{
					"id": 884,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional hint for the type of input expected, will be displayed in the help output."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 141,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 782,
								"name": "File"
							},
							{
								"type": "reference",
								"id": 783,
								"name": "Directory"
							}
						]
					}
				},
				{
					"id": 889,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The option name."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 878,
						"name": "DeclarationOptionBase.name"
					}
				},
				{
					"id": 882,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 131,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 785,
								"name": "String"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 880,
						"name": "DeclarationOptionBase.type"
					}
				},
				{
					"id": 885,
					"name": "validate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional validation function that validates a potential value of this option.\nThe function must throw an Error if the validation fails and should do nothing otherwise."
					},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 147,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 886,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 887,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 888,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						883,
						890,
						884,
						889,
						882,
						885
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 130,
					"character": 40
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 877,
					"name": "DeclarationOptionBase"
				}
			]
		},
		{
			"id": 792,
			"name": "TypeDocOptionMap",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Describes all TypeDoc options. Used internally to provide better types when fetching options.\nExternal consumers should likely use [[TypeDocOptions]] instead."
			},
			"children": [
				{
					"id": 814,
					"name": "categorizeByGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 60,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 813,
					"name": "categoryOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 59,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 812,
					"name": "defaultCategory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 58,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 821,
					"name": "disableOutputCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 67,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 802,
					"name": "disableSources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 46,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 795,
					"name": "entryPoints",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 39,
							"character": 15
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 796,
					"name": "exclude",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 40,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 798,
					"name": "excludeExternals",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 42,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 801,
					"name": "excludeNotDocumented",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 45,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 799,
					"name": "excludePrivate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 43,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 800,
					"name": "excludeProtected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 44,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 810,
					"name": "excludeTags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 56,
							"character": 15
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 797,
					"name": "externalPattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 41,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 817,
					"name": "gaID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 63,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 818,
					"name": "gaSite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 64,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 816,
					"name": "gitRemote",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 62,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 815,
					"name": "gitRevision",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 61,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 822,
					"name": "help",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 69,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 819,
					"name": "hideGenerator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 65,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 809,
					"name": "includeVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 55,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 803,
					"name": "includes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 806,
					"name": "json",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 51,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 828,
					"name": "listInvalidSymbolLinks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 75,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 827,
					"name": "logLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 74,
							"character": 12
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "LogLevel"
						}
					}
				},
				{
					"id": 826,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 73,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 829,
					"name": "markedOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 76,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 804,
					"name": "media",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 48,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 808,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 54,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 793,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 36,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 805,
					"name": "out",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 50,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 825,
					"name": "plugin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 72,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 811,
					"name": "readme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 57,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 824,
					"name": "showConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 71,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 807,
					"name": "theme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 53,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 820,
					"name": "toc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 66,
							"character": 7
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 794,
					"name": "tsconfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 823,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/utils/options/declaration.ts",
							"line": 70,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						814,
						813,
						812,
						821,
						802,
						795,
						796,
						798,
						801,
						799,
						800,
						810,
						797,
						817,
						818,
						816,
						815,
						822,
						819,
						809,
						803,
						806,
						828,
						827,
						826,
						829,
						804,
						808,
						793,
						805,
						825,
						811,
						824,
						807,
						820,
						794,
						823
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 35,
					"character": 33
				}
			]
		},
		{
			"id": 1304,
			"name": "TypeParameterContainer",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1318,
					"name": "anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the anchor of this child.\nTODO: Reflections shouldn't know anchors exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 393,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1216,
						"name": "Reflection.anchor"
					}
				},
				{
					"id": 1313,
					"name": "comment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The parsed documentation comment attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 366,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"name": "Comment"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1211,
						"name": "Reflection.comment"
					}
				},
				{
					"id": 1320,
					"name": "cssClasses",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of generated css classes that should be applied to representations of this\nreflection in the generated markup.\nTODO: Reflections shouldn't know about CSS. Move this property to the correct serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 408,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1218,
						"name": "Reflection.cssClasses"
					}
				},
				{
					"id": 1316,
					"name": "decorates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all types that are decorated by this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 381,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Type"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1214,
						"name": "Reflection.decorates"
					}
				},
				{
					"id": 1315,
					"name": "decorators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all decorators attached to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 376,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1353,
									"name": "Decorator"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1213,
						"name": "Reflection.decorators"
					}
				},
				{
					"id": 1311,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 356,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1366,
						"name": "ReflectionFlags"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 1209,
						"name": "Reflection.flags"
					}
				},
				{
					"id": 1319,
					"name": "hasOwnDocument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Is the url pointing to an individual document?",
						"text": "When FALSE, the url points to an anchor tag on a page of a different reflection.\nTODO: Reflections shouldn't know how they are rendered. Move this to the correct serializer.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 401,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1217,
						"name": "Reflection.hasOwnDocument"
					}
				},
				{
					"id": 1306,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Unique id of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 333,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1204,
						"name": "Reflection.id"
					}
				},
				{
					"id": 1309,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The kind of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 348,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1253,
						"name": "ReflectionKind"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1207,
						"name": "Reflection.kind"
					}
				},
				{
					"id": 1310,
					"name": "kindString",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The human readable string representation of the kind of this reflection.\nSet during the resolution phase by GroupPlugin"
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 354,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1208,
						"name": "Reflection.kindString"
					}
				},
				{
					"id": 1307,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The symbol name of this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1205,
						"name": "Reflection.name"
					}
				},
				{
					"id": 1308,
					"name": "originalName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The original name of the TypeScript declaration."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 343,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1206,
						"name": "Reflection.originalName"
					}
				},
				{
					"id": 1312,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The reflection this reflection is a child of."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 361,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"id": 1198,
								"name": "Reflection"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1210,
						"name": "Reflection.parent"
					}
				},
				{
					"id": 1314,
					"name": "sources",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A list of all source files that contributed to this reflection."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 371,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "SourceReference"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1212,
						"name": "Reflection.sources"
					}
				},
				{
					"id": 1305,
					"name": "typeParameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 275,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1853,
									"name": "TypeParameterReflection"
								}
							}
						]
					}
				},
				{
					"id": 1317,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The url of this reflection in the generated documentation.\nTODO: Reflections shouldn't know urls exist. Move this to a serializer."
					},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 387,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1215,
						"name": "Reflection.url"
					}
				},
				{
					"id": 1342,
					"name": "findReflectionByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 554,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1343,
							"name": "findReflectionByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Try to find a reflection by its name.",
								"returns": "The found reflection or null.\n"
							},
							"parameters": [
								{
									"id": 1344,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1243,
								"name": "Reflection.findReflectionByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1242,
						"name": "Reflection.findReflectionByName"
					}
				},
				{
					"id": 1331,
					"name": "getAlias",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 469,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1332,
							"name": "getAlias",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return an url safe alias for this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1232,
								"name": "Reflection.getAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1231,
						"name": "Reflection.getAlias"
					}
				},
				{
					"id": 1337,
					"name": "getChildByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 521,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1338,
							"name": "getChildByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a child by its name.",
								"returns": "The found child or undefined.\n"
							},
							"parameters": [
								{
									"id": 1339,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1198,
										"name": "Reflection"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1238,
								"name": "Reflection.getChildByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1237,
						"name": "Reflection.getChildByName"
					}
				},
				{
					"id": 1324,
					"name": "getFullName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 451,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1325,
							"name": "getFullName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the full name of this reflection.",
								"text": "The full name contains the name of this reflection and the names of all parent reflections.\n",
								"returns": "The full name of this reflection.\n"
							},
							"parameters": [
								{
									"id": 1326,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Separator used to join the names of the reflections."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1225,
								"name": "Reflection.getFullName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1224,
						"name": "Reflection.getFullName"
					}
				},
				{
					"id": 1333,
					"name": "hasComment",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 507,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1334,
							"name": "hasComment",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Has this reflection a visible comment?",
								"returns": "TRUE when this reflection has a visible comment.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1234,
								"name": "Reflection.hasComment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1233,
						"name": "Reflection.hasComment"
					}
				},
				{
					"id": 1335,
					"name": "hasGetterOrSetter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 511,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1336,
							"name": "hasGetterOrSetter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1236,
								"name": "Reflection.hasGetterOrSetter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1235,
						"name": "Reflection.hasGetterOrSetter"
					}
				},
				{
					"id": 1340,
					"name": "isProject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 545,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1341,
							"name": "isProject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return whether this reflection is the root / project reflection."
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 1607,
									"name": "ProjectReflection"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1241,
								"name": "Reflection.isProject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1240,
						"name": "Reflection.isProject"
					}
				},
				{
					"id": 1321,
					"name": "kindOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 438,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1322,
							"name": "kindOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Test whether this reflection is of the given kind."
							},
							"parameters": [
								{
									"id": 1323,
									"name": "kind",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1254,
												"name": "Project"
											},
											{
												"type": "reference",
												"id": 1255,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 1256,
												"name": "Namespace"
											},
											{
												"type": "reference",
												"id": 1257,
												"name": "Enum"
											},
											{
												"type": "reference",
												"id": 1258,
												"name": "EnumMember"
											},
											{
												"type": "reference",
												"id": 1259,
												"name": "Variable"
											},
											{
												"type": "reference",
												"id": 1260,
												"name": "Function"
											},
											{
												"type": "reference",
												"id": 1261,
												"name": "Class"
											},
											{
												"type": "reference",
												"id": 1262,
												"name": "Interface"
											},
											{
												"type": "reference",
												"id": 1263,
												"name": "Constructor"
											},
											{
												"type": "reference",
												"id": 1264,
												"name": "Property"
											},
											{
												"type": "reference",
												"id": 1265,
												"name": "Method"
											},
											{
												"type": "reference",
												"id": 1266,
												"name": "CallSignature"
											},
											{
												"type": "reference",
												"id": 1267,
												"name": "IndexSignature"
											},
											{
												"type": "reference",
												"id": 1268,
												"name": "ConstructorSignature"
											},
											{
												"type": "reference",
												"id": 1269,
												"name": "Parameter"
											},
											{
												"type": "reference",
												"id": 1270,
												"name": "TypeLiteral"
											},
											{
												"type": "reference",
												"id": 1271,
												"name": "TypeParameter"
											},
											{
												"type": "reference",
												"id": 1272,
												"name": "Accessor"
											},
											{
												"type": "reference",
												"id": 1273,
												"name": "GetSignature"
											},
											{
												"type": "reference",
												"id": 1274,
												"name": "SetSignature"
											},
											{
												"type": "reference",
												"id": 1275,
												"name": "ObjectLiteral"
											},
											{
												"type": "reference",
												"id": 1276,
												"name": "TypeAlias"
											},
											{
												"type": "reference",
												"id": 1277,
												"name": "Event"
											},
											{
												"type": "reference",
												"id": 1278,
												"name": "Reference"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1253,
													"name": "ReflectionKind"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1222,
								"name": "Reflection.kindOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1221,
						"name": "Reflection.kindOf"
					}
				},
				{
					"id": 1327,
					"name": "setFlag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 462,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1328,
							"name": "setFlag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set a flag on this reflection."
							},
							"parameters": [
								{
									"id": 1329,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1289,
										"name": "ReflectionFlag"
									}
								},
								{
									"id": 1330,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1228,
								"name": "Reflection.setFlag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1227,
						"name": "Reflection.setFlag"
					}
				},
				{
					"id": 1348,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 582,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1349,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1249,
								"name": "Reflection.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1248,
						"name": "Reflection.toString"
					}
				},
				{
					"id": 1350,
					"name": "toStringHierarchy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 591,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1351,
							"name": "toStringHierarchy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a string representation of this reflection and all of its children."
							},
							"parameters": [
								{
									"id": 1352,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Used internally to indent child reflections.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1251,
								"name": "Reflection.toStringHierarchy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1250,
						"name": "Reflection.toStringHierarchy"
					}
				},
				{
					"id": 1345,
					"name": "traverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/models/reflections/abstract.ts",
							"line": 575,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1346,
							"name": "traverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Traverse all potential child reflections of this reflection.",
								"text": "The given callback will be invoked for all children, signatures and type parameters\nattached to this reflection.\n"
							},
							"parameters": [
								{
									"id": 1347,
									"name": "_callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TraverseCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1246,
								"name": "Reflection.traverse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1245,
						"name": "Reflection.traverse"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1318,
						1313,
						1320,
						1316,
						1315,
						1311,
						1319,
						1306,
						1309,
						1310,
						1307,
						1308,
						1312,
						1314,
						1305,
						1317
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1342,
						1331,
						1337,
						1324,
						1333,
						1335,
						1340,
						1321,
						1327,
						1348,
						1350,
						1345
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 274,
					"character": 39
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1198,
					"name": "Reflection"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 1467,
					"name": "DeclarationReflection"
				},
				{
					"type": "reference",
					"id": 1792,
					"name": "SignatureReflection"
				}
			]
		},
		{
			"id": 876,
			"name": "DeclarationOption",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 236,
					"character": 29
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 881,
						"name": "StringDeclarationOption"
					},
					{
						"type": "reference",
						"id": 891,
						"name": "NumberDeclarationOption"
					},
					{
						"type": "reference",
						"id": 902,
						"name": "BooleanDeclarationOption"
					},
					{
						"type": "reference",
						"id": 916,
						"name": "MixedDeclarationOption"
					},
					{
						"type": "reference",
						"id": 925,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "MapDeclarationOption"
					},
					{
						"type": "reference",
						"id": 907,
						"name": "ArrayDeclarationOption"
					}
				]
			}
		},
		{
			"id": 933,
			"name": "DeclarationOptionToOptionType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 244,
					"character": 41
				}
			],
			"typeParameter": [
				{
					"id": 934,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 876,
						"name": "DeclarationOption"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"name": "T"
				},
				"extendsType": {
					"type": "reference",
					"id": 881,
					"name": "StringDeclarationOption"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "string"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"name": "T"
					},
					"extendsType": {
						"type": "reference",
						"id": 891,
						"name": "NumberDeclarationOption"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "number"
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"name": "T"
						},
						"extendsType": {
							"type": "reference",
							"id": 902,
							"name": "BooleanDeclarationOption"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"name": "T"
							},
							"extendsType": {
								"type": "reference",
								"id": 916,
								"name": "MixedDeclarationOption"
							},
							"trueType": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"name": "T"
								},
								"extendsType": {
									"type": "reference",
									"id": 925,
									"typeArguments": [
										{
											"type": "inferred",
											"name": "U"
										}
									],
									"name": "MapDeclarationOption"
								},
								"trueType": {
									"type": "reference",
									"name": "U"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"name": "T"
									},
									"extendsType": {
										"type": "reference",
										"id": 907,
										"name": "ArrayDeclarationOption"
									},
									"trueType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						}
					}
				}
			}
		},
		{
			"id": 830,
			"name": "KeyToDeclaration",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Converts a given TypeDoc option key to the type of the declaration expected."
			},
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 82,
					"character": 28
				}
			],
			"typeParameter": [
				{
					"id": 831,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"id": 792,
							"name": "TypeDocOptionMap"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"name": "K"
					},
					"objectType": {
						"type": "reference",
						"id": 792,
						"name": "TypeDocOptionMap"
					}
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"trueType": {
					"type": "reference",
					"id": 902,
					"name": "BooleanDeclarationOption"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"name": "K"
						},
						"objectType": {
							"type": "reference",
							"id": 792,
							"name": "TypeDocOptionMap"
						}
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"id": 881,
						"name": "StringDeclarationOption"
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"name": "K"
							},
							"objectType": {
								"type": "reference",
								"id": 792,
								"name": "TypeDocOptionMap"
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "number"
						},
						"trueType": {
							"type": "reference",
							"id": 891,
							"name": "NumberDeclarationOption"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"id": 792,
									"name": "TypeDocOptionMap"
								}
							},
							"extendsType": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"trueType": {
								"type": "reference",
								"id": 907,
								"name": "ArrayDeclarationOption"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "intrinsic",
									"name": "unknown"
								},
								"extendsType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"name": "K"
									},
									"objectType": {
										"type": "reference",
										"id": 792,
										"name": "TypeDocOptionMap"
									}
								},
								"trueType": {
									"type": "reference",
									"id": 916,
									"name": "MixedDeclarationOption"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 792,
											"name": "TypeDocOptionMap"
										}
									},
									"extendsType": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											{
												"type": "inferred",
												"name": "U"
											}
										],
										"name": "Record"
									},
									"trueType": {
										"type": "reference",
										"id": 925,
										"typeArguments": [
											{
												"type": "reference",
												"name": "U"
											}
										],
										"name": "MapDeclarationOption"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						}
					}
				}
			}
		},
		{
			"id": 791,
			"name": "TypeDocOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "An interface describing all TypeDoc specific options. Generated from a\nmap which contains more information about each option for better types when\ndefining said options."
			},
			"sources": [
				{
					"fileName": "src/lib/utils/options/declaration.ts",
					"line": 8,
					"character": 26
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"id": 792,
						"name": "TypeDocOptionMap"
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"name": "K"
						},
						"objectType": {
							"type": "reference",
							"id": 792,
							"name": "TypeDocOptionMap"
						}
					},
					"extendsType": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "inferred",
								"name": "U"
							}
						],
						"name": "Record"
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Exclude"
							},
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"name": "K"
									},
									"objectType": {
										"type": "reference",
										"id": 792,
										"name": "TypeDocOptionMap"
									}
								}
							}
						]
					},
					"falseType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"name": "K"
						},
						"objectType": {
							"type": "reference",
							"id": 792,
							"name": "TypeDocOptionMap"
						}
					}
				}
			}
		},
		{
			"id": 667,
			"name": "BindOption",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"decorates": [
				{
					"type": "reference",
					"id": 11,
					"name": "loggerType"
				},
				{
					"type": "reference",
					"id": 12,
					"name": "exclude"
				},
				{
					"type": "reference",
					"id": 13,
					"name": "entryPoints"
				},
				{
					"type": "reference",
					"id": 14,
					"name": "optionsFile"
				},
				{
					"type": "reference",
					"id": 15,
					"name": "project"
				},
				{
					"type": "reference",
					"id": 234,
					"name": "name"
				},
				{
					"type": "reference",
					"id": 235,
					"name": "externalPattern"
				},
				{
					"type": "reference",
					"id": 237,
					"name": "excludeExternals"
				},
				{
					"type": "reference",
					"id": 238,
					"name": "excludeNotDocumented"
				},
				{
					"type": "reference",
					"id": 239,
					"name": "excludePrivate"
				},
				{
					"type": "reference",
					"id": 240,
					"name": "excludeProtected"
				},
				{
					"type": "reference",
					"id": 379,
					"name": "themeName"
				},
				{
					"type": "reference",
					"id": 380,
					"name": "disableOutputCheck"
				},
				{
					"type": "reference",
					"id": 381,
					"name": "gaID"
				},
				{
					"type": "reference",
					"id": 382,
					"name": "gaSite"
				},
				{
					"type": "reference",
					"id": 383,
					"name": "hideGenerator"
				},
				{
					"type": "reference",
					"id": 384,
					"name": "toc"
				}
			],
			"sources": [
				{
					"fileName": "src/lib/utils/options/options.ts",
					"line": 340,
					"character": 26
				}
			],
			"signatures": [
				{
					"id": 668,
					"name": "BindOption",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Binds an option to the given property. Does not register the option.",
						"tags": [
							{
								"tag": "since",
								"text": "v0.16.3\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 669,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "logger"
									},
									{
										"type": "literal",
										"value": "options"
									},
									{
										"type": "literal",
										"value": "tsconfig"
									},
									{
										"type": "literal",
										"value": "entryPoints"
									},
									{
										"type": "literal",
										"value": "exclude"
									},
									{
										"type": "literal",
										"value": "externalPattern"
									},
									{
										"type": "literal",
										"value": "excludeExternals"
									},
									{
										"type": "literal",
										"value": "excludePrivate"
									},
									{
										"type": "literal",
										"value": "excludeProtected"
									},
									{
										"type": "literal",
										"value": "excludeNotDocumented"
									},
									{
										"type": "literal",
										"value": "disableSources"
									},
									{
										"type": "literal",
										"value": "includes"
									},
									{
										"type": "literal",
										"value": "media"
									},
									{
										"type": "literal",
										"value": "out"
									},
									{
										"type": "literal",
										"value": "json"
									},
									{
										"type": "literal",
										"value": "theme"
									},
									{
										"type": "literal",
										"value": "name"
									},
									{
										"type": "literal",
										"value": "includeVersion"
									},
									{
										"type": "literal",
										"value": "excludeTags"
									},
									{
										"type": "literal",
										"value": "readme"
									},
									{
										"type": "literal",
										"value": "defaultCategory"
									},
									{
										"type": "literal",
										"value": "categoryOrder"
									},
									{
										"type": "literal",
										"value": "categorizeByGroup"
									},
									{
										"type": "literal",
										"value": "gitRevision"
									},
									{
										"type": "literal",
										"value": "gitRemote"
									},
									{
										"type": "literal",
										"value": "gaID"
									},
									{
										"type": "literal",
										"value": "gaSite"
									},
									{
										"type": "literal",
										"value": "hideGenerator"
									},
									{
										"type": "literal",
										"value": "toc"
									},
									{
										"type": "literal",
										"value": "disableOutputCheck"
									},
									{
										"type": "literal",
										"value": "help"
									},
									{
										"type": "literal",
										"value": "version"
									},
									{
										"type": "literal",
										"value": "showConfig"
									},
									{
										"type": "literal",
										"value": "plugin"
									},
									{
										"type": "literal",
										"value": "logLevel"
									},
									{
										"type": "literal",
										"value": "listInvalidSymbolLinks"
									},
									{
										"type": "literal",
										"value": "markedOptions"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 670,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "K"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 671,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/utils/options/options.ts",
									"line": 342,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 672,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 679,
											"name": "IK",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PropertyKey"
											}
										}
									],
									"parameters": [
										{
											"id": 673,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "union",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 674,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 675,
																			"name": "application",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/lib/utils/options/options.ts",
																					"line": 343,
																					"character": 26
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 1,
																				"name": "Application"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				675
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/lib/utils/options/options.ts",
																			"line": 343,
																			"character": 13
																		}
																	]
																}
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 676,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 677,
																			"name": "options",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/lib/utils/options/options.ts",
																					"line": 343,
																					"character": 53
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 690,
																				"name": "Options"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				677
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/lib/utils/options/options.ts",
																			"line": 343,
																			"character": 43
																		}
																	]
																}
															}
														]
													},
													{
														"type": "mapped",
														"parameter": "K2",
														"parameterType": {
															"type": "reference",
															"name": "IK"
														},
														"templateType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"name": "K"
															},
															"objectType": {
																"type": "reference",
																"name": "TypeDocOptionValues"
															}
														}
													}
												]
											}
										},
										{
											"id": 678,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IK"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 680,
					"name": "BindOption",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Binds an option to the given property. Does not register the option.",
						"tags": [
							{
								"tag": "since",
								"text": "v0.16.3\n"
							},
							{
								"tag": "privateremarks",
								"text": "\nThis overload is intended for plugin use only with looser type checks. Do not use internally.\n"
							}
						]
					},
					"parameters": [
						{
							"id": 681,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "NeverIfInternal"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 682,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/utils/options/options.ts",
									"line": 357,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 683,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 684,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 685,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 686,
																	"name": "application",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/utils/options/options.ts",
																			"line": 358,
																			"character": 25
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 1,
																		"name": "Application"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		686
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/lib/utils/options/options.ts",
																	"line": 358,
																	"character": 11
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 687,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 688,
																	"name": "options",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/utils/options/options.ts",
																			"line": 358,
																			"character": 52
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 690,
																		"name": "Options"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		688
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/lib/utils/options/options.ts",
																	"line": 358,
																	"character": 42
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 689,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PropertyKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 218,
			"name": "normalizePath",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils/fs.ts",
					"line": 38,
					"character": 29
				}
			],
			"signatures": [
				{
					"id": 219,
					"name": "normalizePath",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Normalize the given path.",
						"returns": "The normalized path.\n"
					},
					"parameters": [
						{
							"id": 220,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The path that should be normalized."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 216,
			"name": "resetReflectionID",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/models/reflections/abstract.ts",
					"line": 30,
					"character": 33
				}
			],
			"signatures": [
				{
					"id": 217,
					"name": "resetReflectionID",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Reset the reflection id.",
						"text": "Used by the test cases to ensure the reflection ids won't change between runs.\n"
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1909,
			"name": "splitUnquotedString",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/models/reflections/utils.ts",
					"line": 1,
					"character": 35
				}
			],
			"signatures": [
				{
					"id": 1910,
					"name": "splitUnquotedString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1911,
							"name": "input",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1912,
							"name": "delimiter",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"kind": 2,
			"children": [
				935,
				1279
			]
		},
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				781,
				784,
				1289,
				1253,
				1357
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1,
				864,
				1408,
				221,
				1467,
				488,
				199,
				127,
				605,
				633,
				690,
				1552,
				1607,
				1698,
				1198,
				1366,
				370,
				1792,
				832,
				841,
				1853,
				658
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				907,
				902,
				1548,
				877,
				1353,
				925,
				916,
				891,
				774,
				881,
				792,
				1304
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				876,
				933,
				830,
				791
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				667,
				218,
				216,
				1909
			]
		}
	]
}